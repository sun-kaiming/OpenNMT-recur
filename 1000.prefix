{"x1": "+ 7 - 8 - 14 + 2 + 9 - 6 - 12 + 4 + 11 - 4 - 10 + 6 + 13 - 2 - 8 + 8 + 15 + 0 - 6 + 10 + 17 + 2 - 4 + 12 + 19 + 4 - 2 + 14 + 21", "x2": "add sub relu n x_0_2 mul INT+ 1 0 INT- 1", "tree": "((relu(n) sub x_0_2) add (10 mul -1))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 10 - 5 - 5 + 3 + 8 + 9 + 4 + 4 + 4 + 9 + 10 + 5 + 5 + 5 + 10 + 11 + 6 + 6 + 6 + 11 + 12 + 7 + 7 + 7 + 12 + 13 + 8 + 8 + 8 + 13 + 14 + 9", "x2": "abs add sign sub x_0_1 add INT+ 3 sign n x_0_5", "tree": "abs((sign((x_0_1 sub (3 add sign(n)))) add x_0_5))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul abs n n", "tree": "(abs(n) mul n)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 5 + 1 - 8 + 2 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign sign x_0_5", "tree": "sign(sign(x_0_5))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 5 - 6 + 8 + 8 - 8 + 8 + 8 - 8 + 8 + 8 - 8 + 8 + 8 - 8 + 8 + 8 - 8 + 8 + 8 - 8 + 8 + 8 - 8 + 8 + 8 - 8 + 8 + 8 - 8 + 8", "x2": "idiv x_0_1 sign idiv abs INT+ 1 mul mul n add x_0_4 n sub x_0_3 x_0_2", "tree": "(x_0_1 idiv sign((abs(1) idiv ((n mul (x_0_4 add n)) mul (x_0_3 sub x_0_2)))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 9 - 6 + 1 - 11 + 12 - 15 + 24 - 18 + 37 - 20 + 51 - 21 + 66 - 21 + 82 - 20 + 99 - 18 + 117 - 15 + 136 - 11 + 156 - 6 + 177 + 0 + 199 + 7 + 222", "x2": "add sub add x_0_3 x_0_2 x_0_1 n", "tree": "(((x_0_3 add x_0_2) sub x_0_1) add n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 - 2 - 2 + 4 + 14 - 4 + 2 + 0 - 2 + 18 + 106 + 194 + 2222 + 4250 + 4 278 + 19 7140 + 74 8282 + 354 4270 + 3469 4418 + 1 53 8984 + 17 7500 7294 + 69 9949 192 + 1102 1683 5778 + 3236 5101 7142 + 7 6574 757 5630 + 60 9356 958 7898 + 601 6986 8830 3350 - 60 9356 958 7898", "x2": "sub abs mul x_0_1 mod x_0_1 n add abs x_0_2 relu add idiv x_0_1 mod n INT+ 1 n", "tree": "(abs((x_0_1 mul (x_0_1 mod n))) sub (abs(x_0_2) add relu(((x_0_1 idiv (n mod 1)) add n))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 1 - 5 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1", "x2": "idiv sqr sign sub relu x_0_3 INT- 1 0 sign x_0_3", "tree": "((sign((relu(x_0_3) sub -10)))**2 idiv sign(x_0_3))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 9 - 10 - 27 - 40 - 135 - 240 - 945 - 1920 - 8505 - 1 9200 - 9 3555 - 23 400 - 121 6215 - 322 5600 - 1824 3225 - 5160 9600 - 3 1013 4825 - 9 2897 2800 - 58 9256 1675 - 185 7945 6000 - 1237 4379 5175 - 4087 4803 2000 - 2 8461 728 9025 - 9 8099 5276 8000 - 71 1526 8222 5625 - 255 587 7196 8000 - 1921 1224 2009 1875 - 7141 6456 1510 4000 - 5 5712 5501 8266 4375", "x2": "mul n x_0_2", "tree": "(n mul x_0_2)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 10 - 2 + 5 + 11 + 16 + 20 + 23 + 25 + 26 + 26 + 25 + 23 + 20 + 16 + 11 + 5 - 2 - 10 - 19 - 29 - 40 - 52 - 65 - 79 - 94 - 110 - 127 - 145", "x2": "sub mul relu sqr sign abs abs sub x_0_1 INT+ 6 add INT+ 1 0 x_0_1 n", "tree": "((relu((sign(abs(abs((x_0_1 sub 6)))))**2) mul (10 add x_0_1)) sub n)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 1 - 1 - 2 + 1 - 9 + 5 + 1 + 0 + 0 + 1 + 0 + 5 + 1 + 0 + 0 + 1 + 0 + 5 + 1 + 0 + 0 + 1 + 0 + 5 + 1 + 0 + 0 + 1 + 0 + 5 + 1 + 0", "x2": "relu x_0_6", "tree": "relu(x_0_6)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 6 + 8 + 3 + 6 + 3 + 14 + 6 + 20 + 9 + 34 + 15 + 54 + 24 + 88 + 39 + 142 + 63 + 230 + 102 + 372 + 165 + 602 + 267 + 974 + 432 + 1576 + 699 + 2550 + 1131 + 4126 + 1830", "x2": "add relu x_0_4 x_0_2", "tree": "(relu(x_0_4) add x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 7 + 5 - 8 - 3 + 25 - 35 + 25 - 40 - 15 + 125 - 175 + 125 - 200 - 75 + 625 - 875 + 625 - 1000 - 375 + 3125 - 4375 + 3125 - 5000 - 1875 + 1 5625 - 2 1875 + 1 5625 - 2 5000 - 9375 + 7 8125 - 10 9375", "x2": "mul x_0_5 idiv INT+ 5 sign n", "tree": "(x_0_5 mul (5 idiv sign(n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 3 - 9 - 3 - 18 - 6 - 36 - 12 - 108 - 36 - 324 - 108 - 1296 - 432 - 5184 - 1728 - 2 5920 - 8640 - 12 9600 - 4 3200 - 77 7600 - 25 9200 - 466 5600 - 155 5200 - 3265 9200 - 1088 6400 - 2 2861 4400 - 7620 4800 - 18 2891 5200", "x2": "mul idiv n INT- 4 abs abs x_0_2", "tree": "((n idiv -4) mul abs(abs(x_0_2)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 5 - 10 - 5 + 4 + 56 - 40 - 80 - 40 + 32 + 448 - 320 - 640 - 320 + 256 + 3584 - 2560 - 5120 - 2560 + 2048 + 2 8672 - 2 480 - 4 960 - 2 480 + 1 6384 + 22 9376 - 16 3840 - 32 7680 - 16 3840 + 13 1072 + 183 5008 - 131 720", "x2": "mul x_0_5 INT+ 8", "tree": "(x_0_5 mul 8)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 9 - 3 + 10 - 8 - 2 + 11 - 7 - 1 + 12 - 6 + 0 + 13 - 5 + 1 + 14 - 4 + 2 + 15 - 3 + 3 + 16 - 2 + 4 + 17 - 1 + 5 + 18 + 0 + 6 + 19", "x2": "add x_0_3 abs sign relu INT- 4", "tree": "(x_0_3 add abs(sign(relu(-4))))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 9 + 0 - 5 + 4 + 9 + 0 - 5 + 4 + 9 + 0 - 5 + 4 + 9 + 0 - 5 + 4 + 9 + 0 - 5 + 4 + 9 + 0 - 5 + 4 + 9 + 0 - 5 + 4", "x2": "add sub INT+ 4 x_0_2 relu idiv mod INT+ 5 sign mul x_0_1 INT- 9 n", "tree": "((4 sub x_0_2) add relu(((5 mod sign((x_0_1 mul -9))) idiv n)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 7 + 1 - 8 + 8 + 0 + 9 - 7 + 1 - 8 + 8 + 0 + 9 - 7 + 1 - 8 + 8 + 0 + 9 - 7 + 1 - 8 + 8 + 0 + 9 - 7 + 1 - 8 + 8 + 0 + 9", "x2": "sub abs sign sub add sign INT- 9 idiv x_0_3 INT- 2 INT+ 2 x_0_3", "tree": "(abs(sign(((sign(-9) add (x_0_3 idiv -2)) sub 2))) sub x_0_3)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 2 + 6 - 8 + 30 - 48 + 210 - 384 + 1890 - 3840 + 2 790 - 4 6080 + 27 270 - 64 5120 + 405 4050 - 1032 1920 + 6891 8850 - 1 8579 4560 + 13 945 8150 - 37 1589 1200 + 274 9862 1150 - 817 4960 6400 + 6324 6828 6450 - 1 9619 9055 3600 + 15 8117 716 1250 - 51 117 5439 3600 + 426 9160 9335 3750 - 1428 3291 2302 800 + 1 2380 5667 725 8750", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 4 - 2 - 5 - 3 + 6 + 20 + 10 + 25 + 15 - 20 - 89 - 38 - 112 - 61 + 115 + 461 + 207 + 578 + 324 - 555 - 2284 - 1013 - 2867 - 1596 + 2800 + 1 1446 + 5092 + 1 4363 + 8009 - 1 3970 - 5 7199 - 2 5428", "x2": "add mul INT- 5 x_0_5 mul abs relu n relu relu sign add INT- 1 0 n", "tree": "((-5 mul x_0_5) add (abs(relu(n)) mul relu(relu(sign((-10 add n))))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 3 - 1 - 2 + 5 + 1 - 4 - 3 + 3 + 6 - 3 - 7 + 0 + 9 + 3 - 10 - 7 + 9 + 12 - 7 - 17 + 2 + 21 + 5 - 24 - 15 + 23 + 26 - 19 - 39 + 8 + 49 + 7", "x2": "add x_0_5 x_0_4", "tree": "(x_0_5 add x_0_4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 6 + 8 + 9 + 1 + 0 + 8 + 9 + 1 + 0 + 8 + 9 + 1 + 0 + 8 + 9 + 1 + 0 + 8 + 9 + 1 + 0 + 8 + 9 + 1 + 0 + 8 + 9 + 1 + 0", "x2": "sub add INT+ 9 relu n add n relu x_0_2", "tree": "((9 add relu(n)) sub (n add relu(x_0_2)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 3 - 10 - 9 + 4 + 9 + 34 + 137 + 171 + 25 + 254 + 5865 + 11 197 + 1 2164 + 540 + 32 41 + 1 9793 8799 + 794 1015 + 94 1887 + 36 4763 + 5985 5033 1033 + 153 8982 850 + 5 6692 9715 + 4674 7392 + 2145 163 333 + 47 2360 132 5173 + 1 2006 5418 2286 + 421 3476 8515 + 1 3094 5411 729 2116 + 2760 6569 2684 3484 3886 3648 + 3728 8631 1857 4202 + 93 8400 7251 5807", "x2": "mod add n mul sub relu sub x_0_5 INT- 4 x_0_4 sqr INT+ 9 mul INT+ 6 sqr x_0_5", "tree": "((n add ((relu((x_0_5 sub -4)) sub x_0_4) mul (9)**2)) mod (6 mul (x_0_5)**2))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 5 - 8 + 9 + 4 + 5 - 8 + 9 + 4 + 5 - 8 + 9 + 4 + 5 - 8 + 9 + 4 + 5 - 8 + 9 + 4 + 5 - 8 + 9 + 4 + 5 - 8 + 9 + 4 + 5 - 8", "x2": "mul x_0_4 INT+ 1", "tree": "(x_0_4 mul 1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 392 + 343 + 294 + 245 + 196 + 147 + 98 + 49 + 441 + 392 + 343 + 294 + 245 + 196 + 147 + 98 + 49 + 441 + 392 + 343 + 294 + 245 + 196 + 147 + 98 + 49 + 441", "x2": "mul add sign n relu abs mod n add sign abs x_0_1 INT- 1 0 sqr INT+ 7", "tree": "((sign(n) add relu(abs((n mod (sign(abs(x_0_1)) add -10))))) mul (7)**2)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 6 + 8 + 5 + 10 - 112 - 180 - 197 - 238 + 102 + 280 + 305 + 402 - 644 - 1204 - 1305 - 1622 + 1490 + 3144 + 3421 + 4346 - 5016 - 1 4 - 1 861 - 1 3662 + 1 4398 + 2 9336 + 3 1881 + 4 258 - 4 3948 - 8 8788 - 9 6449", "x2": "add mul mul add x_0_4 mul INT+ 9 n idiv INT- 6 add INT- 7 abs INT+ 5 INT- 1 n", "tree": "((((x_0_4 add (9 mul n)) mul (-6 idiv (-7 add abs(5)))) mul -1) add n)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 3 + 5 + 5 + 7 + 7 + 9 + 9 + 11 + 11 + 13 + 13 + 15 + 15 + 17 + 17 + 19 + 19 + 21 + 21 + 23 + 23 + 25 + 25 + 27 + 27 + 29 + 29", "x2": "relu add n idiv add n n abs x_0_1", "tree": "relu((n add ((n add n) idiv abs(x_0_1))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882 + 968 + 1058 + 1152 + 1250 + 1352 + 1458", "x2": "abs mul n add n n", "tree": "abs((n mul (n add n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 1 + 2 - 3 + 0 + 6 + 0 + 12 + 0 + 3 + 0 + 0 + 0 + 6 + 9 + 9 + 0 + 0 + 0 + 0 + 9 + 9 + 9 + 0 + 0 + 0 + 0 + 9 + 9 + 9 + 0", "x2": "relu sub sub INT+ 9 x_0_4 sqr x_0_3", "tree": "relu(((9 sub x_0_4) sub (x_0_3)**2))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 6 - 7 - 13 - 21 - 31 - 43 - 57 - 73 - 91 - 111 - 133 - 157 - 183 - 211 - 241 - 273 - 307 - 343 - 381 - 421 - 463 - 507 - 553 - 601 - 651 - 703 - 757 - 813", "x2": "sub idiv idiv x_0_1 x_0_1 INT- 2 add sqr n n", "tree": "(((x_0_1 idiv x_0_1) idiv -2) sub ((n)**2 add n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 5 - 2 - 6 + 4 + 5 + 6 + 11 + 13 + 15 + 21 + 24 + 27 + 34 + 38 + 42 + 50 + 55 + 60 + 69 + 75 + 81 + 91 + 98 + 105 + 116 + 124 + 132 + 144 + 153 + 162", "x2": "add n relu x_0_3", "tree": "(n add relu(x_0_3))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 9 - 4 + 10 - 357 - 1071 - 4 4986 - 15 4214 - 728 8089 - 2775 9591 - 14 4308 6608 - 59 9622 5870 - 3376 8955 4361 - 1 5110 7667 8831 - 91 1776 2276 4078 - 435 1960 7972 9198 - 2 7900 6902 5536 2229 - 14 1005 409 893 8983 - 954 2127 2449 5664 6396 - 5076 2249 9232 9776 3078 - 36 695 1999 2838 6769 9917 - 201 199 1974 6668 2311 7871 - 1 4932 8766 9830 7661 8441 2034 - 8 6841 1129 5305 9908 8468 3350 - 671 9830 5837 5844 668 5311 5217 - 4064 1841 8819 5178 4008 5492 5671 - 32 6585 2596 5833 47 2567 9840 7496 - 204 8357 5149 6166 5220 217 6722 1534 - 1 7047 8177 5247 666 512 1156 2182 8129 - 11 611 7122 2634 8741 3990 1551 5455 4031 - 951 2714 9644 459 7489 5807 7737 7850 3478", "x2": "sub x_0_4 mul add n n abs mul INT+ 9 x_0_2", "tree": "(x_0_4 sub ((n add n) mul abs((9 mul x_0_2))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 16 + 48 + 192 + 960 + 5760 + 4 320 + 32 2560 + 290 3040 + 2903 400 + 3 1933 4400 + 38 3201 2800 + 498 1616 6400 + 6974 2632 9600 + 10 4613 9494 4000 + 167 3823 1910 4000 + 2845 4994 2476 8000 + 5 1218 9896 4582 4000 + 97 3160 8032 7065 6000 + 1946 3216 654 1312 0 + 4 872 7537 3736 7552 0 + 89 9200 5822 2208 6144 0 + 2068 1613 3911 798 1312 0 + 4 9635 8721 3865 9155 1488 0 + 124 896 8034 6647 8878 7200 0 + 3226 3316 8901 2845 846 7200 0 + 8 7110 9556 334 6817 2861 4400 0 + 243 9106 7568 9371 884 120 3200 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824 + 1 5625 + 1 7576 + 1 9683", "x2": "mul sqr n n", "tree": "((n)**2 mul n)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 9 - 3 - 8 - 5 - 115 + 546 - 4039 + 3 2072 - 28 9926 + 290 4430 - 3199 3500 + 3 8430 6468 - 49 9975 3577 + 700 3721 1580 - 1 510 3807 6785 + 16 8227 5813 1392 - 286 718 8404 5204 + 5150 5545 8262 1302 - 9 7880 5067 9326 4546 + 195 7946 5910 2791 7780 - 4112 2885 9211 5122 3735 + 9 481 6802 4661 4458 9648 - 208 1303 7708 3775 7064 7727 + 4995 5989 5719 2463 6557 800 - 12 4900 2546 5129 1879 1986 4850 + 324 7641 8733 223 56 7581 5362 - 8769 1950 993 4147 3476 5450 5104 + 24 5551 4479 5523 6264 6325 6212 3492 - 712 1354 2014 4034 420 7939 7766 3861 + 2 1365 368 9688 3011 9313 9896 437 4620 - 66 2343 3283 790 4165 7301 4550 2527 3645", "x2": "idiv mul sqr n sub add sub sub x_0_4 x_0_1 n INT- 9 n n", "tree": "(((n)**2 mul ((((x_0_4 sub x_0_1) sub n) add -9) sub n)) idiv n)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 3 - 8 + 0 + 5 + 11 + 18 + 26 + 28 + 23 + 17 + 17 + 24 + 32 + 34 + 29 + 23 + 23 + 30 + 38 + 40 + 35 + 29 + 29 + 36 + 44 + 46 + 41 + 35", "x2": "sub relu add x_0_1 n mod mul INT- 6 INT+ 2 add abs INT- 1 relu x_0_2", "tree": "(relu((x_0_1 add n)) sub ((-6 mul 2) mod (abs(-1) add relu(x_0_2))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 5 - 8 - 2 - 4 + 3 + 2 + 10 + 10 + 19 + 20 + 30 + 32 + 43 + 46 + 58 + 62 + 75 + 80 + 94 + 100 + 115 + 122 + 138 + 146 + 163 + 172 + 190 + 200 + 219", "x2": "add x_0_2 mod n add n n", "tree": "(x_0_2 add (n mod (n add n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 5 + 10 + 9 - 1995 - 3994 + 7 - 143 6392 + 9 - 223 6630 - 8 437 9509 - 10 3420 2228 - 16 1037 3587 + 14 + 15 + 16 - 1 8036 1841 7423 + 18 + 19 - 2308 6315 7430 1420 - 2597 2105 2108 9099 + 22 - 350 9119 9929 3815 8377 + 24 - 457 1090 5171 1681 4215 - 61 7605 1187 5711 5874 3494 - 67 3751 386 4412 6408 3813 - 87 7649 3792 8642 8329 2772 + 29 + 30 + 31", "x2": "mod n mul mul INT- 1 0 x_0_4 mul INT- 8 x_0_3", "tree": "(n mod ((-10 mul x_0_4) mul (-8 mul x_0_3)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 64 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324", "x2": "relu sqr sub sub relu sign n INT- 8 n", "tree": "relu((((relu(sign(n)) sub -8) sub n))**2)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "add idiv mod n n add relu idiv sign relu n sign n n sqr n", "tree": "(((n mod n) idiv (relu((sign(relu(n)) idiv sign(n))) add n)) add (n)**2)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441", "x2": "sqr sqr relu n", "tree": "((relu(n))**2)**2", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 5 - 6 - 10 + 1 + 25 + 144 + 196 + 81 + 16 + 25 + 169 + 36 + 100 + 225 + 1600 + 1 + 289 + 2025 + 16 4025 + 441 + 1 6900 + 45 8329 + 169 6636 5025 + 9 + 289 + 6 8644 + 47 815 5456 + 841 + 5 4289 + 29 4393 564", "x2": "sqr sub n mod x_0_1 x_0_4", "tree": "((n sub (x_0_1 mod x_0_4)))**2", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 8 + 16 + 48 + 192 + 960 + 5760 + 4 320 + 32 2560 + 290 3040 + 2903 400 + 3 1933 4400 + 38 3201 2800 + 498 1616 6400 + 6974 2632 9600 + 10 4613 9494 4000 + 167 3823 1910 4000 + 2845 4994 2476 8000 + 5 1218 9896 4582 4000 + 97 3160 8032 7065 6000 + 1946 3216 654 1312 0 + 4 872 7537 3736 7552 0 + 89 9200 5822 2208 6144 0 + 2068 1613 3911 798 1312 0 + 4 9635 8721 3865 9155 1488 0 + 124 896 8034 6647 8878 7200 0 + 3226 3316 8901 2845 846 7200 0 + 8 7110 9556 334 6817 2861 4400 0 + 243 9106 7568 9371 884 120 3200 0", "x2": "abs mul x_0_1 n", "tree": "abs((x_0_1 mul n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 1 + 0 + 3 + 16 + 85 + 516 + 3619 + 2 8960 + 26 649 + 260 6500 + 2867 1511 + 3 4405 8144 + 44 7275 5885 + 626 1858 2404 + 9392 7873 6075 + 15 284 5977 7216 + 255 4838 1621 2689 + 4598 7086 9182 8420 + 8 7375 4651 4473 9999 + 174 7509 3028 9480 0 + 3669 7695 3607 9080 21 + 8 734 9297 9373 9760 484 + 185 6903 3852 5601 4481 1155 + 4456 5681 2461 4434 7546 7744 + 11 1414 2031 1536 868 8669 3625 + 289 6769 2809 9938 2590 5403 4276 + 7821 2770 5869 8332 9944 5892 5479 + 21 8995 7576 4355 3323 8448 4991 3440", "x2": "mul add x_0_1 sign n n", "tree": "((x_0_1 add sign(n)) mul n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 8 + 4 + 0 - 8 + 1 - 9 + 3 - 1 - 9 + 0 - 10 + 2 - 2 - 10 - 1 - 11 + 1 - 3 - 11 - 2 - 12 + 0 - 4 - 12 - 3 - 13 - 1 - 5 - 13 - 4 - 14", "x2": "sub x_0_5 sign abs sign mod x_0_4 n", "tree": "(x_0_5 sub sign(abs(sign((x_0_4 mod n)))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 6 + 9 + 4 + 7 - 1 + 3 + 13 + 11 + 6 + 2 + 16 + 24 + 17 + 8 + 18 + 40 + 41 + 25 + 26 + 58 + 81 + 66 + 51 + 84 + 139 + 147 + 117 + 135 + 223 + 286 + 264", "x2": "add x_0_4 x_0_5", "tree": "(x_0_4 add x_0_5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 5 + 12 - 40 + 120 - 480 + 1680 - 7680 + 3 240 - 15 3600 + 66 5280 - 368 6400 + 1729 7280 - 1 321 9200 + 5 1891 8400 - 33 301 4400 + 176 4322 5600 - 1189 851 8400 + 6704 4257 2800 - 4 7563 4073 6000 + 28 1585 8805 7600 - 209 2789 9238 4000 + 1295 2950 5064 9600 - 1 45 3916 3443 2000 + 6 4764 7525 3248 0 - 52 2360 3649 9046 4000 + 349 7296 6367 5392 0 - 2925 2180 4394 6598 4000 + 2 284 3204 9317 2736 0", "x2": "mul add n mod n relu add mul add sign sign INT- 1 n INT+ 2 n x_0_2", "tree": "((n add (n mod relu((((sign(sign(-1)) add n) mul 2) add n)))) mul x_0_2)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 7 + 10 + 2 + 9 + 7 - 1 + 1 + 2 + 2 + 9 + 10 + 5 + 7 + 8 + 8 + 10 + 14 + 17 + 19 + 20 + 15 + 20 + 16 + 19 + 21 + 25 + 23 + 28 + 24 + 27 + 24 + 31", "x2": "add add mul INT+ 4 mod relu mul n x_0_1 n n mod x_0_5 INT- 8", "tree": "(((4 mul (relu((n mul x_0_1)) mod n)) add n) add (x_0_5 mod -8))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 0 + 9 + 0 + 0 + 2 + 3 + 2 + 0 + 4 + 7 + 0 + 0 + 10 + 11 + 22 + 23 + 32 + 29 + 44 + 0 + 46 + 19 + 30 + 0 + 52 + 23 + 72 + 39", "x2": "relu add n sub add add sqr INT- 2 x_0_2 INT- 8 relu sqr mod x_0_2 INT+ 1 0", "tree": "relu((n add ((((-2)**2 add x_0_2) add -8) sub relu(((x_0_2 mod 10))**2))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 49 + 36 + 25 + 16 + 9 + 4 + 1 + 0 + 49 + 36 + 25", "x2": "sqr mod n INT- 8", "tree": "((n mod -8))**2", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 100 + 576 + 900 + 2304 + 4900 + 9216 + 1 5876 + 2 5600 + 3 9204 + 5 7600 + 8 1796 + 11 2896 + 15 2100 + 20 704 + 26 100 + 33 1776 + 41 7316 + 51 8400 + 63 6804 + 77 4400 + 93 3156 + 111 5136 + 132 2500 + 155 7504 + 182 2500 + 211 9936 + 245 2356", "x2": "sqr mul sub mod INT- 3 n INT- 5 mul n INT+ 2", "tree": "((((-3 mod n) sub -5) mul (n mul 2)))**2", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 7 - 7 - 3 - 26 - 35 - 42 - 78 - 102 - 126 - 181 - 226 - 273 - 353 - 425 - 501 - 612 - 717 - 828 - 976 - 1120 - 1272 - 1463 - 1652 - 1851 - 2091 - 2331 - 2583 - 2878 - 3175 - 3486", "x2": "sub INT- 1 0 idiv abs mul relu n add sub INT- 7 x_0_3 sqr n n", "tree": "(-10 sub (abs((relu(n) mul ((-7 sub x_0_3) add (n)**2))) idiv n))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 4 - 4 + 3 + 2 + 4 + 4 + 4 + 4 + 5 + 6 + 4 + 6 + 8 + 4 + 7 + 10 + 4 + 8 + 12 + 4 + 9 + 14 + 4 + 10 + 16 + 4 + 11 + 18 + 4", "x2": "relu relu relu relu abs add mod relu n INT+ 3 x_0_3", "tree": "relu(relu(relu(relu(abs(((relu(n) mod 3) add x_0_3))))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 4 - 8 - 6 + 6 + 3 + 4 + 9 + 6 + 7 + 12 + 9 + 10 + 15 + 12 + 13 + 18 + 15 + 16 + 21 + 18 + 19 + 24 + 21 + 22 + 27 + 24 + 25 + 30 + 27 + 28", "x2": "sub n mul mod idiv n n sub x_0_1 x_0_3 idiv abs INT- 2 INT+ 1", "tree": "(n sub (((n idiv n) mod (x_0_1 sub x_0_3)) mul (abs(-2) idiv 1)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 5 + 3 - 6 - 4 + 5 - 6 - 7 + 8 - 9 - 10 + 11 - 12 - 13 + 14 - 15 - 16 + 17 - 18 - 19 + 20 - 21 - 22 + 23 - 24 - 25 + 26 - 27 - 28 + 29 - 30", "x2": "mul n sign x_0_3", "tree": "(n mul sign(x_0_3))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 8 + 7 + 9 + 19 + 28 + 31 + 37 + 51 + 64 + 71 + 81 + 99 + 116 + 127 + 141 + 163 + 184 + 199 + 217 + 243 + 268 + 287 + 309 + 339 + 368 + 391 + 417 + 451", "x2": "sub relu add sqr n idiv n n relu relu relu x_0_2", "tree": "(relu(((n)**2 add (n idiv n))) sub relu(relu(relu(x_0_2))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 8 - 10 - 10 + 1 + 8 + 4 + 67 + 85 + 85 - 14 - 77 - 41 - 608 - 770 - 770 + 121 + 688 + 364 + 5467 + 6925 + 6925 - 1094 - 6197 - 3281 - 4 9208 - 6 2330 - 6 2330 + 9841 + 5 5768 + 2 9524 + 44 2867 + 56 965 + 56 965", "x2": "add INT- 5 add sub mul sub INT- 1 0 sign mul INT+ 4 INT- 9 x_0_6 n n", "tree": "(-5 add ((((-10 sub sign((4 mul -9))) mul x_0_6) sub n) add n))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 9 - 54 - 324 - 1944 - 1 1664 - 6 9984 - 41 9904 - 251 9424 - 1511 6544 - 9069 9264 - 5 4419 5584 - 32 6517 3504 - 195 9104 1024 - 1175 4624 6144 - 7052 7747 6864 - 4 2316 6486 1184 - 25 3899 8916 7104 - 152 3399 3500 2624 - 914 396 1001 5744 - 5484 2376 6009 4464 - 3 2905 4259 6056 6784 - 19 7432 5557 6340 704 - 118 4595 3345 8040 4224 - 710 7572 74 8242 5344 - 4264 5432 448 9455 2064 - 2 5587 2592 2693 6731 2384 - 15 3523 5553 6162 387 4304 - 92 1141 3321 6972 2324 5824", "x2": "mul x_0_1 sub INT+ 7 sign INT+ 1 0", "tree": "(x_0_1 mul (7 sub sign(10)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 4 + 10 - 6 - 4 + 65 - 18 - 7 + 544 - 135 - 40 + 6017 - 1584 - 481 + 8 4280 - 2 3715 - 7648 + 143 2811 - 42 6816 - 14 5255 + 2865 6280 - 896 3073 - 319 5544 + 6 5909 4509 - 2 1511 3680 - 7988 8525 + 171 3645 7312 - 58 806 9279 - 22 3687 8616 + 4969 5726 2135 - 1742 4207 8280", "x2": "mul sub x_0_3 INT- 3 n", "tree": "((x_0_3 sub -3) mul n)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 0 + 9 - 1 + 45 + 6 + 226 + 30 + 1129 + 149 + 5645 + 746 + 2 8226 + 3730 + 14 1129 + 1 8649 + 70 5645 + 9 3246 + 352 8226 + 46 6230 + 1764 1129 + 233 1149 + 8820 5645 + 1165 5746 + 4 4102 8226 + 5827 8730 + 22 514 1129 + 2 9139 3649 + 110 2570 5645", "x2": "sub mul abs x_0_2 INT+ 5 sub mod relu idiv n INT+ 3 INT+ 2 relu mod x_0_2 abs INT+ 2", "tree": "((abs(x_0_2) mul 5) sub ((relu((n idiv 3)) mod 2) sub relu((x_0_2 mod abs(2)))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign mod relu abs mod INT+ 8 n mod n abs INT+ 4", "tree": "sign((relu(abs((8 mod n))) mod (n mod abs(4))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 8 - 9 - 1 + 5 + 9 + 0 + 0 + 6 + 10 + 1 + 1 + 7 + 11 + 2 + 2 + 8 + 12 + 3 + 3 + 9 + 13 + 4 + 4 + 10 + 14 + 5 + 5 + 11 + 15 + 6", "x2": "relu sub x_0_4 idiv sub INT+ 5 abs abs n n", "tree": "relu((x_0_4 sub ((5 sub abs(abs(n))) idiv n)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 9 + 11 + 15 + 23 + 39 + 71 + 135 + 263 + 519 + 1031 + 2055 + 4103 + 8199 + 1 6391 + 3 2775 + 6 5543 + 13 1079 + 26 2151 + 52 4295 + 104 8583 + 209 7159 + 419 4311 + 838 8615 + 1677 7223 + 3355 4439 + 6710 8871 + 1 3421 7735", "x2": "add x_0_1 mod mod INT- 7 INT- 1 0 relu x_0_1", "tree": "(x_0_1 add ((-7 mod -10) mod relu(x_0_1)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 4 - 13 - 12 - 28 - 30 - 49 - 54 - 76 - 74 - 98 - 98 - 124 - 126 - 154 - 158 - 188 - 194 - 226 - 234 - 268 - 278 - 314 - 326 - 364 - 378 - 418 - 434 - 476", "x2": "add x_0_2 mul relu n idiv sub INT- 1 0 mul sign mul n abs INT+ 6 n n", "tree": "(x_0_2 add (relu(n) mul ((-10 sub (sign((n mul abs(6))) mul n)) idiv n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 1 + 6 + 7 + 1 + 1 - 7 + 0 + 1 + 2 + 2 + 2 + 4 - 5 + 1 + 5 - 2 + 3 + 9 - 1 + 4 - 4 + 0 + 4 - 3 + 5 + 5 - 2 + 5 - 2 + 2", "x2": "idiv n sub INT+ 5 mul mod abs relu x_0_4 n x_0_1", "tree": "(n idiv (5 sub ((abs(relu(x_0_4)) mod n) mul x_0_1)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 10 + 21 + 36 + 55 + 78 + 105 + 136 + 171 + 210 + 253 + 300 + 351 + 406 + 465 + 528 + 595 + 666 + 741 + 820 + 903 + 990 + 1081 + 1176 + 1275 + 1378 + 1485", "x2": "sub add n sqr n sub relu INT- 6 mul abs add n mul n INT- 2 n", "tree": "((n add (n)**2) sub (relu(-6) sub (abs((n add (n mul -2))) mul n)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 5 + 9 + 7 - 2 + 0 + 7 + 7 + 0 + 0 + 7 + 7 + 0 + 0 + 7 + 7 + 0 + 0 + 7 + 7 + 0 + 0 + 7 + 7 + 0 + 0 + 7 + 7 + 0 + 0", "x2": "sub relu INT+ 7 abs relu x_0_2", "tree": "(relu(7) sub abs(relu(x_0_2)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 4 - 13 - 16 - 27 - 36 - 57 - 68 - 83 - 104 - 121 - 148 - 175 - 204 - 225 - 264 - 299 - 332 - 365 - 400 - 451 - 484 - 537 - 576 - 627 - 680 - 737 - 788", "x2": "sub mod mod n add INT- 3 x_0_1 sub mod sqr INT- 1 0 INT- 3 INT+ 1 0 sqr n", "tree": "(((n mod (-3 add x_0_1)) mod (((-10)**2 mod -3) sub 10)) sub (n)**2)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 3 + 5 + 6 + 6 + 7 + 7 + 0 + 0 + 1 + 7 + 1 + 7 + 1 + 7 + 1 + 7 + 1 + 7 + 4 + 0 + 5 + 1 + 6 + 2 + 7 + 3 + 0 + 0", "x2": "mod sub mul sqr add INT+ 1 0 idiv n INT- 9 n x_0_1 INT+ 8", "tree": "(((((10 add (n idiv -9)))**2 mul n) sub x_0_1) mod 8)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 10 - 6 + 10 - 9 - 10 + 68 + 165 - 90 + 71 + 860 + 1156 - 1990 + 2200 + 1 1162 + 4565 - 1 8506 + 7 1373 + 16 1468 - 12 5182 - 9 1310 + 188 7638 + 198 2278 - 371 3774 + 300 4358 + 4947 3915 + 246 864 - 5352 1516 + 1 8810 7938 + 13 4761 7404 - 14 1039 1270 - 7628 6794 + 77 3214 2806", "x2": "sub mul sub relu add INT+ 9 x_0_4 x_0_5 n INT+ 1 0", "tree": "(((relu((9 add x_0_4)) sub x_0_5) mul n) sub 10)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 7 - 19 - 37 - 35 + 3 + 1 + 3 - 3 + 19 - 87 + 531 - 3707 + 2 9667 - 26 6991 + 266 9923 - 2936 9139 + 3 5242 9683 - 45 8158 5863 + 641 4220 2099 - 9621 3303 1467 + 15 3941 2850 3491 - 261 7001 8455 9327 + 4710 6033 2206 7907 - 8 9501 4631 1929 211 + 179 29 2623 8580 4243 - 3759 614 5101 188 9079 + 8 2699 3519 2222 4155 9763 - 190 2085 942 1115 5587 4523", "x2": "add mul sub INT+ 5 n x_0_1 relu sub n mod INT+ 2 n", "tree": "(((5 sub n) mul x_0_1) add relu((n sub (2 mod n))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 9 - 20 + 31 + 75 - 131 - 308 + 515 + 1223 - 2071 - 4904 + 8271 + 1 9603 - 3 3099 - 7 8428 + 13 2379 + 31 3695 - 52 9535 - 125 4800 + 211 8119 + 501 9179 - 847 2499 - 2007 6740 + 3388 9971 + 8030 6935 - 1 3555 9911 - 3 2122 7768 + 5 4223 9615 + 12 8491 1043", "x2": "sub add sub mod mod n x_0_1 INT+ 2 add mul INT+ 4 x_0_2 INT+ 2 sign INT+ 3 n", "tree": "(((((n mod x_0_1) mod 2) sub ((4 mul x_0_2) add 2)) add sign(3)) sub n)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 20 - 30 - 10 - 50 - 30 - 40 - 30 - 70 - 50 - 10 - 50 - 60 - 130 - 50 - 130 - 60 - 10 - 50 - 50 - 30 - 30 - 20 - 150 - 200 - 130 - 170 - 250", "x2": "mul INT+ 1 0 sub mod sub x_0_1 INT- 5 relu n n", "tree": "(10 mul (((x_0_1 sub -5) mod relu(n)) sub n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 8 - 7 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900", "x2": "sqr mod n sub sqr n x_0_3", "tree": "((n mod ((n)**2 sub x_0_3)))**2", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 9 + 2 + 1 - 5 - 9 + 6 + 7 - 10 - 9 + 14 + 15 - 20 - 18 + 14 + 15 - 20 - 18 + 22 + 23 - 20 - 36 + 22 + 23 - 40 - 36 + 30 + 31 - 40 - 36 + 30 + 31", "x2": "sub mod n x_0_4 mul sign x_0_2 abs n", "tree": "((n mod x_0_4) sub (sign(x_0_2) mul abs(n)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 5 - 6 + 0 + 1 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1 - 1 + 4 + 4 - 1", "x2": "sub mod INT+ 5 relu mod sign x_0_2 n sign INT+ 7", "tree": "((5 mod relu((sign(x_0_2) mod n))) sub sign(7))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 4 + 8 + 8 + 8 + 12 + 4 + 16 + 12 + 16 + 20 + 28 + 24 + 40 + 40 + 28 + 36 + 48 + 48 + 48 + 52 + 44 + 56 + 52 + 56 + 60 + 68 + 64", "x2": "mul sub n sub idiv n INT+ 3 mod sub x_0_1 abs sqr mul n INT+ 3 INT- 5 INT+ 4", "tree": "((n sub ((n idiv 3) sub ((x_0_1 sub abs(((n mul 3))**2)) mod -5))) mul 4)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 10 - 21 - 64 - 257 - 1286 - 7717 - 5 4020 - 43 2161 - 388 9450 - 3889 4501 - 4 2783 9512 - 51 3407 4145 - 667 4296 3886 - 9344 149 4405 - 14 160 2241 6076 - 224 2563 5865 7217 - 3812 3580 9717 2690 - 6 8622 4457 4910 8421 - 130 3826 4692 3306 0 - 2607 6529 3846 6120 1 - 5 4760 7117 778 8520 22 - 120 4735 6575 7134 7440 485 - 2770 8920 1241 4099 1121 1156 - 6 6501 4082 9793 8378 6906 7745 - 166 2535 2074 4845 9467 2669 3626 - 4322 5915 3936 5994 6148 9403 4277 - 11 6709 9715 6288 1854 6021 3892 5480 - 326 7879 2037 6069 1928 8598 8991 3441", "x2": "add idiv x_0_1 abs x_0_1 mul mod n add n sqr INT+ 1 0 x_0_1", "tree": "((x_0_1 idiv abs(x_0_1)) add ((n mod (n add (10)**2)) mul x_0_1))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 9 + 5 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign mul INT- 7 sub x_0_1 x_0_3", "tree": "sign((-7 mul (x_0_1 sub x_0_3)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 4 + 15 + 16 + 75 + 96 + 525 + 768 + 4725 + 7680 + 5 1975 + 9 2160 + 67 5675 + 129 240 + 1013 5125 + 2064 3840 + 1 7229 7125 + 3 7158 9120 + 32 7364 5375 + 74 3178 2400 + 687 4655 2875 + 1634 9921 2800 + 1 5811 7071 6125 + 3 9239 8110 7200 + 39 5292 6790 3125 + 102 235 878 7200 + 1067 2902 3338 4375 + 2856 6582 4604 1600 + 3 951 4167 6814 6875", "x2": "abs mul n x_0_2", "tree": "abs((n mul x_0_2))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 7 + 7 + 10 - 6 - 4 - 1 - 1 + 1 + 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign sub x_0_6 x_0_4", "tree": "sign((x_0_6 sub x_0_4))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 1 + 3 - 6 - 3 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1 + 0 - 1 - 1 + 0 - 1", "x2": "idiv x_0_5 abs INT- 1 0", "tree": "(x_0_5 idiv abs(-10))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 20 + 45 + 80 + 125 + 180 + 245 + 320 + 405 + 500 + 605 + 720 + 845 + 980 + 1125 + 1280 + 1445 + 1620 + 1805 + 2000 + 2205 + 2420 + 2645 + 2880 + 3125 + 3380 + 3645", "x2": "mul mul INT+ 5 n n", "tree": "((5 mul n) mul n)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 6 - 1 + 3 + 7 + 10 + 13 + 15 + 17 + 18 + 19 + 19 + 19 + 18 + 17 + 15 + 13 + 10 + 7 + 3 - 1 - 6 - 11 - 17 - 23 - 30 - 37 - 45 - 53 - 62", "x2": "sub x_0_2 add add INT- 1 0 n mod INT+ 7 INT- 9", "tree": "(x_0_2 sub ((-10 add n) add (7 mod -9)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr idiv n sign add n n", "tree": "((n idiv sign((n add n))))**2", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 36 + 108 + 236 + 436 + 724 + 1116 + 1628 + 2276 + 3076 + 4044 + 5196 + 6548 + 8116 + 9916 + 1 1964 + 1 4276 + 1 6868 + 1 9756 + 2 2956 + 2 6484 + 3 356 + 3 4588 + 3 9196 + 4 4196 + 4 9604 + 5 5436 + 6 1708", "x2": "add mul INT+ 8 mul mul mod idiv relu abs n n INT+ 1 0 n abs n relu x_0_1", "tree": "((8 mul ((((relu(abs(n)) idiv n) mod 10) mul n) mul abs(n))) add relu(x_0_1))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 5 + 15 + 44 + 50 - 48 - 7 + 896 + 792 - 7960 - 7381 + 9 7248 + 9 8150 - 135 8728 - 146 8875 + 2174 3744 + 2497 5788 - 3 9138 1560 - 4 7453 3113 + 78 2763 9200 + 99 6520 4634 - 1722 805 1752 - 2291 9969 4415 + 4 1329 9325 5872 + 5 7299 9237 6000 - 107 4578 2463 5096 - 154 7097 9413 2317 + 3008 8190 8980 4640 + 4486 5840 2986 1582", "x2": "mul sub mul n n x_0_2 n", "tree": "(((n mul n) sub x_0_2) mul n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 8 + 3 - 3 - 4 + 8 + 3 + 3 + 16 + 12 + 13 + 27 + 24 + 26 + 41 + 39 + 42 + 58 + 57 + 61 + 78 + 78 + 83 + 101 + 102 + 108 + 127 + 129 + 136 + 156 + 159", "x2": "add x_0_3 n", "tree": "(x_0_3 add n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 6 + 0 + 36 + 0 - 216 + 0 + 1296 + 0 - 7776 + 0 + 4 6656 + 0 - 27 9936 + 0 + 167 9616 + 0 - 1007 7696 + 0 + 6046 6176 + 0 - 3 6279 7056 + 0 + 21 7678 2336 + 0 - 130 6069 4016 + 0 + 783 6416 4096 + 0", "x2": "mul x_0_2 sub sign n INT+ 7", "tree": "(x_0_2 mul (sign(n) sub 7))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 0 - 4 + 4 + 5 + 13 + 4 + 4 + 15 + 3 + 3 + 17 + 4 + 5 + 18 + 5 + 5 + 20 + 3 + 6 + 23 + 3 + 6 + 24 + 5 + 9 + 25 + 4 + 12 + 28 + 3 + 11", "x2": "add abs sub x_0_3 relu sub relu INT+ 5 mod x_0_5 x_0_3 INT+ 3", "tree": "(abs((x_0_3 sub relu((relu(5) sub (x_0_5 mod x_0_3))))) add 3)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "- 3 - 6 + 2 + 8 - 95 - 93 - 17 - 20 - 25 - 29 - 35 - 40 - 47 - 53 - 61 - 68 - 77 - 85 - 95 - 104 - 115 - 125 - 137 - 148 - 161 - 173 - 187 - 200 - 215 - 229 - 245", "x2": "add sub mod x_0_2 add sub x_0_4 mul INT+ 1 0 INT+ 9 sub n mod INT- 2 n n sign mul x_0_3 x_0_1", "tree": "(((x_0_2 mod ((x_0_4 sub (10 mul 9)) add (n sub (-2 mod n)))) sub n) add sign((x_0_3 mul x_0_1)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 5 - 3 + 0 + 4 + 5 + 0 - 2 + 1 + 9 + 0 + 0 + 5 + 6 - 1 + 0 + 7 + 3 - 3 + 0 + 7 + 0 - 6 + 2 + 5 + 1 - 1 + 2 + 1 + 2", "x2": "mod n sub add sub n add n add x_0_2 x_0_2 add x_0_2 INT+ 7 x_0_2", "tree": "(n mod (((n sub (n add (x_0_2 add x_0_2))) add (x_0_2 add 7)) sub x_0_2))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 2 + 3 + 4 + 5 + 29 + 43 + 35 + 79 + 10 + 11 + 139 + 115 + 59 + 195 + 88 + 227 + 53 + 187 + 335 + 51 + 184 + 329 + 486 + 25 + 155 + 295", "x2": "mod mul n sqr relu mul relu abs INT+ 5 n add abs INT- 5 mul n n", "tree": "((n mul (relu((relu(abs(5)) mul n)))**2) mod (abs(-5) add (n mul n)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 9 + 1 - 8 - 1 - 1 - 3 - 3 + 0 + 2 + 1 + 1 + 2 + 2 + 1 + 1 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 + 5 + 5 + 5", "x2": "idiv sub abs sub INT+ 8 n x_0_6 INT+ 4", "tree": "((abs((8 sub n)) sub x_0_6) idiv 4)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 6 - 5 - 10 - 27 - 64 - 141 - 298 - 615 - 1252 - 2529 - 5086 - 1 203 - 2 440 - 4 917 - 8 1874 - 16 3791 - 32 7628 - 65 5305 - 131 662 - 262 1379 - 524 2816 - 1048 5693 - 2097 1450 - 4194 2967 - 8388 6004 - 1 6777 2081 - 3 3554 4238 - 6 7108 8555 - 13 4217 7192 - 26 8435 4469", "x2": "add sub idiv INT- 5 sign sign x_0_3 n mul INT- 2 sub n x_0_1", "tree": "(((-5 idiv sign(sign(x_0_3))) sub n) add (-2 mul (n sub x_0_1)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 8 + 1 + 9 + 9 - 18 - 9 + 45 - 171 - 162 + 1143 - 1 278 + 5 1399 - 46 2582 + 231 2919 - 1850 3343 + 9 - 63 + 513 + 522 - 513 + 5652 - 10 7379 + 75 1662 - 375 8301 + 8644 932 - 4 3220 4651 + 34 5763 7217 - 414 9164 6595", "x2": "sub add add sub x_0_1 INT- 6 INT+ 7 INT- 4 mul sign n mul x_0_1 mod x_0_1 n", "tree": "((((x_0_1 sub -6) add 7) add -4) sub (sign(n) mul (x_0_1 mul (x_0_1 mod n))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 6 - 2 + 4 - 4 - 5 + 9 + 10 + 9 + 8 + 7 + 5 + 4 + 2 + 3 + 1 + 15 + 15 + 13 + 12 + 12 + 9 + 10 + 9 + 6 + 5 + 4 + 5 + 5 + 3 + 15 + 1 + 15 + 15", "x2": "mod sub add relu sign INT+ 9 mod x_0_6 idiv n INT- 6 n sqr INT- 4", "tree": "(((relu(sign(9)) add (x_0_6 mod (n idiv -6))) sub n) mod (-4)**2)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 6 - 10 + 30 - 1 + 39 + 8 + 55 + 33 + 91 + 82 + 155 + 163 + 255 + 284 + 399 + 453 + 595 + 678 + 851 + 967 + 1175 + 1328 + 1575 + 1769 + 2059 + 2298 + 2635 + 2923 + 3311", "x2": "add sqr add relu relu mod INT+ 6 abs n sub n INT+ 9 x_0_2", "tree": "(((relu(relu((6 mod abs(n)))) add (n sub 9)))**2 add x_0_2)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 2 + 8 - 7 + 10 - 15 + 17 - 25 + 32 - 42 + 57 - 74 + 99 - 131 + 173 - 230 + 304 - 403 + 534 - 707 + 937 - 1241 + 1644 - 2178 + 2885 - 3822 + 5063 - 6707 + 8885 - 1 1770 + 1 5592", "x2": "sub x_0_2 x_0_3", "tree": "(x_0_2 sub x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 8 - 22 - 64 - 190 - 568 - 1702 - 5104 - 1 5310 - 4 5928 - 13 7782 - 41 3344 - 124 30 - 372 88 - 1116 262 - 3348 784 - 1 44 2350 - 3 132 7048 - 9 398 1142 - 27 1194 3424 - 81 3583 270 - 244 749 808 - 732 2247 2422 - 2196 6741 7264 - 6590 225 1790 - 1 9770 675 5368 - 5 9310 2026 6102 - 17 7930 6079 8304 - 53 3791 8239 4910", "x2": "add x_0_1 mul add sign relu sqr x_0_1 x_0_1 INT+ 2", "tree": "(x_0_1 add ((sign(relu((x_0_1)**2)) add x_0_1) mul 2))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 612 + 6 4305 + 720 2224 + 12 6038 9325 + 0 + 245 + 0 + 243 + 3 4220 + 527 122 + 0 + 1183 + 23 2260 + 1 2193 7625 + 0 + 867 + 0 + 361 + 0 + 3087 + 95 1764 + 0 + 0 + 1875 + 0 + 729 + 57 4672", "x2": "mul mul add mul INT+ 7 x_0_1 n mod mul add abs mod x_0_1 INT- 7 INT+ 3 n INT+ 8 n", "tree": "((((7 mul x_0_1) add n) mul (((abs((x_0_1 mod -7)) add 3) mul n) mod 8)) mul n)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 1 + 2 + 2 - 2 + 1 - 43 - 60 - 76 - 95 - 120 - 140 - 209 - 253 - 298 - 348 - 406 - 461 - 567 - 650 - 736 - 829 - 932 - 1034 - 1189 - 1323 - 1462 - 1610 - 1770 - 1931 - 2147 - 2344 - 2548", "x2": "sub sub x_0_6 mul n relu n add n sub INT- 3 n", "tree": "((x_0_6 sub (n mul relu(n))) sub (n add (-3 sub n)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 2 + 8 + 240 + 357 + 1 4516 + 2 2009 + 91 4382 + 140 8449 + 5943 4702 + 9295 7505 + 39 8212 4904 + 63 2111 209 + 2747 6661 8244 + 4424 7771 4497 + 19 5084 2989 5190 + 31 8583 9544 3649 + 1424 1153 8234 8734 + 2357 5212 6282 9889 + 10 6808 6536 7615 4912 + 17 9171 6159 7507 1425 + 822 4266 3330 6392 8084 + 1397 5386 460 5557 1009 + 6 4971 7040 3120 5031 8494 + 11 1803 883 6844 4568 577 + 526 2708 265 2760 7579 7870 + 916 7853 2462 1245 4580 7169 + 4 3680 4766 2017 9142 9122 3064 + 7 7009 9672 6818 4618 4780 2049 + 371 2840 5127 1522 7147 5396 292", "x2": "abs add sub INT- 7 mul sub INT+ 2 x_0_2 add n mul INT- 8 INT- 7 abs relu relu n", "tree": "abs(((-7 sub ((2 sub x_0_2) mul (n add (-8 mul -7)))) add abs(relu(relu(n)))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "mul idiv n abs n sqr add n abs sign n", "tree": "((n idiv abs(n)) mul ((n add abs(sign(n))))**2)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 7 - 5 + 2 + 104 + 225 + 1370 + 3 + 4 + 5 + 576 + 325 + 198 + 4 + 5 + 1 + 257 + 171 + 3847 + 5 + 1 + 2 + 146 + 3252 + 788 + 1 + 2 + 3 + 2707 + 680 + 289", "x2": "add sqr idiv mod n sub sign mul INT- 4 INT- 1 0 sqr INT+ 9 x_0_3 mod n INT+ 5", "tree": "((((n mod (sign((-4 mul -10)) sub (9)**2)) idiv x_0_3))**2 add (n mod 5))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 1 + 9 + 1 + 25 + 1 + 49 + 1 + 81 + 1 + 121 + 1 + 169 + 1 + 225 + 1 + 289 + 1 + 361 + 1 + 441 + 1 + 529 + 1 + 625 + 1 + 729 + 1", "x2": "idiv sqr n x_0_1", "tree": "((n)**2 idiv x_0_1)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 - 16 - 29 - 54 - 103 - 200 - 393 - 778 - 1547 - 3084 - 6157 - 1 2302 - 2 4591 - 4 9168 - 9 8321 - 19 6626 - 39 3235 - 78 6452 - 157 2885 - 314 5750 - 629 1479 - 1258 2936 - 2516 5849 - 5033 1674 - 1 66 3323 - 2 132 6620 - 4 265 3213 - 8 530 6398", "x2": "sub x_0_1 mul sign x_0_1 add x_0_1 n", "tree": "(x_0_1 sub (sign(x_0_1) mul (x_0_1 add n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 4 - 4 - 9 - 14 - 44 - 84 - 309 - 674 - 2784 - 6744 - 3 629 - 8 934 - 39 8184 - 113 3084 - 597 2769 - 1812 9354 - 1 153 7084 - 3 2632 8384 - 19 2920 4609 - 65 2656 7694 - 405 1329 6804 - 1435 8448 9284 - 9318 582 6509 - 3 4460 2774 2834 - 23 2951 4566 2744 - 89 5967 2131 3704 - 628 9689 3289 4109 - 2508 7081 9678 3734 - 1 8240 990 5392 9184", "x2": "sub mul INT+ 1 mod INT+ 6 mul n x_0_2 n", "tree": "((1 mul (6 mod (n mul x_0_2))) sub n)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 3 + 800 - 11 5200 + 2257 7828 - 28 8996 6080 + 4681 7449 6212 - 93 6348 9925 8400 + 2 2659 6456 2050 6180 - 435 651 9591 3722 8416 + 9 8034 6908 1255 8874 1556 - 2561 9732 5323 4871 9121 4704 + 76 8591 9759 7046 1573 6428 9700 - 1 9675 9545 8484 3816 2852 5832 7040 + 568 6350 8750 1986 2906 4396 5629 8388 - 18 4237 7683 5064 3558 1686 4486 4095 7648 + 6650 9834 3745 8232 4498 8807 9593 8535 4260 - 212 8314 6999 8663 4383 9641 8547 33 1381 1200 + 7 5086 9426 1552 8461 662 5646 3382 7691 1203 5700 - 2907 3664 1807 3262 124 8545 262 1808 2001 8090 4512 + 123 397 4681 2860 4483 6838 4255 954 9230 3165 5796 1276 - 4 7247 2627 7613 8412 1734 5955 3956 6690 4441 5582 5812 5312 + 1968 6359 4900 5767 1738 9414 8081 5278 7685 649 2742 1769 2500 - 88 7198 6010 1859 9073 349 6273 5408 5631 6735 9272 9141 816 1216 + 4 3117 8520 950 3914 9494 9918 8940 8561 6993 3660 6636 2565 6469 7604 - 1931 6797 7002 5775 3897 3756 3664 5503 5641 3027 9977 3042 9409 8646 1056 + 92 8310 1066 2381 5487 2967 3773 8221 569 9620 3740 6235 9493 3540 6275 5124 - 4 7741 6626 2636 7653 6324 365 5108 5115 266 1906 6606 4202 5153 5179 9094 2000 + 2621 6993 193 9389 4366 1370 9289 1016 8880 3319 5600 5011 3495 5731 8795 9431 1824", "x2": "mul add INT+ 9 sub idiv x_0_1 idiv n INT- 4 abs sqr n sqr add add n INT+ 6 n", "tree": "((9 add ((x_0_1 idiv (n idiv -4)) sub abs((n)**2))) mul (((n add 6) add n))**2)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 1 - 4 - 11 - 12 - 19 - 32 - 103 - 136 - 729 - 960 - 2195 - 1928 - 6593 - 1 3504 - 9 8903 - 14 8552 - 69 2329 - 133 6976 - 761 5627 - 1336 9768 - 2284 6889 - 2 2728 6064 - 1 5992 8231 - 25 14 6712 - 7 9964 1163 - 425 249 4112 - 7 9964 1171 - 9350 5487 472", "x2": "sub mul mod sub x_0_2 idiv INT+ 5 INT+ 9 n x_0_2 INT+ 8", "tree": "((((x_0_2 sub (5 idiv 9)) mod n) mul x_0_2) sub 8)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 7 + 1 + 3 + 5 + 7 + 1 + 3 + 5 + 7 + 1 + 3 + 5 + 7 + 1 + 3 + 5 + 7 + 1 + 3 + 5 + 7 + 1 + 3 + 5 + 7 + 1 + 3", "x2": "mod add add INT- 4 x_0_1 INT- 1 0 INT+ 8", "tree": "(((-4 add x_0_1) add -10) mod 8)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 1 + 2 - 2 + 9 - 10 + 6 + 4 + 4 + 9 - 10 + 0 + 8 + 8 + 18 - 5 + 0 + 16 + 16 + 36 + 10 + 0 + 32 + 32 + 48 + 20 + 0 + 37 + 36 + 67 + 40 + 0 + 42", "x2": "add mul x_0_5 sign x_0_1 mod x_0_5 n", "tree": "((x_0_5 mul sign(x_0_1)) add (x_0_5 mod n))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 1 + 5 + 6 + 2 + 1 + 3 + 6 + 2 + 1 + 3 + 6 + 2 + 1 + 3 + 6 + 2 + 1 + 3 + 6 + 2 + 1 + 3 + 6 + 2 + 1 + 3 + 6 + 2 + 1", "x2": "abs idiv INT- 6 mul sign mul n sign n x_0_2", "tree": "abs((-6 idiv (sign((n mul sign(n))) mul x_0_2)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 10 - 9 + 5 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1", "x2": "idiv abs x_0_3 x_0_3", "tree": "(abs(x_0_3) idiv x_0_3)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 6 + 3 - 1 - 6 - 12 - 19 - 27 - 36 - 46 - 57 - 69 - 82 - 96 - 111 - 127 - 144 - 162 - 181 - 201 - 222 - 244 - 267 - 291 - 316 - 342 - 369 - 397", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 8 + 9 + 6 + 5 + 8 + 0 + 9 + 6 + 5 + 8 + 0 + 9 + 6 + 5 + 8 + 0 + 9 + 6 + 5 + 8 + 0 + 9 + 6 + 5 + 8 + 0 + 9 + 6 + 5 + 8 + 0 + 9", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 9 + 5 + 8 + 7 + 189 - 105 - 168 - 147 - 3969 + 2205 + 3528 + 3087 + 8 3349 - 4 6305 - 7 4088 - 6 4827 - 175 329 + 97 2405 + 155 5848 + 136 1367 + 3675 6909 - 2042 505 - 3267 2808 - 2858 8707 - 7 7189 5089 + 4 2883 605 + 6 8612 8968 + 6 36 2847 + 162 979 6869 - 90 544 2705 - 144 870 8328", "x2": "idiv abs mul sub INT- 4 sub INT+ 9 INT- 8 relu sqr x_0_4 idiv x_0_4 sign INT- 9", "tree": "(abs(((-4 sub (9 sub -8)) mul relu((x_0_4)**2))) idiv (x_0_4 idiv sign(-9)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 1 0 + 16 0 + 81 0 + 256 0 + 625 0 + 1296 0 + 2401 0 + 4096 0 + 6561 0 + 1 0 0 + 1 4641 0 + 2 736 0 + 2 8561 0 + 3 8416 0 + 5 625 0 + 6 5536 0 + 8 3521 0 + 10 4976 0 + 13 321 0 + 16 0 0 + 19 4481 0 + 23 4256 0 + 27 9841 0 + 33 1776 0 + 39 625 0 + 45 6976 0 + 53 1441 0", "x2": "abs sqr sqr mul INT- 1 0 n", "tree": "abs((((-10 mul n))**2)**2)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 10 + 5 + 6 + 5 + 6 + 12 + 14 + 12 + 14 + 12 + 14 + 25 + 14 + 25 + 30 + 25 + 30 + 25 + 30 + 25 + 30 + 25 + 30 + 25 + 30 + 52 + 30 + 52", "x2": "add n mod x_0_2 n", "tree": "(n add (x_0_2 mod n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 7 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841", "x2": "mul sub n relu idiv sub mul mod INT- 5 relu sqr relu n INT- 7 x_0_2 INT+ 2 n", "tree": "((n sub relu(((((-5 mod relu((relu(n))**2)) mul -7) sub x_0_2) idiv 2))) mul n)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576", "x2": "relu sqr add INT- 3 n", "tree": "relu(((-3 add n))**2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 0 + 33 + 4 + 170 + 30 + 1197 + 248 + 1 782 + 2490 + 11 8613 + 2 9892 + 154 1982 + 41 8502 + 2312 9745 + 669 6048 + 3 9320 5682 + 1 2052 8882 + 74 7090 7977 + 24 1057 7660 + 1568 8906 7538 + 530 3270 8542 + 3 6084 4855 3397 + 1 2727 8500 5032 + 90 2112 1383 4950 + 33 924 1013 858 + 2435 7027 7354 3677 + 926 5874 8366 4052 + 7 635 3804 3276 6662", "x2": "add abs mul n x_0_2 n", "tree": "(abs((n mul x_0_2)) add n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 3 - 10 + 6 + 3 - 9 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1", "x2": "sign sub mul sub relu x_0_6 abs x_0_2 x_0_3 idiv x_0_5 abs INT- 4", "tree": "sign((((relu(x_0_6) sub abs(x_0_2)) mul x_0_3) sub (x_0_5 idiv abs(-4))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 10 + 5 + 4 - 5 + 12 - 70 + 40 + 36 - 50 + 132 - 840 + 520 + 504 - 750 + 2112 - 1 4280 + 9360 + 9576 - 1 5000 + 4 4352 - 31 4160 + 21 5280 + 22 9824 - 37 5000 + 115 3152 - 848 2320 + 602 7840 + 666 4896 - 1125 0 + 3574 7712 - 2 7143 4240", "x2": "mul n x_0_5", "tree": "(n mul x_0_5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 2 + 2 - 4 + 7 - 1 + 4 - 3 + 1 - 5 + 6 - 2 + 3 - 4 + 0 - 6 + 5 - 3 + 2 - 5 - 1 - 7 + 4 - 4 + 1 - 6 - 2 - 8 + 3 - 5 + 0 - 7 - 3 - 9", "x2": "add x_0_6 sign add sub n sign INT- 3 sub idiv n add INT- 1 sqr INT- 1 INT+ 3", "tree": "(x_0_6 add sign(((n sub sign(-3)) add ((n idiv (-1 add (-1)**2)) sub 3))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 1 + 0 + 0 - 85 + 14 + 85 - 99 + 1119 - 12 - 2408 + 2517 - 1 3270 - 4757 + 4 9499 - 4 3751 + 13 1524 + 15 9848 - 86 8261 + 58 4190 - 81 3227 - 369 323 + 1355 3071 - 530 1564 - 585 8216 + 7051 9157 - 1 8918 6342 - 215 5477 + 3 4172 523 - 11 7429 9063 + 23 473 2788", "x2": "add x_0_3 sub mul mul INT+ 2 INT- 7 x_0_4 x_0_2", "tree": "(x_0_3 add (((2 mul -7) mul x_0_4) sub x_0_2))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 8 - 5 + 6 - 3 + 4 + 2 + 3 + 1 + 1 + 2 - 1 + 2 + 0 + 14 - 12 + 12 + 2 + 5 + 7 - 5 + 10 - 3 + 22 - 12 + 35 - 13 + 29 - 23 + 40", "x2": "sub abs mod x_0_3 n x_0_1", "tree": "(abs((x_0_3 mod n)) sub x_0_1)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 1 + 2 - 3 + 0 - 5 - 2 - 7 - 4 - 9 - 6 - 11 - 8 - 13 - 10 - 15 - 12 - 17 - 14 - 19 - 16 - 21 - 18 - 23 - 20 - 25 - 22 - 27 - 24", "x2": "add INT- 2 x_0_2", "tree": "(-2 add x_0_2)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 3 + 900 - 300 + 9 0 - 3 0 + 900 0 - 300 0 + 9 0 0 - 3 0 0 + 900 0 0 - 300 0 0 + 9 0 0 0 - 3 0 0 0 + 900 0 0 0 - 300 0 0 0 + 9 0 0 0 0 - 3 0 0 0 0 + 900 0 0 0 0 - 300 0 0 0 0 + 9 0 0 0 0 0 - 3 0 0 0 0 0 + 900 0 0 0 0 0 - 300 0 0 0 0 0 + 9 0 0 0 0 0 0 - 3 0 0 0 0 0 0 + 900 0 0 0 0 0 0 - 300 0 0 0 0 0 0 + 9 0 0 0 0 0 0 0", "x2": "mul x_0_2 sqr INT+ 1 0", "tree": "(x_0_2 mul (10)**2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 8 - 10 - 8 - 41 - 61 - 57 - 329 - 550 - 571 - 3620 - 6601 - 7424 - 5 681 - 9 9016 - 11 8785 - 86 1578 - 178 2289 - 225 6916 - 1723 1561 - 3742 8070 - 4965 2153 - 3 9632 5904 - 8 9827 3681 - 12 4130 3826 - 103 447 3505 - 242 5338 9388 - 347 5650 7129 - 2988 2973 1646 - 7276 168 1641 - 1 774 5172 1000", "x2": "sub mul add INT+ 1 n x_0_3 relu sign relu add INT- 6 INT- 2", "tree": "(((1 add n) mul x_0_3) sub relu(sign(relu((-6 add -2)))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 + 7 + 7 + 5 + 42 + 42 + 42 + 30 + 252 + 252 + 252 + 180 + 1512 + 1512 + 1512 + 1080 + 9072 + 9072 + 9072 + 6480 + 5 4432 + 5 4432 + 5 4432 + 3 8880 + 32 6592 + 32 6592 + 32 6592 + 23 3280 + 195 9552 + 195 9552 + 195 9552", "x2": "abs idiv mul n mul relu INT+ 6 x_0_4 n", "tree": "abs(((n mul (relu(6) mul x_0_4)) idiv n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 4 + 5 + 3 - 6 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1", "x2": "mul add mul idiv x_0_1 INT- 8 x_0_3 mod sign add n n add x_0_4 INT+ 3 idiv x_0_3 n", "tree": "((((x_0_1 idiv -8) mul x_0_3) add (sign((n add n)) mod (x_0_4 add 3))) mul (x_0_3 idiv n))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr sub INT+ 5 n", "tree": "((5 sub n))**2", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 - 8 - 3 - 9 - 1 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 12 - 12 - 12 - 12 - 12 - 21 - 21 - 21", "x2": "add mod idiv add relu sub n n n sqr mul INT- 5 sign x_0_5 add x_0_5 INT- 7 INT- 3", "tree": "((((relu((n sub n)) add n) idiv ((-5 mul sign(x_0_5)))**2) mod (x_0_5 add -7)) add -3)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 6 + 6 + 4 + 0 - 6 - 14 - 24 - 36 - 50 - 66 - 84 - 104 - 126 - 150 - 176 - 204 - 234 - 266 - 300 - 336 - 374 - 414 - 456 - 500 - 546 - 594", "x2": "mul n sub INT+ 5 n", "tree": "(n mul (5 sub n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 8 - 3 + 5 + 0 + 6 + 1 + 7 + 16 - 6 + 5 + 7 + 6 + 8 + 23 + 39 + 56 + 74 + 93 + 113 + 134 + 156 + 179 + 203 + 228 + 254 + 281 + 309 + 338 + 368 + 399", "x2": "sub n idiv x_0_1 sign mod sub sub x_0_4 INT- 5 n sub INT+ 9 n", "tree": "(n sub (x_0_1 idiv sign((((x_0_4 sub -5) sub n) mod (9 sub n)))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 9 - 7 - 4 - 8 + 1 + 0 + 1 + 4 + 6 + 4 + 0 + 9 + 11 + 1 + 1 + 16 + 9 + 6 + 1 + 1 + 3 + 16 + 0 + 11 + 16 + 0 + 8 + 16 + 1 + 14 + 0", "x2": "mod sqr sqr sub n add add x_0_5 x_0_1 INT- 1 0 n", "tree": "((((n sub ((x_0_5 add x_0_1) add -10)))**2)**2 mod n)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 32 + 72 + 128 + 200 + 288 + 400 + 520 + 656 + 808 + 976 + 1160 + 1360 + 1584 + 1816 + 2064 + 2328 + 2608 + 2904 + 3216 + 3552 + 3896 + 4256 + 4632 + 5024 + 5432 + 5856", "x2": "mul add mul n n idiv n INT+ 7 INT+ 8", "tree": "(((n mul n) add (n idiv 7)) mul 8)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 9 - 1 + 3 - 4 + 9 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961 + 1024", "x2": "mul relu sqr relu n sign sqr mod x_0_5 sqr x_0_4", "tree": "(relu((relu(n))**2) mul sign(((x_0_5 mod (x_0_4)**2))**2))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 7 + 7 + 10 + 11 + 15 + 17 + 22 + 25 + 31 + 35 + 42 + 47 + 55 + 61 + 70 + 77 + 87 + 95 + 106 + 115 + 127 + 137 + 150 + 161 + 175 + 187 + 202 + 215 + 231", "x2": "abs add n abs x_0_2", "tree": "abs((n add abs(x_0_2)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 7 - 1 + 248 + 320 - 152 - 888 + 1704 + 1168 - 8624 - 5152 + 4 2096 + 3 4920 - 27 8320 - 7392 + 6 336 + 5 600 - 40 3440 - 9632 + 7 8576 + 6 6280 - 52 8560 - 1 1872 + 9 6816 + 8 1960 - 65 3680 - 1 4112 + 11 5056 + 9 7640 - 77 8800", "x2": "mul sub mod x_0_1 sub x_0_2 INT- 3 mul abs INT- 1 0 n INT- 8", "tree": "(((x_0_1 mod (x_0_2 sub -3)) sub (abs(-10) mul n)) mul -8)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 16 + 81 + 256 + 625 + 1296 + 2401 + 4096 + 6561 + 1 0 + 1 4641 + 2 736 + 2 8561 + 3 8416 + 5 625 + 6 5536 + 8 3521 + 10 4976 + 13 321 + 16 0 + 19 4481 + 23 4256 + 27 9841 + 33 1776 + 39 625 + 45 6976 + 53 1441", "x2": "sqr mul relu n n", "tree": "((relu(n) mul n))**2", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 6 + 6 + 6 - 7 + 10 + 2 + 2 + 11 + 6 + 2 + 2 + 7 + 2 + 2 + 2 + 3 + 2 + 2 + 2 + 1 + 2 + 2 + 2 + 3 + 2 + 2 + 2 + 1 + 2 + 2 + 2", "x2": "abs sub mul INT+ 4 idiv n sub n sign n x_0_4", "tree": "abs(((4 mul (n idiv (n sub sign(n)))) sub x_0_4))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 8 + 5 + 1 - 4 - 10 - 17 - 25 - 34 - 44 - 55 - 67 - 80 - 94 - 109 - 125 - 142 - 160 - 179 - 199 - 220 - 242 - 265 - 289 - 314 - 340 - 367 - 395", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 6 - 3 + 80 + 150 - 99 + 3930 + 9600 - 7927 + 39 3083 + 116 1099 - 113 3568 + 6646 6843 + 2 2752 1946 - 2 5391 9239 + 170 2509 8160 + 657 4238 1517 - 820 1591 4204 + 6 1492 4503 2541 + 26 2929 8146 1223 - 36 870 224 9767 + 2976 4081 6317 7558 + 1 3908 6071 7278 5311 - 2 750 262 9361 6032 + 186 449 7887 1459 4241 + 940 1761 6531 5699 8276 - 1510 6019 1417 5247 1303 + 14 5877 4198 1314 6415 8058 + 79 638 6264 9342 8575 6841 - 135 8031 1208 4354 7170 1404", "x2": "add mul mul x_0_3 n n mod add abs x_0_3 INT- 7 idiv x_0_2 n", "tree": "(((x_0_3 mul n) mul n) add ((abs(x_0_3) add -7) mod (x_0_2 idiv n)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 1 + 4 - 1 + 1 - 7 - 4 - 15 - 13 - 25 - 24 - 37 - 37 - 51 - 52 - 67 - 69 - 85 - 88 - 105 - 109 - 127 - 132 - 151 - 157 - 177 - 184 - 205 - 213", "x2": "sub mul idiv n n add x_0_2 sign x_0_2 abs add INT- 1 n", "tree": "(((n idiv n) mul (x_0_2 add sign(x_0_2))) sub abs((-1 add n)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 1 - 6 - 8 + 5 + 10 - 108 + 4410 + 8640 - 8262 - 1 1340 + 19 1466 - 563 9976 - 1347 1848 + 1450 8648 + 2752 5690 - 5 8109 3280 + 144 6986 3769 + 400 3938 1026 - 467 6761 2852 - 1173 5105 4360 + 2 7804 6437 4135 - 62 1869 3250 9570 - 193 6223 3435 5026 + 239 9023 112 8968 + 768 7677 5934 2100 - 1 9450 737 3070 3356 + 40 2685 3304 2054 6101 + 138 4407 2258 9938 9440 - 179 2814 8698 1288 9377 - 713 6866 7177 2305 7410 + 1 8785 2983 9898 8642 3981 - 36 6402 5354 1727 6838 8416", "x2": "mul mul sub add INT+ 4 add mul x_0_5 n idiv sub x_0_4 x_0_5 INT- 6 INT- 3 mul INT+ 9 n idiv INT- 1 0 n", "tree": "((((4 add ((x_0_5 mul n) add ((x_0_4 sub x_0_5) idiv -6))) sub -3) mul (9 mul n)) mul (-10 idiv n))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 5 + 7 + 7 + 13 + 17 + 19 + 19 + 25 + 29 + 31 + 31 + 37 + 41 + 43 + 43 + 49 + 53 + 55 + 55 + 61 + 65 + 67 + 67 + 73 + 77 + 79 + 79", "x2": "add mod mul n INT- 1 0 INT+ 8 x_0_1", "tree": "(((n mul -10) mod 8) add x_0_1)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 4 - 2 - 7 + 0 - 9 + 2 - 11 + 4 - 13 + 6 - 15 + 8 - 17 + 10 - 19 + 12 - 21 + 14 - 23 + 16 - 25 + 18 - 27 + 20 - 29 + 22 - 31 + 24", "x2": "sub INT- 4 mul n sign add n x_0_1", "tree": "(-4 sub (n mul sign((n add x_0_1))))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul n relu n", "tree": "(n mul relu(n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824 + 1 5625 + 1 7576 + 1 9683", "x2": "mul n relu sqr n", "tree": "(n mul relu((n)**2))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 2 + 2 + 2 + 3 + 4 + 6 + 6 + 7 + 8 + 10 + 10 + 11 + 12 + 14 + 14 + 15 + 16 + 18 + 18 + 19 + 20 + 22 + 22 + 23 + 24 + 26 + 26 + 27", "x2": "sub INT- 1 sub INT+ 1 add abs mod mul INT+ 1 x_0_2 idiv INT+ 1 0 INT- 6 abs n", "tree": "(-1 sub (1 sub (abs(((1 mul x_0_2) mod (10 idiv -6))) add abs(n))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 3 - 4 - 5 + 8 - 9 + 2 + 1 + 0 + 3 + 2 + 1 + 0 + 3 + 2 + 1 + 0 + 3 + 2 + 1 + 0 + 3 + 2 + 1 + 0 + 3 + 2 + 1 + 0 + 3 + 2 + 1 + 0", "x2": "mod mod mul INT+ 3 n INT+ 4 mul add INT+ 1 0 x_0_5 n", "tree": "(((3 mul n) mod 4) mod ((10 add x_0_5) mul n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 8 - 10 + 1 - 64 - 80 + 8 - 512 - 640 + 64 - 4096 - 5120 + 512 - 3 2768 - 4 960 + 4096 - 26 2144 - 32 7680 + 3 2768 - 209 7152 - 262 1440 + 26 2144 - 1677 7216 - 2097 1520 + 209 7152 - 1 3421 7728 - 1 6777 2160 + 1677 7216 - 10 7374 1824 - 13 4217 7280 + 1 3421 7728", "x2": "mul x_0_3 INT+ 8", "tree": "(x_0_3 mul 8)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 6 - 7 + 0 + 0 + 2 + 0 + 4 + 2 + 5 + 8 + 12 + 1 + 0 + 13 + 1 + 19 + 14 + 14 + 29 + 12 + 15 + 25 + 3 + 25 + 34 + 43 + 6 + 21 + 28", "x2": "mod add relu sqr x_0_2 x_0_3 add sub n INT+ 9 n", "tree": "((relu((x_0_2)**2) add x_0_3) mod ((n sub 9) add n))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 9 - 10 + 2 + 3 + 3 + 2 + 2 + 3 + 3 + 2 + 2 + 3 + 3 + 2 + 2 + 3 + 3 + 2 + 2 + 3 + 3 + 2 + 2 + 3 + 3 + 2 + 2 + 3 + 3", "x2": "sub add INT+ 4 mod sqr x_0_2 INT- 6 mod INT+ 7 INT- 2", "tree": "((4 add ((x_0_2)**2 mod -6)) sub (7 mod -2))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 2 - 1 + 6 + 4 + 30 + 24 + 210 + 192 + 1890 + 1920 + 2 790 + 2 3040 + 27 270 + 32 2560 + 405 4050 + 516 960 + 6891 8850 + 9289 7280 + 13 945 8150 + 18 5794 5600 + 274 9862 1150 + 408 7480 3200 + 6324 6828 6450 + 9809 9527 6800 + 15 8117 716 1250 + 25 5058 7719 6800 + 426 9160 9335 3750 + 714 1645 6151 400 + 1 2380 5667 725 8750", "x2": "mul relu mul abs x_0_2 n sign INT+ 5", "tree": "(relu((abs(x_0_2) mul n)) mul sign(5))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 36 + 81 + 144 + 225 + 324 + 441 + 576 + 729 + 900 + 1089 + 1296 + 1521 + 1764 + 2025 + 2304 + 2601 + 2916 + 3249 + 3600 + 3969 + 4356 + 4761 + 5184 + 5625 + 6084 + 6561", "x2": "sqr mul INT+ 3 n", "tree": "((3 mul n))**2", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399 + 440 + 483 + 528 + 575 + 624 + 675 + 728", "x2": "mod sign INT- 8 sqr n", "tree": "(sign(-8) mod (n)**2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 1 + 0 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1", "x2": "sign mod sub abs x_0_1 x_0_1 sub abs x_0_1 relu x_0_2", "tree": "sign(((abs(x_0_1) sub x_0_1) mod (abs(x_0_1) sub relu(x_0_2))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 8 + 9 + 1 - 6 - 21 - 43 - 92 - 205 - 453 - 998 - 2201 - 4855 - 1 708 - 2 3617 - 5 2089 - 11 4886 - 25 3389 - 55 8867 - 123 2620 - 271 8629 - 599 6125 - 1322 4870 - 2916 8369 - 6433 2863 - 1 4189 596 - 3 1294 9561 - 6 9023 1985 - 15 2235 4566 - 33 5765 8693 - 74 554 9371", "x2": "sub x_0_1 sub mul x_0_3 sign x_0_3 x_0_1", "tree": "(x_0_1 sub ((x_0_3 mul sign(x_0_3)) sub x_0_1))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189 + 209 + 230 + 252 + 275 + 299 + 324 + 350 + 377 + 405", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 1 - 5 + 8 - 1 - 5 + 8 - 1 - 5 + 8 - 1 - 5 + 8 - 1 - 5 + 8 - 1 - 5 + 8 - 1 - 5 + 8 - 1 - 5 + 8 - 1 - 5 + 8 - 1 - 5", "x2": "mul x_0_3 sign abs sqr n", "tree": "(x_0_3 mul sign(abs((n)**2)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 6 + 1 + 19 + 1 + 31 + 1 + 43 + 1 + 55 + 1 + 67 + 1 + 79 + 1 + 91 + 1 + 103 + 1 + 115 + 1 + 127 + 1 + 139 + 1 + 151 + 1 + 163 + 1", "x2": "add sqr sign x_0_1 relu mul INT+ 6 idiv n relu x_0_1", "tree": "((sign(x_0_1))**2 add relu((6 mul (n idiv relu(x_0_1)))))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 3 + 3 - 2 + 7 + 3 + 16 + 12 + 27 + 25 + 42 + 42 + 61 + 63 + 84 + 88 + 111 + 117 + 142 + 150 + 177 + 187 + 216 + 228 + 259 + 273 + 306 + 322 + 357", "x2": "add add add INT+ 7 mod idiv n n x_0_2 sub sqr sub n INT+ 3 relu x_0_1 INT- 5", "tree": "(((7 add ((n idiv n) mod x_0_2)) add (((n sub 3))**2 sub relu(x_0_1))) add -5)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 8 - 7 - 9 - 7 - 4 + 1 - 11 - 8 - 18 - 12 - 17 - 23 - 25 - 41 - 37 - 58 - 60 - 83 - 101 - 120 - 159 - 180 - 242 - 281 - 362 - 440 - 542 - 682 - 823 - 1044 - 1263", "x2": "add x_0_2 x_0_5", "tree": "(x_0_2 add x_0_5)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 0 + 8 + 70 + 5 + 94 + 777 + 63 + 1043 + 8557 + 704 + 1 1485 + 9 4140 + 7758 + 12 6350 + 103 5556 + 8 5355 + 138 9868 + 1139 1135 + 93 8925 + 1528 8569 + 1 2530 2507 + 1032 8198 + 1 6817 4283 + 13 7832 7602 + 1 1361 204 + 18 4991 7140 + 151 6160 3650 + 12 4971 2273 + 203 4908 8570", "x2": "add n add mul INT+ 1 0 x_0_3 x_0_3", "tree": "(n add ((10 mul x_0_3) add x_0_3))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 4 + 8 + 7 + 33 + 31 + 221 + 212 + 1955 + 1896 + 2 1290 + 2 794 + 27 4871 + 26 9823 + 410 2268 + 404 2294 + 6946 8730 + 6865 9021 + 13 1586 3573 + 13 371 1687 + 275 6447 6009 + 273 6579 3538 + 6326 7923 6517 + 6292 1456 8900 + 15 7896 1511 9384 + 15 7268 9955 4880 + 425 6903 9365 4465 + 424 5635 7241 7253 + 1 2329 2945 1642 4602 + 1 2311 2167 7886 3122", "x2": "sub sub abs mul n x_0_2 add x_0_3 INT+ 2 relu sign add sqr n n", "tree": "((abs((n mul x_0_2)) sub (x_0_3 add 2)) sub relu(sign(((n)**2 add n))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 1 - 3 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506 + 552 + 600 + 650 + 702 + 756 + 812 + 870", "x2": "mul relu n add n sign mod x_0_2 sqr n", "tree": "(relu(n) mul (n add sign((x_0_2 mod (n)**2))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 8 - 8 + 7 - 8 - 8 + 7 - 8 - 8 + 7 - 8 - 8 + 7 - 8 - 8 + 7 - 8 - 8 + 7 - 8 - 8 + 7 - 8 - 8 + 7 - 8 - 8 + 7 - 8 - 8 + 7", "x2": "sub INT- 3 sub INT- 3 x_0_3", "tree": "(-3 sub (-3 sub x_0_3))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 5 + 10 - 5 - 5 + 10 - 5 - 5 + 10 - 5 - 5 + 10 - 5 - 5 + 10 - 5 - 5 + 10 - 5 - 5 + 10 - 5 - 5 + 10 - 5 - 5 + 10 - 5 - 5 + 10", "x2": "sub sub mul mod relu mul n mod n INT- 8 x_0_1 INT+ 8 x_0_2 x_0_1", "tree": "((((relu((n mul (n mod -8))) mod x_0_1) mul 8) sub x_0_2) sub x_0_1)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 7 - 9 - 12 - 16 - 21 - 27 - 34 - 42 - 51 - 61 - 72 - 84 - 97 - 111 - 126 - 142 - 159 - 177 - 196 - 216 - 237 - 259 - 282 - 306 - 331 - 357 - 384 - 412", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 5 + 8 + 12 + 17 + 23 + 30 + 38 + 47 + 57 + 68 + 80 + 93 + 107 + 122 + 138 + 155 + 173 + 192 + 212 + 233 + 255 + 278 + 302 + 327 + 353 + 380 + 408", "x2": "relu add n x_0_1", "tree": "relu((n add x_0_1))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 4 + 4 - 3 - 3 + 6 + 10 + 11 + 3 + 0 + 0 + 9 + 13 + 14 + 6 + 3 + 3 + 12 + 16 + 17 + 9 + 6 + 6 + 15 + 19 + 20 + 12 + 9 + 9 + 18 + 22 + 23 + 15", "x2": "add sub n x_0_3 idiv add n idiv mul mod sign x_0_5 n INT+ 4 n n", "tree": "((n sub x_0_3) add ((n add (((sign(x_0_5) mod n) mul 4) idiv n)) idiv n))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 4 + 4 - 3 + 156 + 277 + 429 + 789 + 1168 + 1638 + 2381 + 3215 + 4225 + 5588 + 7124 + 8942 + 1 1216 + 1 3771 + 1 6716 + 2 226 + 2 4155 + 2 8620 + 3 3757 + 3 9488 + 4 5887 + 5 3119 + 6 1097 + 6 9934 + 7 9774 + 9 517 + 10 2330", "x2": "add abs sub mul sqr n add n INT+ 6 mod x_0_2 n x_0_3", "tree": "(abs((((n)**2 mul (n add 6)) sub (x_0_2 mod n))) add x_0_3)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 6 - 9 + 2 + 1 - 7 - 13 + 1 + 1 - 13 - 13 + 1 + 1 - 13 - 13 + 1 + 1 - 13 - 13 + 1 + 1 - 13 - 13 + 1 + 1 - 13 - 13 + 1 + 1 - 13", "x2": "idiv sub sub sign n INT+ 4 INT+ 1 0 x_0_2", "tree": "(((sign(n) sub 4) sub 10) idiv x_0_2)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 9 + 8 + 36 + 32 + 144 + 128 + 576 + 512 + 2304 + 2048 + 9216 + 8192 + 3 6864 + 3 2768 + 14 7456 + 13 1072 + 58 9824 + 52 4288 + 235 9296 + 209 7152 + 943 7184 + 838 8608 + 3774 8736 + 3355 4432 + 1 5099 4944 + 1 3421 7728 + 6 397 9776 + 5 3687 912", "x2": "abs mul add sign sub n n INT- 5 abs x_0_2", "tree": "abs(((sign((n sub n)) add -5) mul abs(x_0_2)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 1 + 8 + 1 + 16 + 400 + 81 + 169 + 2916 + 2500 + 2809 + 1 3225 + 1 1025 + 729 + 5329 + 2 8224 + 2116 + 1 609 + 1 5376 + 2 3409 + 11 7649 + 1 1236 + 7 1824 + 14 5924 + 6 9169 + 37 3321 + 5 3361 + 256 + 3364 + 61 6225", "x2": "sqr mod sub add sub x_0_1 mod mod mul x_0_2 x_0_2 x_0_1 x_0_2 n sign n sqr n", "tree": "(((((x_0_1 sub (((x_0_2 mul x_0_2) mod x_0_1) mod x_0_2)) add n) sub sign(n)) mod (n)**2))**2", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 5 - 4 - 6 + 9 + 2 - 2 - 2 - 2 + 1 + 5 - 6 - 7 - 7 + 15 + 3 - 3 - 3 - 3 + 1 + 7 - 8 - 8 - 8 + 25 + 3 - 4 - 4 - 4 + 1 + 10 - 8", "x2": "idiv abs n x_0_5", "tree": "(abs(n) idiv x_0_5)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 8 + 9 + 8 - 9 - 9 + 4 - 7 - 8 - 8 - 1 - 8 - 12 - 12 - 1 - 13 - 16 - 15 - 1 - 18 - 20 - 19 - 1 - 1 - 24 - 23 - 1 - 1 - 28 - 29 - 1 - 1 - 32 - 33", "x2": "sub idiv INT- 3 INT+ 3 abs mod mod mod x_0_6 INT- 5 x_0_4 n", "tree": "((-3 idiv 3) sub abs((((x_0_6 mod -5) mod x_0_4) mod n)))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 9 - 7 - 3 - 7 - 5 - 11 - 11 - 12 - 14 - 10 - 14 - 12 - 18 - 18 - 19 - 21 - 17 - 21 - 19 - 25 - 25 - 26 - 28 - 24 - 28 - 26 - 32 - 32", "x2": "sub mod x_0_1 INT- 7 n", "tree": "((x_0_1 mod -7) sub n)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 7 - 3 + 6 + 4 + 2 - 5 - 13 - 21 - 30 - 40 - 52 - 65 - 79 - 94 - 110 - 127 - 145 - 164 - 184 - 205 - 227 - 250 - 274 - 299 - 325 - 352 - 380 - 409 - 439 - 470 - 502 - 535", "x2": "sub add idiv sign n x_0_5 x_0_1 n", "tree": "(((sign(n) idiv x_0_5) add x_0_1) sub n)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 0 - 3 + 2 - 6 - 6 - 41 - 366 - 3254 - 2 8924 - 25 7074 - 228 4789 - 2030 6434 - 1 8047 6737 - 16 401 6377 - 142 5595 6654 - 1267 213 5372 - 1 1260 8585 2917 - 10 82 7132 4052 - 88 9501 4055 6665 - 790 5588 5365 8964 - 7026 2205 46 6037 - 6 2446 6784 3852 3658 - 55 5005 198 342 3854 - 493 2697 4582 417 1745 - 4384 151 6130 2833 7480 - 3 8963 6483 8384 499 576 - 34 6295 7675 8315 5556 7399 - 307 7760 50 3438 3706 3527 - 2735 4093 479 7409 8559 9943 - 2 4311 3954 7116 3962 6584 5185 - 21 6071 4847 203 2768 4033 4778 - 192 370 4927 8872 7652 5772 5792", "x2": "mod sub x_0_6 x_0_2 sub x_0_5 mul abs x_0_1 INT+ 9", "tree": "((x_0_6 sub x_0_2) mod (x_0_5 sub (abs(x_0_1) mul 9)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 4 - 7 - 3 + 3 - 8 - 2 + 4 - 9 - 1 + 5 - 10 + 0 + 6 - 11 + 1 + 5 - 12 + 2 + 4 - 13 + 3 + 3 - 14 + 4 + 2 - 15 + 5 + 1 - 16 + 6", "x2": "sub x_0_3 sign x_0_4", "tree": "(x_0_3 sub sign(x_0_4))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 7 - 7 - 9 + 4 - 10 + 2 - 5 - 2 - 7 + 11 + 1 + 3 - 2 + 0 - 7 + 18 + 19 + 22 + 20 + 20 + 13 + 31 + 50 + 72 + 92 + 112 + 125 + 156 + 206 + 278 + 370 + 482 + 607", "x2": "add x_0_6 abs x_0_1", "tree": "(x_0_6 add abs(x_0_1))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 8 - 12 - 52 - 90 - 354 - 686 - 2904 - 6264 - 2 9150 - 6 9036 - 34 9956 - 89 7650 - 489 9594 - 1346 4990 - 7839 3776 - 2 2890 5136 - 14 1108 8310 - 43 4919 7964 - 282 2176 6620 - 913 3315 7706 - 6208 7886 6146 - 2 1006 6262 7790 - 14 9010 9278 8104 - 52 5165 6569 5400 - 387 4284 1249 1406 - 1417 9472 7377 6556 - 1 847 9955 4976 180 - 4 1120 4709 3952 994", "x2": "mul sub sub x_0_2 n sqr idiv n mul sub mul x_0_2 mul abs INT- 5 n INT+ 5 INT+ 5 n", "tree": "(((x_0_2 sub n) sub ((n idiv (((x_0_2 mul (abs(-5) mul n)) sub 5) mul 5)))**2) mul n)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 11 + 36 + 158 + 864 + 5610 + 4 2068 + 35 7570 + 339 6906 + 3566 7503 + 4 1017 6274 + 51 2720 3413 + 692 1724 6063 + 1 36 5006 7900 + 15 5565 7605 2435 + 256 6835 486 5162 + 4491 9613 3514 318 + 8 3101 2847 9 5865 + 162 475 516 5186 9349 + 3321 9738 5588 6332 1635 + 7 1422 4379 155 6141 5132 + 160 7004 8527 8501 3184 448 + 3776 4614 404 4780 9825 505 + 9 2523 3043 9909 7134 713 7349 + 235 9344 2621 7697 6918 8200 2375 + 6252 2622 9476 8988 8348 7306 2912 + 17 1937 2131 614 7192 9590 923 53 + 490 210 5735 2519 4999 3317 6305 6483", "x2": "add x_0_1 mod idiv add x_0_1 idiv INT- 8 relu x_0_1 INT- 2 abs mul sub sign x_0_1 x_0_1 n", "tree": "(x_0_1 add (((x_0_1 add (-8 idiv relu(x_0_1))) idiv -2) mod abs(((sign(x_0_1) sub x_0_1) mul n))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 9 - 1 + 19 - 21 + 59 - 101 + 219 - 421 + 859 - 1701 + 3419 - 6821 + 1 3659 - 2 7301 + 5 4619 - 10 9221 + 21 8459 - 43 6901 + 87 3819 - 174 7621 + 349 5259 - 699 501 + 1398 1019 - 2796 2021 + 5592 4059 - 1 1184 8101 + 2 2369 6219", "x2": "sub INT+ 1 0 add INT- 9 add INT- 7 add INT+ 9 add x_0_1 x_0_1", "tree": "(10 sub (-9 add (-7 add (9 add (x_0_1 add x_0_1)))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 2 - 8 - 3 + 9 + 17 + 14 + 4 - 2 + 3 + 15 + 23 + 20 + 10 + 4 + 9 + 21 + 29 + 26 + 16 + 10 + 15 + 27 + 35 + 32 + 22 + 16 + 21 + 33 + 41", "x2": "sub n sub x_0_2 x_0_1", "tree": "(n sub (x_0_2 sub x_0_1))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 3 - 7 + 10 + 4 + 0 - 4 - 10 + 6 - 20 - 5 - 30 - 21 - 16 - 27 - 30 - 33 - 48 - 65 - 28 - 75 - 64 - 34 - 54 - 76 - 60 - 84 - 110 - 69 - 120", "x2": "mul sub idiv add mod n n mod add x_0_3 x_0_1 relu sqr INT+ 9 n INT+ 5 add INT- 6 n", "tree": "(((((n mod n) add ((x_0_3 add x_0_1) mod relu((9)**2))) idiv n) sub 5) mul (-6 add n))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 64 + 324 + 1024 + 2500 + 5184 + 9604 + 1 6384 + 2 6244 + 4 0 + 5 8564 + 8 2944 + 11 4244 + 15 3664 + 20 2500 + 26 2144 + 33 4084 + 41 9904 + 52 1284 + 64 0 + 77 7924 + 93 7024 + 111 9364 + 132 7104 + 156 2500 + 182 7904 + 212 5764", "x2": "sqr mul sign mul n mul sub INT- 4 sign INT- 4 n mul mul n n INT- 2", "tree": "((sign((n mul ((-4 sub sign(-4)) mul n))) mul ((n mul n) mul -2)))**2", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 + 5 + 6 + 6 + 5 + 3 + 0 + 5 + 0 + 5 + 2 + 6 + 3 + 7 + 4 + 8 + 5 + 9 + 6 + 10 + 7 + 11 + 8 + 12 + 9 + 13 + 10", "x2": "abs sub INT+ 6 mod sub sign relu sub abs INT- 4 x_0_1 x_0_1 n", "tree": "abs((6 sub ((sign(relu((abs(-4) sub x_0_1))) sub x_0_1) mod n)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 9 - 6 + 20 - 9 - 6 + 20 - 9 - 6 + 20 - 9 - 6 + 20 - 9 - 6 + 20 - 9 - 6 + 20 - 9 - 6 + 20 - 9 - 6 + 20 - 9 - 6 + 20 - 9 - 6", "x2": "sub add sqr n n add add x_0_1 add mul n n x_0_2 sub n INT+ 5", "tree": "(((n)**2 add n) sub ((x_0_1 add ((n mul n) add x_0_2)) add (n sub 5)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 15 + 33 + 69 + 141 + 285 + 573 + 1149 + 2301 + 4605 + 9213 + 1 8429 + 3 6861 + 7 3725 + 14 7453 + 29 4909 + 58 9821 + 117 9645 + 235 9293 + 471 8589 + 943 7181 + 1887 4365 + 3774 8733 + 7549 7469 + 1 5099 4941 + 3 198 9885 + 6 397 9773 + 12 795 9549", "x2": "add add mod x_0_1 add x_0_1 abs n abs sub INT- 2 sign abs sqr x_0_1 x_0_1", "tree": "(((x_0_1 mod (x_0_1 add abs(n))) add abs((-2 sub sign(abs((x_0_1)**2))))) add x_0_1)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 20 + 36 + 56 + 80 + 108 + 140 + 176 + 216 + 260 + 308 + 360 + 416 + 476 + 540 + 608 + 680 + 756 + 836 + 920 + 1008 + 1100 + 1196 + 1296 + 1400 + 1508 + 1620", "x2": "mul n sub sub abs n add idiv n n INT- 8 sub sign INT+ 9 n", "tree": "(n mul ((abs(n) sub ((n idiv n) add -8)) sub (sign(9) sub n)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 4 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1", "x2": "idiv sign mul x_0_1 mod sqr mod x_0_2 sub INT- 9 INT- 3 x_0_2 add x_0_1 abs mul n n", "tree": "(sign((x_0_1 mul (((x_0_2 mod (-9 sub -3)))**2 mod x_0_2))) idiv (x_0_1 add abs((n mul n))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 6 + 5 + 2 + 3 + 2 + 5 + 6 + 11 + 14 + 1 + 4 + 3 + 7 + 7 + 12 + 13 + 19 + 21 + 9 + 11 + 20 + 23 + 33 + 37 + 23 + 27 + 40 + 45 + 30", "x2": "add mod INT- 1 0 n mod x_0_2 n", "tree": "((-10 mod n) add (x_0_2 mod n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 23 + 66 - 513 + 2062 - 2 615 + 12 3690 - 148 4285 + 1187 4270 - 1 6623 9795 + 16 6239 7930 - 265 9836 6905 + 3191 8040 2830 - 5 7452 4725 975 + 80 4334 6151 3610 - 1608 6692 3027 2245 + 2 5738 7076 8435 5870 - 56 6251 5690 5582 9195 + 1019 2528 2430 492 5450 - 2 4462 677 8321 1821 865 + 48 9241 3556 6423 6421 7230 - 1272 275 2472 7014 6964 8055 + 2 7984 6055 4399 4323 3225 7130 - 78 3568 9552 3184 1053 319 9725 + 1880 5654 9255 6418 5272 7679 3310 - 5 6416 9647 7669 2555 8183 379 9395 + 146 6841 841 9400 6451 2758 9878 4170 - 4693 8914 6942 820 6440 8287 6109 3545", "x2": "add mul INT+ 5 sub mod INT+ 7 x_0_1 n mul sub add sub INT- 1 INT+ 9 INT+ 6 n x_0_1", "tree": "((5 mul ((7 mod x_0_1) sub n)) add ((((-1 sub 9) add 6) sub n) mul x_0_1))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 9 + 10 - 3 - 12 - 13 - 6 - 15 - 16 - 9 - 18 - 19 - 12 - 21 - 22 - 15 - 24 - 25 - 18 - 27 - 28 - 21 - 30 - 31 - 24 - 33 - 34 - 27 - 36 - 37", "x2": "add sub INT+ 6 relu abs x_0_3 INT- 9", "tree": "((6 sub relu(abs(x_0_3))) add -9)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 8 - 10 - 1 - 8 - 2 - 1 - 8 - 1 - 1 - 8 - 1 - 1 - 8 - 1 - 1 - 8 - 1 - 1 - 8 - 1 - 1 - 8 - 1 - 1 - 8 - 1 - 1 - 8 - 1", "x2": "idiv abs x_0_3 x_0_1", "tree": "(abs(x_0_3) idiv x_0_1)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3", "x2": "abs relu idiv add n n sqr INT- 4", "tree": "abs(relu(((n add n) idiv (-4)**2)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 2 + 4 - 18 + 7 - 34 + 27 - 58 + 55 - 90 + 91 - 130 + 135 - 178 + 187 - 234 + 247 - 298 + 315 - 370 + 391 - 450 + 475 - 538 + 567 - 634 + 667 - 738 + 775 - 850", "x2": "sub mul n mul sign x_0_2 n sub mul sign n sign sqr x_0_1 INT- 8", "tree": "((n mul (sign(x_0_2) mul n)) sub ((sign(n) mul sign((x_0_1)**2)) sub -8))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 3 + 3 + 6 + 8 + 9 + 9 + 8 + 6 + 3 - 1 - 6 - 12 - 19 - 27 - 36 - 46 - 57 - 69 - 82 - 96 - 111 - 127 - 144 - 162 - 181 - 201 - 222 - 244 - 267", "x2": "sub x_0_1 sub add n INT- 7 sqr mod mod sign idiv INT- 2 INT+ 6 idiv INT- 8 mod x_0_3 INT- 5 INT- 1", "tree": "(x_0_1 sub ((n add -7) sub (((sign((-2 idiv 6)) mod (-8 idiv (x_0_3 mod -5))) mod -1))**2))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 7 + 4 + 0 + 1 + 2 + 5 + 7 + 0 + 3 + 5 + 10 + 1 + 3 + 8 + 15 + 1 + 6 + 13 + 19 + 4 + 11 + 17 + 2 + 9 + 15 + 0 + 7 + 13 + 28", "x2": "mod add x_0_3 add n INT- 2 n", "tree": "((x_0_3 add (n add -2)) mod n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 7 - 6 - 23 - 114 - 683 - 4782 - 3 8257 - 34 4314 - 344 3141 - 3787 4552 - 4 5449 4625 - 59 843 126 - 827 1802 1765 - 1 2407 7032 6476 - 19 8523 2522 3617 - 337 4895 2880 1490 - 6074 8115 1842 6821 - 11 5421 4188 5010 9600 - 230 8428 3770 219 2001 - 4847 6995 9170 4603 2022 - 10 6649 3910 1750 1270 4485 - 245 2935 9934 252 9220 3156 - 5887 463 8416 6070 1287 5745 - 14 7176 1596 415 1753 2189 3626 - 382 6580 1497 794 5583 6923 4277 - 1 331 7664 421 1453 759 6932 5480 - 28 9289 4593 1792 686 1271 4111 3441 - 838 9394 3202 1969 9897 6870 9228 9790 - 2 5168 1829 6065 9099 6930 6127 6869 3701", "x2": "add sign sub add x_0_3 n INT- 2 sub mul x_0_1 n idiv sqr x_0_3 sqr x_0_1", "tree": "(sign(((x_0_3 add n) sub -2)) add ((x_0_1 mul n) sub ((x_0_3)**2 idiv (x_0_1)**2)))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 14 - 13 - 32 + 5 - 94 - 9 - 188 - 55 + 6 - 133 - 24 + 13 - 86 - 1 - 180 - 47 + 14 - 125 - 16 + 21 - 78 + 7 - 172 - 39 + 22 - 117 - 8", "x2": "add n mul INT- 4 sqr mod add sub sub relu n x_0_1 add n n n INT- 8", "tree": "(n add (-4 mul (((((relu(n) sub x_0_1) sub (n add n)) add n) mod -8))**2))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 5 - 3 - 1 - 5 + 0 + 3 + 6 + 3 + 9 + 13 + 17 + 15 + 22 + 27 + 32 + 31 + 39 + 45 + 51 + 51 + 60 + 67 + 74 + 75 + 85 + 93 + 101 + 103 + 114 + 123 + 132", "x2": "add n x_0_4", "tree": "(n add x_0_4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 4 - 8 + 2 + 36 + 32 + 80 + 4 + 108 - 140 + 220 + 76 + 732 - 276 + 1324 - 900 + 3212 - 836 + 8236 - 4740 + 1 8156 - 6980 + 4 5804 - 2 2340 + 10 5580 - 4 6916 + 25 5852 - 11 7316 + 60 5548 - 27 7060 + 144 5740", "x2": "mul INT- 2 sub sub x_0_3 abs x_0_2 abs INT+ 6", "tree": "(-2 mul ((x_0_3 sub abs(x_0_2)) sub abs(6)))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 1 - 4 + 10 + 0 - 2 + 13 + 9 + 5 + 20 + 11 + 10 + 26 + 23 + 20 + 36 + 28 + 28 + 45 + 43 + 41 + 58 + 51 + 52 + 70 + 69 + 68 + 86 + 80 + 82 + 101 + 101 + 101", "x2": "add n x_0_6", "tree": "(n add x_0_6)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 4 + 3 - 7 - 15 - 15 + 51 + 134 + 109 - 1026 - 1897 - 1700 + 1 9011 + 3 6989 + 3 3011 - 47 4306 - 90 3860 - 81 345 + 1403 6215 + 2657 532 + 2386 9370 - 4 8498 5056 - 9 1268 5915 - 8 2118 6674 + 191 4333 5051 + 358 7014 3898 + 323 1166 8299 - 8500 3720 9243 - 1 5873 6991 6771 - 1 4311 9685 3354 + 41 9397 1460 3532", "x2": "sub sub x_0_1 mod mul idiv x_0_3 abs INT+ 6 mul idiv INT- 7 n n mul n x_0_2 idiv n INT+ 7", "tree": "((x_0_1 sub (((x_0_3 idiv abs(6)) mul ((-7 idiv n) mul n)) mod (n mul x_0_2))) sub (n idiv 7))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 3 - 9 + 3 - 8 - 15 - 4 - 15 - 25 - 14 - 25 - 38 - 27 - 37 - 53 - 42 - 52 - 70 - 60 - 69 - 89 - 80 - 88 - 110 - 102 - 108 - 133 - 126 - 130 - 157 - 151", "x2": "add x_0_3 sub idiv add n idiv sub x_0_1 mul mod INT+ 5 n x_0_2 INT- 9 INT- 5 n", "tree": "(x_0_3 add (((n add ((x_0_1 sub ((5 mod n) mul x_0_2)) idiv -9)) idiv -5) sub n))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 6 - 3 + 9 + 5 + 2 - 4 - 15 - 10 - 9 + 5 + 12 + 9 + 7 - 8 - 19 - 14 - 13 + 1 + 14 + 25 + 24 + 10 - 3 - 17 - 13 + 1 + 8 + 28 + 24 + 10 + 3", "x2": "sub mod sub mul INT- 3 INT- 6 mod idiv sign x_0_2 x_0_1 sqr x_0_2 abs n add x_0_4 INT+ 7", "tree": "((((-3 mul -6) sub ((sign(x_0_2) idiv x_0_1) mod (x_0_2)**2)) mod abs(n)) sub (x_0_4 add 7))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 8 + 6 - 2 - 1 + 6 + 4 - 4 - 3 + 4 + 2 - 6 - 5 + 2 + 0 - 8 - 7 + 0 - 2 - 10 - 9 - 2 - 4 - 12 - 11 - 4 - 6 - 14 - 13", "x2": "sub sub add INT+ 4 INT+ 6 n x_0_2", "tree": "(((4 add 6) sub n) sub x_0_2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 8 - 9 + 8 + 5 + 9 - 9 + 8 + 5 + 10 - 9 + 8 + 5 + 11 - 9 + 8 + 5 + 12 - 9 + 8 + 5 + 13 - 9 + 8 + 5 + 14 - 9 + 8 + 5 + 15 - 9", "x2": "add abs mul INT- 1 idiv INT+ 2 x_0_3 x_0_4", "tree": "(abs((-1 mul (2 idiv x_0_3))) add x_0_4)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 - 7 + 4 + 0 + 0 + 0 - 3 + 0 - 3 - 2 - 3 + 0 - 1 - 2 - 3 + 0 - 1 - 2 - 3 + 0 - 1 - 2 - 3 + 0 - 1 - 2 - 3 + 0 - 1 - 2", "x2": "mul sign mod INT- 1 INT+ 1 0 mod mul add n abs abs x_0_3 n INT- 4", "tree": "(sign((-1 mod 10)) mul (((n add abs(abs(x_0_3))) mul n) mod -4))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 5 - 2 - 6 - 3 + 1 + 0 + 1 + 0 - 1 + 8 + 7 + 6 - 5 + 8 + 7 + 6 - 5 + 12 + 11 + 10 - 9 + 12 + 11 + 10 - 9 + 16 + 15 + 14 - 13 + 16 + 15", "x2": "idiv add mod mod x_0_1 n n sign INT- 1 0 sign idiv x_0_4 mul n n", "tree": "((((x_0_1 mod n) mod n) add sign(-10)) idiv sign((x_0_4 idiv (n mul n))))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 5 + 2 + 10 + 19 + 29 + 40 + 52 + 65 + 79 + 94 + 110 + 127 + 145 + 164 + 184 + 205 + 227 + 250 + 274 + 299 + 325 + 352 + 380 + 409 + 439 + 470 + 502 + 535", "x2": "add x_0_1 sub n INT- 5", "tree": "(x_0_1 add (n sub -5))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 5 + 8 + 7 + 7 + 8 - 4 - 7 + 6 + 5 + 5 + 4 - 8 - 9 + 4 + 3 + 3 + 0 - 12 - 11 + 2 + 1 + 1 - 4 - 16 - 13 + 0 - 1 - 3 - 8 - 20 - 15 - 4", "x2": "add add sub idiv sign x_0_5 sign abs INT- 6 INT- 5 x_0_6 INT- 8", "tree": "((((sign(x_0_5) idiv sign(abs(-6))) sub -5) add x_0_6) add -8)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 8 - 3 + 4 - 5 - 3 + 72 + 98 + 128 + 162 + 110 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882 + 968 + 1058 + 1152 + 1250 + 1352 + 1458 + 1568 + 1682 + 1800 + 1922 + 2048", "x2": "mul add n mod n sqr x_0_5 n", "tree": "((n add (n mod (x_0_5)**2)) mul n)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 7 + 8 + 3 + 11 + 6 + 14 + 9 + 17 + 12 + 20 + 15 + 23 + 18 + 26 + 21 + 29 + 24 + 32 + 27 + 35 + 30 + 38 + 33 + 41 + 36 + 44 + 39 + 47 + 42", "x2": "add INT+ 3 relu x_0_2", "tree": "(3 add relu(x_0_2))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 3 + 1 + 6 + 12 + 19 + 27 + 36 + 46 + 57 + 69 + 82 + 96 + 111 + 127 + 144 + 162 + 181 + 201 + 222 + 244 + 267 + 291 + 316 + 342 + 369 + 397 + 426 + 456", "x2": "add n add INT+ 2 x_0_1", "tree": "(n add (2 add x_0_1))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 0 + 12 + 0 + 60 + 0 + 420 + 0 + 3780 + 0 + 4 1580 + 0 + 54 540 + 0 + 810 8100 + 0 + 1 3783 7700 + 0 + 26 1891 6300 + 0 + 549 9724 2300 + 0 + 1 2649 3657 2900 + 0 + 31 6234 1432 2500 + 0 + 853 8321 8670 7500 + 0 + 2 4761 1334 1451 7500", "x2": "mul abs n x_0_2", "tree": "(abs(n) mul x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 3 + 0 - 7 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 + 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 9 - 7 + 3 - 10 - 19 - 17 - 14 - 39 - 36 - 43 - 104 - 101 - 109 - 2 - 101 - 195 - 44 - 99 + 13 - 46 - 340 - 336 - 381 - 221 - 306 - 97 - 324 - 575 - 596", "x2": "sub n mod add sqr x_0_1 add INT- 4 x_0_2 sqr n", "tree": "(n sub (((x_0_1)**2 add (-4 add x_0_2)) mod (n)**2))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 10 - 3 + 3 + 7 + 7 - 7 + 28 + 14 + 14 - 7 + 7 + 7 + 7 - 14 + 14 + 21 + 21 - 7 + 14 + 7 + 7 - 21 + 14 + 28 + 28 - 7 + 14 + 7 + 14 - 35", "x2": "mul idiv n sub sign mul sub n sub sign n INT- 8 INT- 8 x_0_4 INT- 7", "tree": "((n idiv (sign(((n sub (sign(n) sub -8)) mul -8)) sub x_0_4)) mul -7)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 4 + 10 - 3 - 2 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1 + 0 - 1 - 1", "x2": "idiv x_0_3 mul sqr sub INT+ 4 x_0_4 INT+ 1", "tree": "(x_0_3 idiv (((4 sub x_0_4))**2 mul 1))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 3 + 1 + 1 - 3 - 9 - 6 - 7 - 12 - 19 - 17 - 19 - 25 - 33 - 32 - 35 - 42 - 51 - 51 - 55 - 63 - 73 - 74 - 79 - 88 - 99 - 101 - 107 - 117 - 129 - 132", "x2": "sub x_0_4 mul n sign INT+ 4", "tree": "(x_0_4 sub (n mul sign(4)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 10 - 2 - 4 - 10 - 2 - 4 - 10 - 2 - 4 - 10 - 2 - 4 - 10 - 2 - 4 - 10 - 2 - 4 - 10 - 2 - 4 - 10 - 2 - 4 - 10 - 2 - 4 - 10 - 2 - 4", "x2": "mul add INT- 2 INT+ 3 x_0_3", "tree": "((-2 add 3) mul x_0_3)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 4 + 10 - 1 + 9 - 3 + 11 + 0 + 10 - 2 + 12 + 1 + 11 - 1 + 13 + 2 + 12 + 0 + 14 + 3 + 13 + 1 + 15 + 4 + 14 + 2 + 16 + 5 + 15 + 3 + 17 + 6", "x2": "add x_0_4 idiv n n", "tree": "(x_0_4 add (n idiv n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 8 - 8 + 2 + 72 + 90 + 18 + 648 + 810 + 162 + 5832 + 7290 + 1458 + 5 2488 + 6 5610 + 1 3122 + 47 2392 + 59 490 + 11 8098 + 425 1528 + 531 4410 + 106 2882 + 3826 3752 + 4782 9690 + 956 5938 + 3 4437 3768 + 4 3046 7210 + 8609 3442 + 30 9936 3912 + 38 7420 4890 + 7 7484 978", "x2": "mul mod x_0_3 abs relu abs add add n n abs x_0_3 INT+ 9", "tree": "((x_0_3 mod abs(relu(abs(((n add n) add abs(x_0_3)))))) mul 9)", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 8 - 3 - 5 + 5 + 4 + 6 + 1 + 4 + 6 + 4 + 3 + 2 + 3 + 1 + 0 + 1 + 1 + 6 + 0 + 2 + 1 + 1 + 5 + 0 + 0 + 5 + 5 + 1 + 0 + 6", "x2": "mod add relu add abs n x_0_4 x_0_3 INT+ 7", "tree": "((relu((abs(n) add x_0_4)) add x_0_3) mod 7)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 2 - 9 + 0 - 5 + 8 + 7 - 45 + 35 - 3 + 151 + 98 - 539 + 582 + 167 + 2733 + 1297 - 9583 + 1 1887 + 6324 + 6 1511 + 2 340 - 21 8009 + 30 3599 + 22 6039 + 168 1245 + 35 1623 - 601 8546 + 933 4129 + 868 8578 + 5415 1591 + 558 5145 - 1 9529 6299", "x2": "add x_0_4 mul add INT+ 2 n add sub n abs sub n INT+ 4 x_0_5", "tree": "(x_0_4 add ((2 add n) mul ((n sub abs((n sub 4))) add x_0_5)))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 17 + 25 + 35 + 47 + 60 + 75 + 92 + 111 + 132 + 155 + 179 + 205 + 233 + 263 + 295 + 329 + 365 + 403 + 443 + 485 + 529 + 575 + 622 + 671 + 722 + 775 + 830", "x2": "add add x_0_1 n abs idiv x_0_1 sub n idiv INT+ 5 x_0_1", "tree": "((x_0_1 add n) add abs((x_0_1 idiv (n sub (5 idiv x_0_1)))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 3 - 8 + 10 + 6 + 121 + 100 + 100 + 225 + 100 + 121 + 121 + 100 + 121 + 121 + 100 + 121 + 121 + 100 + 121 + 121 + 100 + 121 + 121 + 100 + 121 + 121 + 100 + 121 + 121 + 100 + 121", "x2": "relu sqr idiv abs sub idiv idiv x_0_3 x_0_4 INT- 4 abs relu INT+ 1 0 INT- 1", "tree": "relu(((abs((((x_0_3 idiv x_0_4) idiv -4) sub abs(relu(10)))) idiv -1))**2)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 1 + 2 + 4 + 6 + 8 + 10 + 13 + 16 + 20 + 24 + 28 + 32 + 37 + 42 + 48 + 54 + 60 + 66 + 73 + 80 + 88 + 96 + 104 + 112 + 121", "x2": "idiv abs sqr add sub n relu add mul mod n n INT- 7 n n INT+ 6", "tree": "(abs((((n sub relu((((n mod n) mul -7) add n))) add n))**2) idiv 6)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 8 - 4 - 22 - 126 - 752 - 4508 - 2 7044 - 16 2260 - 97 3556 - 584 1332 - 3504 7988 - 2 1028 7924 - 12 6172 7540 - 75 7036 5236 - 454 2219 1412 - 2725 3314 8468 - 1 6351 9889 804 - 9 8111 9334 4820 - 58 8671 6006 8916 - 353 2029 6041 3492 - 2119 2177 6248 948 - 1 2715 3065 7488 5684 - 7 6291 8394 4931 4100 - 45 7751 366 9588 4596 - 274 6506 2201 7530 7572 - 1647 9037 3210 5184 5428 - 9887 4223 9263 1107 2564 - 5 9324 5343 5578 6643 5380 - 35 5947 2061 3471 9861 2276", "x2": "sub add sign mul sign x_0_3 n mul INT+ 5 x_0_1 mod INT- 5 abs x_0_1", "tree": "((sign((sign(x_0_3) mul n)) add (5 mul x_0_1)) sub (-5 mod abs(x_0_1)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 4 - 4 + 6 + 3 + 9 + 7 - 56 - 72 - 18 - 20 + 11 + 12 - 221 - 294 - 240 - 240 + 34 + 54 - 190 - 4800 - 4494 - 4246 + 437 + 744 - 3425 - 11 396 - 10 9755 - 9 8252 + 232 + 150 - 10 3261 - 314 4064 - 361 4523", "x2": "mul sub mod x_0_4 sub x_0_6 INT+ 8 idiv n x_0_3 n", "tree": "(((x_0_4 mod (x_0_6 sub 8)) sub (n idiv x_0_3)) mul n)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 5 + 3 - 1 + 55 - 42 + 16 - 1045 + 924 - 384 + 2 8215 - 2 7720 + 1 2288 - 98 7525 + 105 3360 - 49 1520 + 4246 3575 - 4845 4560 + 2359 2960 - 21 6564 2325 + 26 1654 6240 - 13 2120 5760 + 1277 7289 7175 - 1622 2586 6880 + 845 5716 8640 - 8 5607 8411 725 + 11 3558 1068 1600 - 6 881 1614 2080 + 642 588 830 4375 - 885 7532 3316 4800 + 487 492 9136 6400", "x2": "add relu mod sub x_0_1 idiv n x_0_3 INT- 4 mul x_0_3 idiv mul INT+ 8 n INT- 3", "tree": "(relu(((x_0_1 sub (n idiv x_0_3)) mod -4)) add (x_0_3 mul ((8 mul n) idiv -3)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 10 + 1146 + 2170 + 3070 + 3854 + 4530 + 5106 + 5590 + 5990 + 6314 + 6570 + 6766 + 6962 + 7286 + 7770 + 8446 + 9346 + 1 502 + 1 1946 + 1 3710 + 1 5826 + 1 8326 + 2 1242 + 2 4606 + 2 8450 + 3 2806 + 3 7706 + 4 3182", "x2": "add x_0_1 abs sqr add abs sub mul sub add n INT- 7 INT+ 4 INT+ 3 INT+ 5 n", "tree": "(x_0_1 add abs(((abs(((((n add -7) sub 4) mul 3) sub 5)) add n))**2))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3", "x2": "idiv n sub INT+ 9 abs mod sign n mul INT- 7 INT- 1", "tree": "(n idiv (9 sub abs((sign(n) mod (-7 mul -1)))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 8 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 11 - 11 - 12 - 12 - 13 - 13 - 14 - 14", "x2": "idiv n mod INT- 2 mul n x_0_1", "tree": "(n idiv (-2 mod (n mul x_0_1)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 - 6 - 10 + 5 + 10 + 1 + 4 + 6 + 10 + 5 + 10 + 1 + 4 + 6 + 10 + 5 + 10 + 1 + 4 + 6 + 10 + 5 + 10 + 1 + 4 + 6 + 10 + 5 + 10 + 1 + 4 + 6", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 2 + 12 + 22 + 42 + 64 + 98 + 72 + 107 + 182 + 239 + 194 + 252 + 404 + 267 + 420 + 573 + 438 + 592 + 458 + 613 + 964 + 636 + 988 + 661 + 1014 + 1417 + 1042 + 1446", "x2": "add sqr n add mod add n sub x_0_2 n sqr n n", "tree": "((n)**2 add (((n add (x_0_2 sub n)) mod (n)**2) add n))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 5 + 6 + 1 + 6 + 9 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 + 0 - 1 + 0", "x2": "idiv x_0_6 mul relu n n", "tree": "(x_0_6 idiv (relu(n) mul n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "- 6 - 7 + 1 - 8 + 9 - 17 + 26 - 43 + 69 - 112 + 181 - 293 + 474 - 767 + 1241 - 2008 + 3249 - 5257 + 8506 - 1 3763 + 2 2269 - 3 6032 + 5 8301 - 9 4333 + 15 2634 - 24 6967 + 39 9601 - 64 6568 + 104 6169", "x2": "sub x_0_2 x_0_1", "tree": "(x_0_2 sub x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 1 + 7 - 9 - 2 + 2 + 5 + 3 + 8 + 5 - 39 - 5 - 24 + 12 - 2 + 6 - 9 - 19 - 18 + 15 + 11 + 21 + 21 + 23 + 15 - 24 - 10 - 9 + 12 + 20 - 6 + 30 + 32", "x2": "sub relu n sqr mod x_0_5 INT- 9", "tree": "(relu(n) sub ((x_0_5 mod -9))**2)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361 - 400 - 441 - 484 - 529 - 576 - 625 - 676 - 729", "x2": "mul sign INT- 2 abs mul n n", "tree": "(sign(-2) mul abs((n mul n)))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 9 + 9 + 1 - 1 + 17 + 9 + 7 + 25 + 17 + 15 + 33 + 25 + 23 + 41 + 33 + 31 + 49 + 41 + 39 + 57 + 49 + 47 + 65 + 57 + 55 + 73 + 65 + 63 + 81 + 73", "x2": "add x_0_3 INT+ 8", "tree": "(x_0_3 add 8)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 6 - 8 - 6 - 9 - 4 - 3 - 10 - 8 - 7 - 9 - 8 - 6 - 8 - 12 - 9 - 5 - 9 - 12 - 10 - 15 - 10 - 7 - 11 - 16 - 10 - 7 - 12 - 19 - 11 - 7 - 13", "x2": "mul INT+ 1 idiv mul n mul idiv INT- 6 abs x_0_4 INT- 4 sub x_0_2 sign mod n x_0_3", "tree": "(1 mul ((n mul ((-6 idiv abs(x_0_4)) mul -4)) idiv (x_0_2 sub sign((n mod x_0_3)))))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 4 + 6 + 1 4396 + 2 5603 + 4 0 + 5 7600 + 7 8400 + 10 2400 + 12 9600 + 16 0 + 19 3600 + 23 400 + 27 400 + 31 3600 + 36 0 + 40 9600 + 46 2400 + 51 8400 + 57 7600 + 64 0 + 70 5600 + 77 4400 + 84 6400 + 92 1600 + 100 0 + 108 1600 + 116 6400 + 125 4400 + 134 5600", "x2": "relu relu add idiv mul n INT+ 5 x_0_2 sqr mul n mul INT+ 5 INT- 8", "tree": "relu(relu((((n mul 5) idiv x_0_2) add ((n mul (5 mul -8)))**2)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 10 + 6 - 3 + 3 + 9 + 5 - 4 + 2 + 8 + 4 - 5 + 1 + 7 + 3 - 6 + 0 + 6 + 2 - 7 - 1 + 5 + 1 - 8 - 2 + 4 + 0 - 9 - 3 + 3 - 1", "x2": "sub x_0_4 sign mul sqr relu INT- 1 abs x_0_2", "tree": "(x_0_4 sub sign(((relu(-1))**2 mul abs(x_0_2))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 4 + 16 + 144 + 2304 + 5 7600 + 207 3600 + 1 160 6400 + 65 280 9600 + 5267 2757 7600 + 52 6727 5776 0 + 6373 4036 8896 0 + 91 7770 1312 1024 0 + 1 5510 3152 1745 3056 0 + 304 21 7826 2079 8976 0 + 6 8400 4901 896 7976 9600 0 + 1751 525 4678 9580 2101 7600 0 + 50 6054 1860 2218 8680 7408 6400 0 + 1 6396 1556 2711 8913 2560 399 3600 0 + 591 9012 1813 8992 7685 4174 4168 9600 0 + 23 6760 4872 5559 7107 4166 9766 7584 0 0 + 1 441 1374 8797 1832 4370 7636 7140 4544 0 0 + 505 3510 5441 7836 6899 5449 6169 5979 9296 0 0 + 26 7330 7077 8703 5608 9859 2847 3717 3382 7584 0 0 + 1 5398 2487 6853 3251 775 8948 86 1186 8468 8384 0 0 + 962 3905 4803 3328 1923 4934 2505 3824 1779 3024 0 0 0 + 65 576 104 7052 9858 281 5553 3638 5144 2808 4224 0 0 0 + 4 7426 9911 6330 1626 6502 5253 8402 2477 180 7339 9296 0 0 0 + 3718 2761 720 2847 5293 7979 9010 7362 1982 1695 4504 8064 0 0 0", "x2": "mul abs mul x_0_1 n n", "tree": "(abs((x_0_1 mul n)) mul n)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 3 + 0 - 3 + 0 - 4 + 0 - 5 - 1 - 6 - 1 - 6 - 2 - 6 - 3 - 7 - 4 - 7 - 4 - 8 - 4 - 9 - 5 - 10 - 5 - 10 - 6 - 10 - 7 - 11", "x2": "add mod sub x_0_3 INT+ 1 INT- 2 x_0_2", "tree": "(((x_0_3 sub 1) mod -2) add x_0_2)", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 6 - 1 - 7 - 12 - 2 - 14 - 24 - 4 - 28 - 48 - 8 - 56 - 96 - 16 - 112 - 192 - 32 - 224 - 384 - 64 - 448 - 768 - 128 - 896 - 1536 - 256 - 1792 - 3072 - 512 - 3584", "x2": "mul abs sub relu INT+ 5 relu INT+ 7 x_0_3", "tree": "(abs((relu(5) sub relu(7))) mul x_0_3)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 7 + 5 + 9 + 7 + 1 + 10 + 1 + 14 + 1 + 11 + 1 + 13 + 1 + 10 + 1 + 14 + 1 + 11 + 1 + 13 + 1 + 10 + 1 + 14 + 1 + 11 + 1 + 13 + 1 + 10 + 1", "x2": "abs idiv add INT- 1 0 add sub add x_0_1 mod x_0_4 INT- 6 n n x_0_1", "tree": "abs(((-10 add (((x_0_1 add (x_0_4 mod -6)) sub n) add n)) idiv x_0_1))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 21 + 63 + 189 + 567 + 1701 + 5103 + 1 5309 + 4 5927 + 13 7781 + 41 3343 + 124 29 + 372 87 + 1116 261 + 3348 783 + 1 44 2349 + 3 132 7047 + 9 398 1141 + 27 1194 3423 + 81 3583 269 + 244 749 807 + 732 2247 2421 + 2196 6741 7263 + 6590 225 1789 + 1 9770 675 5367 + 5 9310 2026 6101 + 17 7930 6079 8303 + 53 3791 8239 4909", "x2": "mul INT+ 3 x_0_1", "tree": "(3 mul x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 5 + 1 + 10 + 5 - 4 + 2 + 12 + 7 - 2 + 4 + 14 + 9 + 0 + 6 + 16 + 11 + 2 + 8 + 18 + 13 + 4 + 10 + 20 + 15 + 6 + 12 + 22 + 17", "x2": "sub n mul sub x_0_2 abs idiv INT+ 5 n INT+ 1", "tree": "(n sub ((x_0_2 sub abs((5 idiv n))) mul 1))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 3 + 790 - 926 + 6008 - 2 6676 + 16 4680 - 114 6676 + 918 1152 - 8262 764 + 8 2621 9304 - 90 8839 8420 + 1090 6079 7424 - 1 4177 9034 7468 + 19 8490 6488 6456 - 297 7359 7327 1876 + 4763 7755 7237 8240 - 8 984 1847 3039 8396 + 145 7715 3251 4720 6472 - 2769 6591 1777 9688 3764 + 5 5393 1823 5559 3771 8544 - 116 3256 8294 6746 9204 1900 + 2559 1650 2482 8432 2497 3784 - 5 8860 7955 7105 3941 7434 388 + 141 2659 937 529 4601 8423 816 - 3531 6477 3426 3236 5046 570 3836 + 9 1822 8410 9084 4149 1197 4837 1560 - 247 9216 7094 5279 2026 2332 595 4836 + 6941 8067 8646 7817 6734 5297 6681 8352", "x2": "add sqr sub mul n INT+ 1 0 INT- 8 mul sub abs relu relu INT- 9 abs n x_0_1", "tree": "((((n mul 10) sub -8))**2 add ((abs(relu(relu(-9))) sub abs(n)) mul x_0_1))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 8 - 2 + 1 + 40 + 48 + 14 + 8 + 360 + 480 + 154 + 96 + 4680 + 6720 + 2310 + 1536 + 7 9560 + 12 960 + 4 3890 + 3 720 + 167 760 + 266 1120 + 100 9470 + 73 7280 + 4176 9000 + 6918 9120 + 2725 5690 + 2064 3840 + 12 1130 1000 + 20 7567 3600 + 8 4492 6390", "x2": "mul n abs x_0_4", "tree": "(n mul abs(x_0_4))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 5 + 2 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 + 4 + 5 + 5 + 5 + 5", "x2": "abs idiv n mod sign add add abs n x_0_1 relu n INT- 7", "tree": "abs((n idiv (sign(((abs(n) add x_0_1) add relu(n))) mod -7)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 2 + 1 + 4 + 1 + 6 + 1 + 8 + 1 + 10 + 1 + 12 + 1 + 14 + 1 + 16 + 1 + 18 + 1 + 20 + 1 + 22 + 1 + 24 + 1 + 26 + 1 + 28", "x2": "idiv n relu x_0_1", "tree": "(n idiv relu(x_0_1))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 2 + 6 + 24 + 120 + 720 + 5040 + 4 320 + 36 2880 + 362 8800 + 3991 6800 + 4 7900 1600 + 62 2702 800 + 871 7829 1200 + 1 3076 7436 8000 + 20 9227 8988 8000 + 355 6874 2809 6000 + 6402 3737 572 8000 + 12 1645 1004 883 2000 + 243 2902 81 7664 0 + 5109 942 1717 944 0 + 11 2400 727 7776 768 0 + 258 5201 6738 8849 7664 0 + 6204 4840 1733 2394 3936 0 + 15 5112 1004 3330 9859 8400 0 + 403 2914 6112 6605 6355 8400 0 + 1 888 8694 5041 8352 1607 6800 0 + 30 4888 3446 1171 3860 5015 400 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 10 - 1 - 8 + 2 + 3 + 2 + 1 + 1 + 1 + 1 + 2 + 1 + 2 + 1 + 1 + 2 + 1 + 2 + 1 + 1 + 2 + 1 + 2 + 1 + 1 + 2 + 1 + 2 + 1 + 1", "x2": "relu abs idiv add sub add abs mul x_0_1 x_0_4 INT- 3 n x_0_4 n", "tree": "relu(abs(((((abs((x_0_1 mul x_0_4)) add -3) sub n) add x_0_4) idiv n)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 8 - 3 + 7 + 0 + 2 + 1 + 0 + 2 + 1 + 0 + 2 + 1 + 0 + 2 + 1 + 0 + 2 + 1 + 0 + 2 + 1 + 0 + 2 + 1 + 0 + 2 + 1 + 0 + 2 + 1", "x2": "relu mod x_0_3 n", "tree": "relu((x_0_3 mod n))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 60 + 180 + 360 + 600 + 900 + 1260 + 1680 + 2160 + 2700 + 3300 + 3960 + 4680 + 5460 + 6300 + 7200 + 8160 + 9180 + 1 260 + 1 1400 + 1 2600 + 1 3860 + 1 5180 + 1 6560 + 1 8000 + 1 9500 + 2 1060", "x2": "mul mul add n mul n INT- 7 INT+ 5 sub sign n n", "tree": "(((n add (n mul -7)) mul 5) mul (sign(n) sub n))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 4 + 1 - 1 + 3 - 2 + 3 - 2 + 5 - 3 + 5 - 3 + 7 - 4 + 8 - 4 + 9 - 5 + 10 - 5 + 12 - 7 + 11 - 6 + 14 - 8 + 13 - 7 + 16", "x2": "idiv sqr mod x_0_1 n mul sign x_0_2 n", "tree": "(((x_0_1 mod n))**2 idiv (sign(x_0_2) mul n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 3 - 9 + 14 + 49 + 119 + 371 + 896 + 2709 + 6538 + 1 9474 + 4 7012 + 13 8817 + 33 5314 + 98 4620 + 238 21 + 696 1759 + 1683 9312 + 4911 7530 + 1 1888 517 + 3 4601 2618 + 8 3793 499 + 24 3478 4247 + 58 9919 6282 + 171 1829 8379 + 414 9408 7460 + 1202 7494 8059 + 2916 5793 5065 + 8446 2517 2853 + 2 488 8679 6950", "x2": "mul INT+ 7 abs sub idiv mul relu sqr sign INT+ 1 x_0_1 sub n sqr n x_0_2", "tree": "(7 mul abs((((relu((sign(1))**2) mul x_0_1) idiv (n sub (n)**2)) sub x_0_2)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 6 - 7 - 36 - 74 - 94 - 312 - 660 - 922 - 3204 - 7352 - 1 1164 - 4 1760 - 10 3044 - 16 7584 - 66 8292 - 175 1888 - 301 6660 - 1269 7704 - 3503 7924 - 6335 32 - 2 7934 9668 - 8 587 2440 - 15 2040 964 - 69 8374 1904 - 209 5268 3652 - 410 5082 6248 - 1955 4477 3540 - 6076 2782 6144 - 1 2315 2478 7684", "x2": "sub INT- 4 mul n abs sub x_0_3 INT+ 8", "tree": "(-4 sub (n mul abs((x_0_3 sub 8))))", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 + 8000 + 9261 + 1 648 + 1 2167 + 1 3824 + 1 5625 + 1 7576 + 1 9683", "x2": "abs mul sqr n n", "tree": "abs(((n)**2 mul n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 4 - 5 + 3 + 1 - 7 + 1 + 1 - 7 + 1 - 2 - 9 - 1 - 2 - 9 - 2 - 5 - 12 - 4 - 5 - 12 - 5 - 8 - 15 - 7 - 8 - 15 - 8 - 11 - 18 - 10 - 11 - 18", "x2": "add sub x_0_6 relu INT+ 2 mod mod idiv x_0_5 n idiv INT- 1 0 INT+ 6 INT- 8", "tree": "((x_0_6 sub relu(2)) add (((x_0_5 idiv n) mod (-10 idiv 6)) mod -8))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 5 - 4 + 10 + 4 - 5 + 7 + 9 + 9 + 12 + 5 + 13 + 6 + 7 + 13 + 15 + 7 + 14 + 6 + 6 + 11 + 19 + 10 + 16 + 7 + 6 + 10 + 17 + 14 + 19 + 9 + 7 + 10 + 16", "x2": "sub add add INT+ 4 n abs sub x_0_6 mod mul INT+ 8 n INT+ 7 n", "tree": "(((4 add n) add abs((x_0_6 sub ((8 mul n) mod 7)))) sub n)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 6 - 6 - 3 - 4 - 8 - 8 - 5 - 6 - 10 - 10 - 7 - 8 - 12 - 12 - 9 - 10 - 14 - 14 - 11 - 12 - 16 - 16 - 13 - 14 - 18 - 18 - 15 - 16 - 20", "x2": "add add n sub sub INT- 3 add abs n x_0_2 n INT- 3", "tree": "((n add ((-3 sub (abs(n) add x_0_2)) sub n)) add -3)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3", "x2": "idiv n idiv INT+ 8 sign n", "tree": "(n idiv (8 idiv sign(n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 2 + 7 + 1 + 6 + 0 + 5 - 1 + 4 - 2 + 3 - 3 + 2 - 4 + 1 - 5 + 0 - 6 - 1 - 7 - 2 - 8 - 3 - 9 - 4 - 10 - 5 - 11 - 6", "x2": "add sign INT- 1 0 x_0_2", "tree": "(sign(-10) add x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 3 - 1 + 0 - 9 + 2 + 0 - 1 + 8 - 3 + 0 + 1 - 8 + 3 + 0 - 1 + 8 - 3 + 0 + 1 - 8 + 3 + 0 - 1 + 8 - 3 + 0 + 1 - 8 + 3 + 0 - 1", "x2": "sub sub abs relu INT- 5 x_0_4 idiv INT+ 9 n", "tree": "((abs(relu(-5)) sub x_0_4) sub (9 idiv n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 8 - 6 - 5 - 10 - 8 - 8 - 5 - 11 - 8 - 8 - 5 - 11 - 8 - 8 - 5 - 11 - 8 - 8 - 5 - 11 - 8 - 8 - 5 - 11 - 8 - 8 - 5 - 11 - 8", "x2": "sub mod idiv mul add n INT+ 1 x_0_2 INT- 4 x_0_2 INT+ 5", "tree": "(((((n add 1) mul x_0_2) idiv -4) mod x_0_2) sub 5)", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 16 + 64 + 256 + 1024 + 4096 + 1 6384 + 6 5536 + 26 2144 + 104 8576 + 419 4304 + 1677 7216 + 6710 8864 + 2 6843 5456 + 10 7374 1824 + 42 9496 7296 + 171 7986 9184 + 687 1947 6736 + 2748 7790 6944 + 1 995 1162 7776 + 4 3980 4651 1104 + 17 5921 8604 4416 + 70 3687 4417 7664 + 281 4749 7671 656 + 1125 8999 684 2624 + 4503 5996 2737 496 + 1 8014 3985 948 1984 + 7 2057 5940 3792 7936", "x2": "mul INT+ 4 x_0_1", "tree": "(4 mul x_0_1)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 17 + 52 - 207 + 1036 - 6215 + 4 3506 - 34 8047 + 313 2424 - 3132 4239 + 3 4456 6630 - 41 3479 9559 + 537 5239 4268 - 7525 3351 9751 + 11 2880 279 6266 - 180 6080 4474 255 + 3070 3367 6058 4336 - 5 5266 616 9051 8047 + 105 55 1721 1984 2894 - 2100 1103 4423 9685 7879 + 4 4102 3172 2903 3401 5460 - 97 250 9790 3873 4834 119 + 2231 5772 5178 9090 1182 2738 - 5 3557 8540 4293 8162 8374 5711 + 133 8946 3510 7345 4070 9364 2776 - 3481 2605 1279 980 5844 3471 2175 + 9 3994 338 4535 6475 7797 3722 8726 - 263 1832 9476 6998 1321 8326 4240 4327", "x2": "sub sign n mul x_0_1 n", "tree": "(sign(n) sub (x_0_1 mul n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 6 + 6 - 49 - 49 - 49 + 49 + 49 + 49 - 49 - 49 - 49 + 49 + 49 + 49 - 49 - 49 - 49 + 49 + 49 + 49 - 49 - 49 - 49 + 49 + 49 + 49 - 49 - 49 - 49", "x2": "idiv sqr INT+ 7 sign add mul INT- 7 mod x_0_3 add x_0_3 abs add mul INT+ 2 INT+ 5 n INT- 1", "tree": "((7)**2 idiv sign(((-7 mul (x_0_3 mod (x_0_3 add abs(((2 mul 5) add n))))) add -1)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 5 + 4 - 77 + 574 - 4046 + 2 8861 - 20 6045 + 147 637 - 1049 6486 + 7491 7717 - 5 3471 8478 + 38 1650 4748 - 272 3995 7255 + 1944 2273 131 - 1 3876 7464 4153 + 9 9044 220 9856 - 70 6917 7457 9909 + 504 5561 4456 8434 - 3601 2238 2744 8030 + 2 5703 4092 1419 5573 - 18 3455 7575 1134 8049 + 130 9398 8693 7157 2553 - 934 5715 9501 37 6882 + 6670 4201 9532 8207 4517 - 4 7609 5205 7585 7552 9490 + 33 9808 6451 9607 3134 4604 - 242 5353 4577 3980 9393 3847 + 1731 740 8482 966 8624 3359 - 1 2355 3846 4538 4019 2311 5741", "x2": "mul add x_0_3 x_0_1 INT- 7", "tree": "((x_0_3 add x_0_1) mul -7)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 3 - 1 + 4 + 1 - 2 + 2 - 3 + 0 + 3 - 1 + 4 + 1 - 2 + 2 - 3 + 0 + 3 - 1 + 4 + 1 - 2 + 2 - 3 + 0 + 3 - 1 + 4 + 1 - 2 + 2 - 3", "x2": "sub sign mod add sub x_0_5 x_0_2 sign INT- 8 INT+ 7 x_0_4", "tree": "(sign((((x_0_5 sub x_0_2) add sign(-8)) mod 7)) sub x_0_4)", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 9 + 2 - 25 + 8 - 117 + 48 - 771 + 384 - 6555 + 3840 - 6 8265 + 4 6080 - 84 1365 + 64 5120 - 1197 5355 + 1032 1920 - 1 9325 9115 + 1 8579 4560 - 34 8612 8625 + 37 1589 1200 - 694 9280 9925 + 817 4960 6400 - 1 5165 8502 1875 + 1 9619 9055 3600 - 35 9526 3499 3275 + 51 117 5439 3600 - 919 7093 9042 4825 + 1428 3291 2302 800 - 2 5243 2431 9929 9125", "x2": "add mul x_0_2 n relu x_0_1", "tree": "((x_0_2 mul n) add relu(x_0_1))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5 - 5 - 6 - 6 - 6 - 6 - 7 - 7 - 7", "x2": "idiv n INT- 4", "tree": "(n idiv -4)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 3 + 13 + 12 + 24 + 25 + 39 + 42 + 58 + 63 + 81 + 88 + 108 + 117 + 139 + 150 + 174 + 187 + 213 + 228 + 256 + 273 + 303 + 322 + 354 + 375 + 409 + 432", "x2": "sub sub n n sub x_0_1 sqr sub n mul sign abs n INT- 1", "tree": "((n sub n) sub (x_0_1 sub ((n sub (sign(abs(n)) mul -1)))**2))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 2 + 1 - 5 - 5 + 1 - 5 - 23 - 5 - 41 - 5 - 17 - 5 - 71 - 5 - 59 - 53 - 23 - 41 - 53 - 53 - 95 - 29 - 77 - 5 + 1 - 5 - 149 - 149", "x2": "add mul INT- 6 mod sqr x_0_1 n sign n", "tree": "((-6 mul ((x_0_1)**2 mod n)) add sign(n))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 1 - 11 - 25 - 43 - 65 - 91 - 121 - 155 - 193 - 235 - 281 - 331 - 385 - 443 - 505 - 571 - 641 - 715 - 793 - 875 - 961 - 1051 - 1145 - 1243 - 1345 - 1451", "x2": "sub INT+ 7 mul INT+ 2 sqr n", "tree": "(7 sub (2 mul (n)**2))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 0 - 8 + 10 + 3 + 10 - 1 + 4 - 7 - 3 + 10 - 6 + 3 + 1 + 10 + 20 + 13 + 0 + 0 + 20 + 13 + 20 + 10 + 16 + 23 + 30 + 30 + 8 + 8 + 30 + 30 + 38", "x2": "sub mod add x_0_4 x_0_2 add n relu relu x_0_5 mod x_0_2 INT+ 1 0", "tree": "(((x_0_4 add x_0_2) mod (n add relu(relu(x_0_5)))) sub (x_0_2 mod 10))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 3 - 7 + 4 + 2 + 0 + 4 + 2 + 6 + 4 + 8 + 6 + 10 + 8 + 12 + 10 + 14 + 12 + 16 + 14 + 18 + 16 + 20 + 18 + 22 + 20 + 24 + 22 + 26 + 24 + 28", "x2": "sub mod sqr mod n INT+ 6 INT- 4 sub abs sign x_0_3 mod INT- 1 n", "tree": "((((n mod 6))**2 mod -4) sub (abs(sign(x_0_3)) sub (-1 mod n)))", "n_input_points": "27", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 5 + 144 + 169 + 400 + 1089 + 1600 + 3249 + 4624 + 7225 + 1 1664 + 1 5625 + 2 3104 + 2 9929 + 4 0 + 5 4289 + 6 7600 + 8 8209 + 10 7584 + 13 3225 + 16 6464 + 19 8025 + 24 2064 + 28 4089 + 33 6400 + 40 689 + 46 2400 + 54 3169 + 62 944", "x2": "sqr add INT- 8 sub mod x_0_1 INT+ 5 relu abs sqr n", "tree": "((-8 add ((x_0_1 mod 5) sub relu(abs((n)**2)))))**2", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 4 + 8 + 4 - 2 - 1 - 3 - 2 - 5 - 3 - 8 - 4 - 12 - 4 - 20 - 3 - 42 - 2 - 111 - 1 - 373 - 1 - 1371 - 1 - 5488 - 1 - 2 3786 - 1 - 11 1006 - 1", "x2": "idiv add sub n mod INT+ 3 mul x_0_2 n sqr sqr sign INT- 8 sub x_0_1 INT+ 5", "tree": "(((n sub (3 mod (x_0_2 mul n))) add ((sign(-8))**2)**2) idiv (x_0_1 sub 5))", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 6 + 2 + 1 + 2 + 4 + 4 + 4 + 1 + 1 + 0 + 2 + 1 + 0 + 4 + 2 + 2 + 1 + 2 + 4 + 4 + 4 + 1 + 1 + 0 + 2 + 1 + 0 + 4 + 2 + 2", "x2": "mod mod sqr sub n sub x_0_3 add abs x_0_1 INT- 7 INT+ 7 INT+ 1 0", "tree": "((((n sub (x_0_3 sub (abs(x_0_1) add -7))))**2 mod 7) mod 10)", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 2 + 2 - 1 + 3 + 0 + 4 + 1 + 5 + 2 + 6 + 3 + 7 + 4 + 8 + 5 + 9 + 6 + 10 + 7 + 11 + 8 + 12 + 9 + 13 + 10 + 14 + 11", "x2": "add INT- 2 relu sub n add sign n x_0_1", "tree": "(-2 add relu((n sub (sign(n) add x_0_1))))", "n_input_points": "27", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 2 + 8 - 5 + 56 + 14 + 56 - 35 + 392 + 98 + 392 - 245 + 2744 + 686 + 2744 - 1715 + 1 9208 + 4802 + 1 9208 - 1 2005 + 13 4456 + 3 3614 + 13 4456 - 8 4035 + 94 1192 + 23 5298 + 94 1192 - 58 8245 + 658 8344 + 164 7086 + 658 8344", "x2": "mul x_0_4 sub INT+ 7 relu sub x_0_1 idiv mod abs x_0_4 INT+ 1 add sign INT- 4 mod INT- 5 INT+ 2", "tree": "(x_0_4 mul (7 sub relu((x_0_1 sub ((abs(x_0_4) mod 1) idiv (sign(-4) add (-5 mod 2)))))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 10 + 2 - 2 - 3 - 8 - 4 + 243 - 6 - 6 + 240 - 14 - 1 1337 4090 + 483 - 20 - 3 3594 496 + 723 - 34 - 17 9865 8162 + 1206 - 54 - 71 7788 8050 + 1929 - 88 - 314 2140 2564 + 3135 - 142 - 1319 2299 8894 + 5064 - 230 - 5615 545 2658 + 8199 - 372 - 2 3754 7599 6384", "x2": "sub x_0_3 sub mul sqr abs relu x_0_5 mul INT+ 8 x_0_2 x_0_6", "tree": "(x_0_3 sub (((abs(relu(x_0_5)))**2 mul (8 mul x_0_2)) sub x_0_6))", "n_input_points": "27", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 4 + 6 - 10 - 6 - 7 - 9 + 3 + 14 - 1 + 4 + 4 + 3 + 16 + 28 + 14 + 20 + 21 + 21 + 35 + 48 + 35 + 42 + 44 + 45 + 60 + 74 + 62 + 70 + 73 + 75 + 91 + 106 + 95", "x2": "mul INT+ 1 add n x_0_6", "tree": "(1 mul (n add x_0_6))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 9 + 8 - 4 - 10 - 6 + 14 + 8 + 18 + 30 + 44 + 60 + 78 + 98 + 120 + 144 + 170 + 198 + 228 + 260 + 294 + 330 + 368 + 408 + 450 + 494 + 540 + 588 + 638 + 690", "x2": "mul add INT- 6 sub n sign mul mod x_0_3 x_0_2 add add sign n INT+ 9 x_0_3 n", "tree": "((-6 add (n sub sign(((x_0_3 mod x_0_2) mul ((sign(n) add 9) add x_0_3))))) mul n)", "n_input_points": "27", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 7 + 17 + 16 + 26 + 25 + 35 + 34 + 44 + 43 + 53 + 52 + 62 + 61 + 71 + 70 + 80 + 79 + 89 + 88 + 98 + 97 + 107 + 106 + 116 + 115 + 125 + 124 + 134", "x2": "add INT+ 9 add abs x_0_2 mul x_0_1 idiv n sqr INT+ 9", "tree": "(9 add (abs(x_0_2) add (x_0_1 mul (n idiv (9)**2))))", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 3 + 11 + 4 + 12 + 5 + 13 + 6 + 14 + 7 + 15 + 8 + 16 + 9 + 17 + 10 + 18 + 11 + 19 + 12 + 20 + 13 + 21 + 14 + 22 + 15 + 23 + 16 + 24", "x2": "add sign x_0_1 x_0_2", "tree": "(sign(x_0_1) add x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 33 1776 + 1677 7216 + 2 736 0 + 13 5895 4496 + 61 4656 0 + 217 4327 1936 + 645 2412 8256 + 1677 7216 0 + 3934 6012 5696 + 8493 4656 0 + 1 7127 8991 7696 + 3 2628 4974 4896 + 5 9224 896 0 + 10 3122 1647 7696 + 17 3189 1456 0 + 28 1792 8042 9056 + 44 5830 7682 7136 + 68 7970 7136 0 + 103 8129 4961 496 + 153 5220 1216 0 + 222 9197 1080 6016 + 318 3432 4441 4976 + 447 7456 0 0 + 621 95 8976 4096 + 850 3056 0 0 + 1150 4969 3288 8576 + 1539 5967 8738 8416", "x2": "sqr sqr mul add n add mul n n n INT+ 8", "tree": "((((n add ((n mul n) add n)) mul 8))**2)**2", "n_input_points": "27", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 9 + 1 + 2 + 6 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign idiv x_0_4 abs n", "tree": "sign((x_0_4 idiv abs(n)))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 9 + 6 + 4 + 5 + 6 - 53 - 232 + 9 - 170 - 109 - 168 - 227 + 14 - 165 - 104 - 163 - 222 + 19 - 160 - 99 - 158 - 217 + 24 - 155 - 94 - 153 - 212 + 29 - 150", "x2": "add n mul mul mod sub sub sub x_0_3 n INT- 1 0 abs x_0_1 INT+ 5 INT- 1 0 add INT+ 6 mod n n", "tree": "(n add ((((((x_0_3 sub n) sub -10) sub abs(x_0_1)) mod 5) mul -10) mul (6 add (n mod n))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 4 + 7 - 6 + 13 - 7 + 10 - 13 + 11 + 54 + 77 + 53 + 10 - 13 + 11 + 54 + 77 + 53 + 10 - 13 + 11 + 54 + 77 + 53 + 10 - 13 + 11 + 54 + 77 + 53 + 10", "x2": "sub sqr mod INT+ 8 sub relu add mul n add INT- 9 n n mod idiv INT- 9 x_0_3 INT- 7 x_0_3", "tree": "(((8 mod (relu(((n mul (-9 add n)) add n)) sub ((-9 idiv x_0_3) mod -7))))**2 sub x_0_3)", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 7 - 4 - 7 + 4 + 7 - 4 - 7 + 4 + 7 - 4 - 7 + 4 + 7 - 4 - 7 + 4 + 7 - 4 - 7 + 4 + 7 - 4 - 7 + 4 + 7 - 4 - 7 + 4 + 7", "x2": "sub relu INT- 7 x_0_2", "tree": "(relu(-7) sub x_0_2)", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 6 - 8 - 14 - 26 - 46 - 76 - 118 - 174 - 246 - 336 - 446 - 578 - 734 - 916 - 1126 - 1366 - 1638 - 1944 - 2286 - 2666 - 3086 - 3548 - 4054 - 4606 - 5206 - 5856 - 6558 - 7314", "x2": "add mul sub sign INT+ 4 n n x_0_1", "tree": "(((sign(4) sub n) mul n) add x_0_1)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485 + 530 + 577 + 626 + 677 + 730", "x2": "add sqr idiv n n sqr n", "tree": "(((n idiv n))**2 add (n)**2)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 4 + 6 + 9 + 13 + 18 + 24 + 31 + 39 + 48 + 58 + 69 + 81 + 94 + 108 + 123 + 139 + 156 + 174 + 193 + 213 + 234 + 256 + 279 + 303 + 328 + 354 + 381", "x2": "add x_0_1 add sub INT+ 2 INT+ 3 n", "tree": "(x_0_1 add ((2 sub 3) add n))", "n_input_points": "27", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 1 - 8 + 4 + 1 + 0 + 4 + 1 + 0 + 4 + 1 + 0 + 4 + 1 + 0 + 4 + 1 + 0 + 4 + 1 + 0 + 4 + 1 + 0 + 4 + 1 + 0 + 4 + 1 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 9 + 3 + 10 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "27", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 56 - 210 - 462 - 812 - 1260 - 1806 - 2450 - 3192 - 4032 - 4970 - 6006 - 7140 - 8372 - 9702 - 1 1130 - 1 2656 - 1 4280 - 1 6002 - 1 7822 - 1 9740 - 2 1756 - 2 3870 - 2 6082 - 2 8392 - 3 800 - 3 3306 - 3 5910", "x2": "mul sub sub idiv INT+ 7 sub INT+ 2 sqr INT+ 3 n mul n add INT+ 8 INT- 2 mul n abs INT- 7", "tree": "((((7 idiv (2 sub (3)**2)) sub n) sub (n mul (8 add -2))) mul (n mul abs(-7)))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 5 + 3 - 6 - 7 + 52 + 16 + 8 + 8 + 68 + 33 + 26 + 27 + 88 + 54 + 48 + 50 + 112 + 79 + 74 + 77 + 140 + 108 + 104 + 108 + 172 + 141 + 138 + 143 + 208 + 178 + 176", "x2": "add n add sub x_0_4 INT- 7 mul idiv mod idiv add x_0_3 INT- 8 x_0_3 n x_0_1 mul abs n x_0_1", "tree": "(n add ((x_0_4 sub -7) add (((((x_0_3 add -8) idiv x_0_3) mod n) idiv x_0_1) mul (abs(n) mul x_0_1))))", "n_input_points": "27", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 10 + 12 + 0 + 4 + 1 + 5 + 2 + 6 + 3 + 7 + 4 + 8 + 5 + 9 + 6 + 10 + 7 + 11 + 8 + 12 + 9 + 13 + 10 + 14 + 11 + 15 + 12 + 16", "x2": "relu sub n x_0_1", "tree": "relu((n sub x_0_1))", "n_input_points": "27", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 6 + 6 - 3 + 15 + 30 + 28 + 49 + 51 + 72 + 72 + 93 + 97 + 124 + 132 + 159 + 165 + 192 + 202 + 235 + 249 + 282 + 294 + 327 + 343 + 382 + 402 + 441 + 459 + 498 + 520", "x2": "sub sqr add n sign x_0_3 x_0_3", "tree": "(((n add sign(x_0_3)))**2 sub x_0_3)", "n_input_points": "27", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 9 - 10 + 2080 - 3150 - 5400 + 163 720 - 342 7200 - 787 3200 + 30 9836 8000 - 82 9382 4000 - 238 855 6800 + 11 5197 3222 4000 - 37 3885 5859 2000 - 128 5662 672 0 + 7 3726 2862 3360 0 - 28 937 6292 6028 8000 - 112 4697 1763 8656 0 + 7 4522 5301 2492 2880 0 - 32 5887 6499 4193 4080 0 - 148 7974 3643 5941 8880 0 + 11 1813 6041 9943 4289 1520 0", "x2": "mul x_0_3 mul n mul add INT+ 9 n n", "tree": "(x_0_3 mul (n mul ((9 add n) mul n)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 4 + 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189 + 209", "x2": "add relu relu x_0_1 n", "tree": "(relu(relu(x_0_1)) add n)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 7 - 3 + 6 - 7 - 5 + 4 + 13 + 10 + 2 + 16 + 15 + 7 - 1 + 3 + 12 - 1 + 1 + 10 + 19 + 16 + 8 + 22 + 21 + 13 + 5", "x2": "sub sub add INT+ 2 mul n sign mul sub sqr INT+ 6 mod n INT- 1 relu INT+ 5 x_0_6 INT+ 3", "tree": "(((2 add (n mul sign((((6)**2 sub (n mod -1)) mul relu(5))))) sub x_0_6) sub 3)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 8 - 8 - 4 - 14 - 14 - 10 - 20 - 20 - 16 - 26 - 26 - 22 - 32 - 32 - 28 - 38 - 38 - 34 - 44 - 44 - 40 - 50", "x2": "sub x_0_3 INT+ 6", "tree": "(x_0_3 sub 6)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 3 - 1 - 4 - 10 - 66 - 7 + 1 + 1 - 92 - 4355 - 47 + 1 + 1 - 8411 - 1896 6019 - 2202 + 1 + 1 - 7074 2708 - 359 7098 7670 8350 - 484 8792 + 1 + 1", "x2": "sub mod sign n n relu add sub x_0_3 sub n INT+ 1 0 sqr x_0_5", "tree": "((sign(n) mod n) sub relu(((x_0_3 sub (n sub 10)) add (x_0_5)**2)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 1 + 0 - 6 - 28 - 167 - 1169 - 9352 - 8 4168 - 84 1680 - 925 8480 - 1 1110 1760 - 14 4432 2880 - 202 2052 320 - 3033 780 4800 - 4 8529 2487 6800 - 82 4997 2290 5600 - 1484 9950 1230 800 - 2 8214 9052 3371 5200 - 56 4298 1046 7430 4000 - 1185 260 1981 6038 4000 - 2 6070 5724 3595 2844 8000 - 59 9623 1660 2691 5430 4000", "x2": "add mul n x_0_1 relu x_0_4", "tree": "((n mul x_0_1) add relu(x_0_4))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 5 - 8 - 131 - 178 - 317 - 402 - 523 - 659 - 812 - 981 - 1166 - 1367 - 1584 - 1817 - 2066 - 2331 - 2612 - 2909 - 3222 - 3551 - 3896", "x2": "sub sub idiv sub n x_0_1 x_0_3 n mul INT+ 8 sqr abs n", "tree": "((((n sub x_0_1) idiv x_0_3) sub n) sub (8 mul (abs(n))**2))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 9 + 4 + 4 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign idiv relu x_0_3 idiv sqr sub mul n x_0_2 n n", "tree": "sign((relu(x_0_3) idiv ((((n mul x_0_2) sub n))**2 idiv n)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 9 + 6 + 9 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign x_0_3", "tree": "sign(x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 - 40 - 160 - 640 - 2560 - 1 240 - 4 960 - 16 3840 - 65 5360 - 262 1440 - 1048 5760 - 4194 3040 - 1 6777 2160 - 6 7108 8640 - 26 8435 4560 - 107 3741 8240 - 429 4967 2960 - 1717 9869 1840 - 6871 9476 7360 - 2 7487 7906 9440", "x2": "mul x_0_1 sub x_0_1 sub x_0_1 INT+ 4", "tree": "(x_0_1 mul (x_0_1 sub (x_0_1 sub 4)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 6 - 10 - 27 - 104 - 515 - 3084 - 2 1581 - 17 2640 - 155 3751 - 1553 7500 - 1 7091 2489 - 20 5094 9856 - 266 6234 8115 - 3732 7287 3596 - 5 5990 9310 3925 - 89 5854 8966 2784 - 1522 9533 2426 7311 - 2 7413 1598 3681 1580 - 52 850 368 9942 1 - 1041 7000 7379 8840 0", "x2": "mul n mul mod INT+ 1 x_0_1 sign n", "tree": "(n mul ((1 mod x_0_1) mul sign(n)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 2 + 9 + 9 - 3 + 1 - 8 - 8 + 1 + 0 + 1 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 1 + 0 + 1 + 0 + 0", "x2": "sub sign INT+ 9 abs relu x_0_4", "tree": "(sign(9) sub abs(relu(x_0_4)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 5 - 3 - 1 + 3 + 5 + 4 + 7 + 3 + 5 + 4 + 7 + 3 + 5 + 4 + 7 + 3 + 5 + 4 + 7 + 3 + 5 + 4", "x2": "relu mod x_0_4 n", "tree": "relu((x_0_4 mod n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 3 + 0 - 3 + 8 + 4 + 1 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1", "x2": "relu sub INT+ 1 x_0_4", "tree": "relu((1 sub x_0_4))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 9 - 1 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1", "x2": "abs add relu x_0_2 sub x_0_1 relu add x_0_2 x_0_2", "tree": "abs((relu(x_0_2) add (x_0_1 sub relu((x_0_2 add x_0_2)))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859", "x2": "mul sqr n n", "tree": "((n)**2 mul n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 8 + 12 + 40 + 220 + 1520 + 1 2140 + 10 9240 + 109 2380 + 1201 6160 + 1 4419 3900 + 18 7452 680 + 262 4328 9500 + 3936 4934 2480 + 6 2983 8947 9660 + 107 726 2115 4200 + 1927 3071 8077 5580 + 3 6618 8364 3473 6000 + 73 2376 7286 9471 9980 + 1537 9911 3025 8911 9560", "x2": "add abs add INT- 1 0 mul abs x_0_1 add n abs INT- 1 INT- 1 0", "tree": "(abs((-10 add (abs(x_0_1) mul (n add abs(-1))))) add -10)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 9 + 7 + 14 + 23 + 34 + 47 + 62 + 79 + 98 + 119 + 142 + 167 + 194 + 223 + 254 + 287 + 322 + 359 + 398 + 439", "x2": "sub sqr n sub INT+ 2 sqr mod relu mul mod idiv sub INT+ 1 0 x_0_2 INT- 3 INT- 3 INT+ 3 n", "tree": "((n)**2 sub (2 sub ((relu(((((10 sub x_0_2) idiv -3) mod -3) mul 3)) mod n))**2))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 6 - 3 - 168 - 84 - 4704 - 2352 - 13 1712 - 6 5856 - 368 7936 - 184 3968 - 1 326 2208 - 5163 1104 - 28 9134 1824 - 14 4567 912 - 809 5757 1072 - 404 7878 5536 - 2 2668 1199 16 - 1 1334 599 5008 - 63 4707 3572 448 - 31 7353 6786 224 - 1777 1806 17 2544", "x2": "mul mul INT- 7 sub INT- 2 INT- 1 mul x_0_2 sub INT+ 5 sign sub n x_0_1", "tree": "((-7 mul (-2 sub -1)) mul (x_0_2 mul (5 sub sign((n sub x_0_1)))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 9 + 2 + 6 - 26 + 6 + 6 - 78 - 90 + 6 + 6 - 126 - 282 + 6 + 6 - 354 - 378 + 6 + 6 - 678 - 714 + 6", "x2": "sub INT+ 6 mul sub n mod relu n abs x_0_2 add n n", "tree": "(6 sub ((n sub (relu(n) mod abs(x_0_2))) mul (n add n)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 5 - 3 - 8 + 16 + 0 + 47 + 3 + 60 + 95 + 69 + 136 + 104 + 96 + 151 + 115 + 180 + 223 + 205 + 280 + 256 + 256 + 319", "x2": "relu mod sub INT- 5 x_0_4 sqr n", "tree": "relu(((-5 sub x_0_4) mod (n)**2))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 10 - 7 + 1 - 8 - 7 - 15 - 8 - 7 - 8 - 8 - 7 - 8 - 8 - 7 - 8 - 8 - 7 - 8 - 8 - 7 - 8 - 8", "x2": "add INT- 8 idiv INT- 7 x_0_3", "tree": "(-8 add (-7 idiv x_0_3))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 1 + 9 - 11 + 13 - 15 + 17 - 19 + 21 - 23 + 25 - 27 + 29 - 31 + 33 - 35 + 37 - 39 + 41 - 43 + 45", "x2": "mul add relu add n INT+ 3 n sign x_0_2", "tree": "((relu((n add 3)) add n) mul sign(x_0_2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 7 + 2 - 2 - 3 + 7 + 4 + 4 + 15 + 13 + 14 + 26 + 25 + 27 + 40 + 40 + 43 + 57 + 58 + 62 + 77 + 79 + 84", "x2": "add n x_0_3", "tree": "(n add x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 7 - 5 - 7 - 6 - 8 - 6 - 3 - 2 - 7 - 2 - 9 - 3 - 7 - 14 - 7 - 20 - 7 - 1 - 19 - 29", "x2": "mod sqr x_0_1 sub x_0_1 n", "tree": "((x_0_1)**2 mod (x_0_1 sub n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 6 + 24 + 54 + 96 + 150 + 216 + 294 + 384 + 486 + 600 + 726 + 864 + 1014 + 1176 + 1350 + 1536 + 1734 + 1944 + 2166", "x2": "mul sqr n abs INT- 6", "tree": "((n)**2 mul abs(-6))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "add mul n n mul sub INT+ 4 relu abs relu abs INT- 4 INT- 8", "tree": "((n mul n) add ((4 sub relu(abs(relu(abs(-4))))) mul -8))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 2 + 8 - 5 + 4 - 10 - 2 - 17 - 10 - 26 - 20 - 37 - 32 - 50 - 46 - 65 - 62 - 82 - 80 - 101 - 100 - 122", "x2": "sub x_0_2 n", "tree": "(x_0_2 sub n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 2 - 32 + 0 + 128 + 0 - 512 + 0 + 2048 + 0 - 8192 + 0 + 3 2768 + 0 - 13 1072 + 0 + 52 4288 + 0 - 209 7152 + 0", "x2": "mul mod add INT- 2 x_0_2 add INT- 5 idiv x_0_1 sub sqr n x_0_1 x_0_2", "tree": "(((-2 add x_0_2) mod (-5 add (x_0_1 idiv ((n)**2 sub x_0_1)))) mul x_0_2)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 9 + 5 - 3 + 9 + 8 + 7 - 4 - 8 + 12 - 1 - 1 - 11 - 4 + 20 - 13 + 0 - 10 + 7 + 24 - 33 + 13 - 10 + 17 + 17", "x2": "sub add sqr relu sub INT+ 3 n x_0_5 x_0_6", "tree": "(((relu((3 sub n)))**2 add x_0_5) sub x_0_6)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 14 + 11 + 6 - 1 - 10 - 21 - 34 - 49 - 66 - 85 - 106 - 129 - 154 - 181 - 210 - 241 - 274 - 309 - 346", "x2": "sub add idiv sign n sub n INT- 1 0 relu abs sub INT- 9 INT+ 6 sqr n", "tree": "(((sign(n) idiv (n sub -10)) add relu(abs((-9 sub 6)))) sub (n)**2)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 5 - 4 - 3 + 0 + 4 + 11 + 20 + 27 + 34 + 43 + 56 + 75 + 89 + 112 + 131 + 146 + 174 + 199 + 221 + 240", "x2": "add sub mod sqr INT- 9 n mod INT- 4 INT+ 5 sub add n x_0_1 sign n", "tree": "((((-9)**2 mod n) sub (-4 mod 5)) add ((n add x_0_1) sub sign(n)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "sqr add n INT+ 9", "tree": "((n add 9))**2", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 7 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0", "x2": "idiv sign sign idiv x_0_2 n INT- 5", "tree": "(sign(sign((x_0_2 idiv n))) idiv -5)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 9 - 9 - 60 - 25 - 490 - 85 - 4670 - 545 - 4 6310 - 4965 - 46 2510 - 4 8945 - 462 4270 - 48 8485 - 4624 1590 - 488 3585 - 4 6241 4470 - 4883 4245 - 46 2414 2910 - 4 8834 465 - 462 4142 6910", "x2": "mul abs INT+ 5 add add add INT- 3 sqr n x_0_2 x_0_2", "tree": "(abs(5) mul (((-3 add (n)**2) add x_0_2) add x_0_2))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 5 + 4 - 9 - 8 + 1 + 7 + 45 + 54 + 41 + 42 + 51 + 57 + 95 + 104 + 91 + 92 + 101 + 107 + 145 + 154 + 141 + 142 + 151 + 157 + 195", "x2": "add mul add mod INT- 2 sign INT+ 2 INT- 5 INT- 1 0 x_0_6", "tree": "((((-2 mod sign(2)) add -5) mul -10) add x_0_6)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 1 + 6 + 1 + 9 + 6 + 11 + 8 + 13 + 10 + 15 + 12 + 17 + 14 + 19 + 16 + 21 + 18 + 23 + 20 + 25", "x2": "abs add x_0_2 abs mod add sign n add x_0_2 x_0_1 n", "tree": "abs((x_0_2 add abs(((sign(n) add (x_0_2 add x_0_1)) mod n))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 2 - 6 + 9 - 7 + 5 + 6 + 7 + 8 + 3 + 10 + 11 + 6 + 13 + 14 + 9 + 16 + 17 + 12 + 19 + 20 + 15 + 22 + 23", "x2": "add mod mul sub sign abs n x_0_4 relu mul x_0_4 sub sign n INT- 2 INT- 9 n", "tree": "((((sign(abs(n)) sub x_0_4) mul relu((x_0_4 mul (sign(n) sub -2)))) mod -9) add n)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 1 + 2 - 15 + 20 - 20 + 40 - 25 + 50 - 30 + 60 - 35 + 70 - 40 + 80 - 45 + 90 - 50 + 100 - 55 + 110 - 60", "x2": "idiv sub mod INT+ 1 0 x_0_2 mul n INT- 5 sign x_0_2", "tree": "(((10 mod x_0_2) sub (n mul -5)) idiv sign(x_0_2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 7 - 4 + 8 - 7 - 2 + 7 + 4 + 8 + 7 + 2 + 7 + 4 + 8 + 7 + 2 + 7 + 4 + 8 + 7 + 2 + 7 + 4 + 8 + 7", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 3 + 0 - 5 + 7 + 5 + 11 + 0 + 3 - 2 + 10 + 8 + 14 + 3 + 6 + 1 + 13 + 11 + 17 + 6 + 9 + 4 + 16", "x2": "add n idiv x_0_3 INT- 1", "tree": "(n add (x_0_3 idiv -1))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 6 + 23 + 30 + 53 + 66 + 95 + 114 + 149 + 174 + 215 + 246 + 293 + 330 + 383 + 426 + 485 + 534 + 599 + 654 + 725", "x2": "add abs mul n abs INT- 6 x_0_2", "tree": "(abs((n mul abs(-6))) add x_0_2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 10 + 7 - 9 + 8 - 8 + 9 - 7 + 10 - 6 + 11 - 5 + 12 - 4 + 13 - 3 + 14 - 2 + 15 - 1 + 16", "x2": "sub INT- 7 add sub x_0_1 add n sign n INT- 1", "tree": "(-7 sub ((x_0_1 sub (n add sign(n))) add -1))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 4 - 5 + 1 - 2 + 39 + 57 + 15 + 57 - 303 + 4110 + 9684 + 246 + 1 2570 - 3 6882 + 5058 9264 + 2 8133 7486 + 6 8562 + 4 7434 6794 - 4 5530 3208 + 7677 8183 6414 7894 + 23 7452 3430 8578 3722 + 98 3312 2590 + 67 5014 6470 3196 4396", "x2": "mul relu INT+ 3 add x_0_4 sub sqr relu x_0_5 mul INT+ 4 sub x_0_4 add relu n INT- 6", "tree": "(relu(3) mul (x_0_4 add ((relu(x_0_5))**2 sub (4 mul (x_0_4 sub (relu(n) add -6))))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 9 - 8 + 9 - 2 - 2 + 52 - 2 - 2 + 466 - 2 - 2 + 5590 - 2 - 2 + 8 3848 - 2 - 2 + 150 9262 - 2 - 2 + 3169 4500 - 2", "x2": "add mod sub abs INT+ 1 0 sqr INT+ 4 mul x_0_3 n abs INT+ 4", "tree": "(((abs(10) sub (4)**2) mod (x_0_3 mul n)) add abs(4))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 8 + 11 + 15 + 20 + 26 + 33 + 41 + 50 + 60 + 71 + 83 + 96 + 110 + 125 + 141 + 158 + 176 + 195 + 215", "x2": "add relu n x_0_1", "tree": "(relu(n) add x_0_1)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 1 + 2 + 7 + 1 + 2 + 7 + 1 + 2 + 7 + 1 + 2 + 7 + 1 + 2 + 7 + 1 + 2 + 7 + 1 + 2 + 7", "x2": "mul sign mod idiv add n mul n INT- 7 INT- 8 x_0_2 x_0_3", "tree": "(sign((((n add (n mul -7)) idiv -8) mod x_0_2)) mul x_0_3)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr sub n mod INT- 7 sign n", "tree": "((n sub (-7 mod sign(n))))**2", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 1 + 4 + 0 + 0 - 1 - 1 - 1 + 0 + 0 + 0 - 1 - 1 - 1 + 0 + 0 + 0 - 1 - 1 - 1 + 0 + 0", "x2": "mod sub x_0_3 INT+ 5 INT- 2", "tree": "((x_0_3 sub 5) mod -2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 8 - 8 + 0 + 5 + 4 + 5 + 6 + 7 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 17 + 18 + 19 + 20", "x2": "sub sub n sqr abs idiv add n INT- 9 INT+ 9 idiv x_0_2 n", "tree": "((n sub (abs(((n add -9) idiv 9)))**2) sub (x_0_2 idiv n))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 1 - 2 - 12 + 25 - 19 - 13 - 3 - 7 + 13 - 32 - 42 + 4 - 16 - 75 + 59 - 31 - 28 - 2 - 19 + 178", "x2": "idiv mul n sub x_0_1 x_0_2 x_0_2", "tree": "((n mul (x_0_1 sub x_0_2)) idiv x_0_2)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 9 - 9 - 6 - 7 - 5 + 0 - 3 + 1 - 2 - 5 + 3 - 4 + 3 + 3 - 8 + 7 - 7 + 0 + 11 - 15 + 14 - 7 - 11 + 26", "x2": "sub x_0_5 x_0_4", "tree": "(x_0_5 sub x_0_4)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 3 - 6 - 18 - 72 - 360 - 2160 - 1 5120 - 12 960 - 108 8640 - 1088 6400 - 1 1975 400 - 14 3700 4800 - 186 8106 2400 - 2615 3487 3600 - 3 9230 2310 4000 - 62 7683 6966 4000 - 1067 622 8428 8000 - 1 9207 1211 1718 4000 - 36 4935 3012 2649 6000 - 729 8706 245 2992 0", "x2": "mul relu n x_0_1", "tree": "(relu(n) mul x_0_1)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 1 - 5 - 7 + 72 + 24 + 592 + 680 + 440 + 9528 + 7344 + 7096 + 9 3680 + 6 720 + 11 3592 + 101 3104 + 97 1576 + 181 7528 + 843 7040 + 1554 5272 + 2908 504 + 1 3499 2696 + 2 4872 4408", "x2": "mul mul add relu sub x_0_3 INT- 7 mod x_0_3 add x_0_2 INT+ 9 relu sign n INT+ 8", "tree": "(((relu((x_0_3 sub -7)) add (x_0_3 mod (x_0_2 add 9))) mul relu(sign(n))) mul 8)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 7 - 1 + 0 + 0 - 3 - 3 - 2 - 2 - 1 - 1 + 0 + 0 - 3 - 3 - 2 - 2 - 1 - 1 + 0 + 0", "x2": "mod add x_0_2 sign n INT- 4", "tree": "((x_0_2 add sign(n)) mod -4)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 10 - 6 + 2 + 7 + 2 - 2 + 4 + 2 + 1 + 1 - 2 - 2 + 1 + 1 - 2 - 3 - 2 + 1 + 2 - 2 - 3", "x2": "add abs x_0_3 mod add relu sqr n add n idiv x_0_3 n INT- 5", "tree": "(abs(x_0_3) add ((relu((n)**2) add (n add (x_0_3 idiv n))) mod -5))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 6 - 4 - 10 + 11 + 4 + 4 - 2 + 19 + 14 + 12 + 6 + 27 + 22 + 20 + 14 + 35 + 30 + 28 + 22 + 43 + 38 + 36", "x2": "add add x_0_4 INT+ 8 relu mod INT- 1 0 mod sign x_0_2 relu idiv INT+ 9 INT+ 2", "tree": "((x_0_4 add 8) add relu((-10 mod (sign(x_0_2) mod relu((9 idiv 2))))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 0 - 6 + 0 + 30 + 0 - 150 + 0 + 750 + 0 - 3750 + 0 + 1 8750 + 0 - 9 3750 + 0 + 46 8750 + 0 - 234 3750 + 0 + 1171 8750 + 0", "x2": "mul sub mod n sign INT- 8 relu mul sign x_0_1 INT+ 5 x_0_2", "tree": "(((n mod sign(-8)) sub relu((sign(x_0_1) mul 5))) mul x_0_2)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1026 + 8204 + 2 7670 + 6 5568 + 12 8042 + 22 1236 + 35 1294 + 52 4360 + 74 6578 + 102 4092 + 136 3046 + 176 9584 + 224 9850 + 280 9988 + 345 6142 + 419 4456 + 503 1074 + 597 2140 + 702 3798", "x2": "mod INT- 8 add abs mul abs n sqr mul mul INT- 2 INT- 8 mul n INT- 2 mul INT+ 1 0 n", "tree": "(-8 mod (abs((abs(n) mul (((-2 mul -8) mul (n mul -2)))**2)) add (10 mul n)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "- 3 + 7 - 7 + 25 + 7 - 107 + 7 + 73 + 90 + 7 + 130 + 7 + 178 + 7 + 234 + 7 + 298 + 7 + 370 + 7 + 450 + 7", "x2": "sub INT+ 7 mul idiv add INT+ 3 mod mul x_0_1 x_0_1 INT- 7 sub INT- 6 x_0_3 add INT+ 2 mul n n", "tree": "(7 sub (((3 add ((x_0_1 mul x_0_1) mod -7)) idiv (-6 sub x_0_3)) mul (2 add (n mul n))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 4 + 8 + 0 + 6 + 8 + 0 + 7 + 0 + 3 + 7 + 0 + 5 + 0 + 0 + 5 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 0 + 0", "x2": "relu mod INT- 9 x_0_5", "tree": "relu((-9 mod x_0_5))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 3 + 10 - 8 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign x_0_4", "tree": "sign(x_0_4)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 10 + 6 + 7 + 6 + 25 + 27 + 47 + 70 + 94 + 139 + 188 + 259 + 355 + 477 + 646 + 866 + 1159 + 1550 + 2065 + 2751 + 3659", "x2": "add add add add relu INT- 2 n n x_0_3 x_0_2", "tree": "((((relu(-2) add n) add n) add x_0_3) add x_0_2)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 2 + 33 + 166 + 481 + 1086 + 2113 + 3718 + 6081 + 9406 + 1 3921 + 1 9878 + 2 7553 + 3 7246 + 4 9281 + 6 4006 + 8 1793 + 10 3038 + 12 8161", "x2": "add sqr add mod INT+ 9 INT- 6 sqr n INT- 3", "tree": "((((9 mod -6) add (n)**2))**2 add -3)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 2 + 6 + 24 + 120 + 720 + 5040 + 4 320 + 36 2880 + 362 8800 + 3991 6800 + 4 7900 1600 + 62 2702 800 + 871 7829 1200 + 1 3076 7436 8000 + 20 9227 8988 8000 + 355 6874 2809 6000 + 6402 3737 572 8000 + 12 1645 1004 883 2000 + 243 2902 81 7664 0", "x2": "relu abs mul n x_0_1", "tree": "relu(abs((n mul x_0_1)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 1 - 9 + 1 - 8 + 0 + 0 - 48 + 8 - 72 + 0 + 0 + 0 + 104 - 744 + 0 + 0 + 0 + 1392 - 1 3056 + 0 + 0 + 0 + 2 3384", "x2": "mul idiv mul mul INT- 3 x_0_5 mod mod add n sqr abs x_0_4 INT- 7 n sub INT- 6 n INT+ 8", "tree": "((((-3 mul x_0_5) mul (((n add (abs(x_0_4))**2) mod -7) mod n)) idiv (-6 sub n)) mul 8)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 8 + 9 + 11 + 14 + 18 + 23 + 29 + 36 + 44 + 53 + 63 + 74 + 86 + 99 + 113 + 128 + 144 + 161 + 179", "x2": "relu add mod INT- 2 n x_0_1", "tree": "relu(((-2 mod n) add x_0_1))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 1 - 65 - 1596 - 4 2705 - 121 2864 - 3615 4767 - 11 2691 8188 - 366 4042 4619 - 1 2402 3334 5360 - 43 6258 6241 5821 - 1592 1163 4311 8180 - 6 193 2189 2110 2213 - 235 4323 4169 2519 3376 - 9514 3713 7508 4633 3675 - 39 6807 4573 6031 2890 444 - 1706 506 2362 9304 9345 9807 - 7 5539 7390 7228 1306 6791 6848 - 344 1270 9725 7256 8768 4281 3609 - 1 6115 2414 9109 8534 2098 1869 6340 - 77 5118 2321 3363 4894 1840 8750 601", "x2": "mul add sub add mul n sub n x_0_2 x_0_1 n x_0_1 add n INT+ 1 0", "tree": "(((((n mul (n sub x_0_2)) add x_0_1) sub n) add x_0_1) mul (n add 10))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 4 + 72 + 432 + 2592 + 1 5552 + 9 3312 + 55 9872 + 335 9232 + 2015 5392 + 1 2093 2352 + 7 2559 4112 + 43 5356 4672 + 261 2138 8032 + 1567 2832 8192 + 9403 6996 9152 + 5 6422 1981 4912 + 33 8533 1888 9472 + 203 1199 1333 6832 + 1218 7194 8002 992 + 7312 3168 8012 5952", "x2": "mul INT+ 6 mod x_0_1 sqr x_0_1", "tree": "(6 mul (x_0_1 mod (x_0_1)**2))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 10 - 5 - 7 + 4 - 9 - 9 - 9 + 667 - 9 - 9 - 9 + 8 698 - 9 - 9 - 9 + 4268 9233 - 9 - 9 - 9 + 334 6835 8663 - 9 - 9 - 9", "x2": "mod INT- 9 mul sqr sub x_0_2 mod x_0_4 abs add n INT+ 7 x_0_4", "tree": "(-9 mod (((x_0_2 sub (x_0_4 mod abs((n add 7)))))**2 mul x_0_4))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 6 - 1 - 2 + 5 + 6 + 8 - 55 - 70 - 87 - 106 - 127 - 150 - 175 - 202 - 231 - 262 - 295 - 330 - 367 - 406 - 447 - 490 - 535 - 582 - 631", "x2": "sub mod abs mod sign relu add sqr x_0_6 INT+ 8 n INT- 7 sqr n", "tree": "((abs((sign(relu(((x_0_6)**2 add 8))) mod n)) mod -7) sub (n)**2)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 5 - 10 + 1 - 9 - 3 + 105 + 24 + 18 + 90 + 11 + 60 + 1469 + 448 + 390 + 1568 + 323 + 1224 + 2 8063 + 9120 + 8358 + 3 4672 + 7613 + 2 9568 + 70 1775", "x2": "abs mul add x_0_6 INT+ 8 n", "tree": "abs(((x_0_6 add 8) mul n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 4 + 0 + 3 + 10 + 20 + 27 + 38 + 57 + 87 + 125 + 175 + 245 + 346 + 486 + 677 + 939 + 1303 + 1808 + 2505 + 3465 + 4790 + 6621", "x2": "add add idiv mod x_0_4 x_0_1 INT+ 1 n x_0_1", "tree": "((((x_0_4 mod x_0_1) idiv 1) add n) add x_0_1)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 5 + 0 - 10 - 10 - 10 - 8 + 1 + 1 + 1 + 1 + 1 + 1 + 4 + 4 + 4 + 4 + 4 + 4 + 25 + 25 + 25 + 25 + 25 + 25 + 676", "x2": "sqr add sign mod INT- 2 sqr abs INT- 5 relu x_0_6", "tree": "((sign((-2 mod (abs(-5))**2)) add relu(x_0_6)))**2", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 2 - 4 - 12 - 48 - 240 - 1440 - 1 80 - 8 640 - 72 5760 - 725 7600 - 7983 3600 - 9 5800 3200 - 124 5404 1600 - 1743 5658 2400 - 2 6153 4873 6000 - 41 8455 7977 6000 - 711 3748 5619 2000 - 1 2804 7474 1145 6000 - 24 3290 2008 1766 4000 - 486 5804 163 5328 0", "x2": "mul x_0_1 abs relu n", "tree": "(x_0_1 mul abs(relu(n)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 9 + 0 + 18 + 0 - 24 + 0 + 24 + 0 - 19 + 0 + 13 + 0 - 7 + 0 + 3 + 0 - 1 + 0 + 0 + 0", "x2": "idiv sub add mod INT+ 6 add add INT- 1 mod x_0_1 INT- 2 idiv n idiv n n mul x_0_2 INT- 7 x_0_2 n", "tree": "((((6 mod ((-1 add (x_0_1 mod -2)) add (n idiv (n idiv n)))) add (x_0_2 mul -7)) sub x_0_2) idiv n)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 1 + 2 + 6 + 8 + 15 + 18 + 28 + 32 + 45 + 50 + 66 + 72 + 91 + 98 + 120 + 128 + 153 + 162 + 190 + 200", "x2": "mul mod x_0_1 abs n relu n", "tree": "((x_0_1 mod abs(n)) mul relu(n))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 3 + 4 + 8 + 10 + 15 + 18 + 24 + 28 + 35 + 40 + 48 + 54 + 63 + 70 + 80 + 88 + 99 + 108 + 120", "x2": "add abs x_0_2 n", "tree": "(abs(x_0_2) add n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 4 - 7 + 16 + 28 + 64 + 112 + 256 + 448 + 1024 + 1792 + 4096 + 7168 + 1 6384 + 2 8672 + 6 5536 + 11 4688 + 26 2144 + 45 8752 + 104 8576 + 183 5008 + 419 4304", "x2": "mul abs INT- 4 abs x_0_2", "tree": "(abs(-4) mul abs(x_0_2))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 6 - 2 + 6 + 8 + 2 + 6 + 4 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2 + 0 + 2 + 2", "x2": "abs sub relu x_0_1 x_0_2", "tree": "abs((relu(x_0_1) sub x_0_2))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 3 + 7 + 3 + 0 + 0 + 0 + 3 + 3 + 3 + 0 + 0 + 0 + 3 + 3 + 3 + 0 + 0 + 0 + 3 + 3 + 3", "x2": "relu sub INT+ 3 x_0_3", "tree": "relu((3 sub x_0_3))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 5 + 0 - 4 - 7 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "add idiv INT+ 4 INT+ 1 0 sign x_0_4", "tree": "((4 idiv 10) add sign(x_0_4))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 2 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mod mul n n mul mul x_0_1 add x_0_2 mod abs add mod n n abs INT+ 8 n x_0_1", "tree": "((n mul n) mod ((x_0_1 mul (x_0_2 add (abs(((n mod n) add abs(8))) mod n))) mul x_0_1))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 3 - 8 + 24 - 15 - 42 + 175 - 120 - 369 + 1760 - 1320 - 4416 + 2 2893 - 1 8480 - 6 6225 + 36 6304 - 31 4160 - 119 2032 + 695 9795 - 628 3200 - 2503 2651 + 1 5311 5512", "x2": "mul add x_0_3 idiv add n sign idiv INT- 4 sign x_0_1 n n", "tree": "((x_0_3 add ((n add sign((-4 idiv sign(x_0_1)))) idiv n)) mul n)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 3 - 1 + 6 + 1 + 4 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1", "x2": "mod mod x_0_3 n sub n add mod x_0_2 INT- 8 x_0_3", "tree": "((x_0_3 mod n) mod (n sub ((x_0_2 mod -8) add x_0_3)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 7 + 7 + 1 + 4 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 1", "x2": "mod sqr x_0_3 n", "tree": "((x_0_3)**2 mod n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 7 - 8 + 5 + 2 - 3 + 6 + 7 + 33 + 13 + 10 + 47 + 61 + 1102 + 183 + 115 + 2225 + 3738 + 121 4422 + 3 3508 + 1 3245 + 495 646 + 1397 2666 + 1 4748 2079 4107 + 11 2278 6088", "x2": "add sqr relu x_0_5 abs n", "tree": "((relu(x_0_5))**2 add abs(n))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 0 - 1 - 1 - 2 - 2 - 3 - 3 - 4 - 4 - 5 - 5 - 6 - 6 - 7 - 7 - 8 - 8 - 9", "x2": "idiv sub n INT+ 2 INT- 2", "tree": "((n sub 2) idiv -2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 8 + 72 + 648 + 5832 + 5 2488 + 47 2392 + 425 1528 + 3826 3752 + 3 4437 3768 + 30 9936 3912 + 278 9427 5208 + 2510 4847 6872 + 2 2594 3629 1848 + 20 3349 2662 6632 + 183 143 3963 9688 + 1647 1290 5675 7192 + 1 4824 1615 1081 4728 + 13 3417 4535 9733 2552 + 120 757 823 7599 2968", "x2": "relu mul sub x_0_1 add sub INT- 9 idiv idiv sub x_0_1 n abs x_0_1 x_0_1 x_0_1 x_0_1", "tree": "relu(((x_0_1 sub ((-9 sub (((x_0_1 sub n) idiv abs(x_0_1)) idiv x_0_1)) add x_0_1)) mul x_0_1))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 10 + 13 + 17 + 22 + 28 + 35 + 43 + 43 + 44 + 46 + 49 + 53 + 58 + 64 + 71 + 79 + 79 + 80 + 82", "x2": "relu add mod n INT+ 9 x_0_1", "tree": "relu(((n mod 9) add x_0_1))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 10 - 3 + 20 + 0 + 12 + 35 + 0 + 45 + 50 + 0 + 60 + 65 + 0 + 75 + 80 + 0 + 90 + 95 + 0 + 105 + 110", "x2": "mul relu relu idiv mod INT- 6 mul x_0_3 INT+ 6 x_0_3 n", "tree": "(relu(relu(((-6 mod (x_0_3 mul 6)) idiv x_0_3))) mul n)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 2 + 6 + 4 + 36 - 5 - 112 + 11 + 115 - 8 - 345 + 21 + 210 - 8 - 987 + 34 + 313 - 4 - 4320 + 52 + 401", "x2": "idiv mul sub sub n sub abs x_0_1 sqr n abs n abs mul n INT+ 3 x_0_1", "tree": "((((n sub (abs(x_0_1) sub (n)**2)) sub abs(n)) mul abs((n mul 3))) idiv x_0_1)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr relu relu abs n", "tree": "(relu(relu(abs(n))))**2", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 10 + 4 - 110 - 50 + 2218 + 1222 - 6 2078 - 3 9074 + 223 4842 + 156 2998 - 9833 3006 - 7502 3858 + 51 1331 6362 + 42 133 6102 - 3067 9898 1662 - 2688 8551 466 + 20 8623 3075 3082 + 19 3597 5675 3622 - 1585 5371 3723 4158 - 1548 7805 4028 9682 + 13 3185 1195 2766 9354", "x2": "sub mul mul INT- 4 sub x_0_2 sign sqr INT- 6 n INT+ 2", "tree": "(((-4 mul (x_0_2 sub sign((-6)**2))) mul n) sub 2)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 32 - 104 - 392 - 1544 - 6152 - 2 4584 - 9 8312 - 39 3224 - 157 2872 - 629 1464 - 2516 5832 - 1 66 3304 - 4 265 3192 - 16 1061 2744 - 64 4245 952 - 257 6980 3784 - 1030 7921 5112 - 4123 1686 424 - 1 6492 6744 1672", "x2": "mul INT- 4 abs sub mod x_0_1 x_0_1 sub INT- 6 x_0_1", "tree": "(-4 mul abs(((x_0_1 mod x_0_1) sub (-6 sub x_0_1))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 23 - 17 - 25 - 35 - 47 - 61 - 77 - 95 - 115 - 137 - 161 - 187 - 215 - 245 - 277 - 311 - 347 - 385 - 425", "x2": "sub sub sub relu INT- 3 sqr n INT+ 6 sub add n relu mul n x_0_1 idiv n n", "tree": "(((relu(-3) sub (n)**2) sub 6) sub ((n add relu((n mul x_0_1))) sub (n idiv n)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 10 - 17 - 23 - 28 - 32 - 35 - 37 - 38 - 38 - 37 - 35 - 32 - 28 - 23 - 17 - 10 - 2 + 7 + 17 + 28", "x2": "sub add x_0_1 n INT+ 9", "tree": "((x_0_1 add n) sub 9)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 5 - 10 - 1 - 12 - 3 - 10 - 6 - 10 - 9 - 11 - 11 - 13 - 13 - 15 - 15 - 17 - 17 - 19 - 19 - 21 - 21", "x2": "idiv sub mod x_0_2 sqr n INT- 6 x_0_1", "tree": "(((x_0_2 mod (n)**2) sub -6) idiv x_0_1)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 5 + 7 + 3 + 1 + 2 + 3 + 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 1 + 1", "x2": "idiv add n mul INT+ 9 sub mod x_0_1 INT+ 3 mod add n sign n abs idiv n n n", "tree": "((n add (9 mul ((x_0_1 mod 3) sub ((n add sign(n)) mod abs((n idiv n)))))) idiv n)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 10 + 2 - 1 + 4 - 9 + 3 + 0 + 5 - 8 + 4 + 1 + 6 - 7 + 5 + 2 + 7 - 6 + 6 + 3 + 8 - 5 + 7", "x2": "add abs INT+ 1 x_0_4", "tree": "(abs(1) add x_0_4)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 7 - 20 - 83 - 424 - 2561 - 1 7954 - 14 3671 - 129 3092 - 1293 989 - 1 4224 966 - 17 689 1699 - 221 8959 2216 - 3106 5429 1177 - 4 6598 1436 7834 - 74 5570 2988 5551 - 1267 4695 805 4604 - 2 2814 4511 4498 3141 - 43 3474 5717 5467 9982 - 866 9491 4350 9359 9979 - 1 8205 9320 1369 6559 9936", "x2": "idiv mul n add add add mul sub x_0_1 n n x_0_1 INT+ 3 n n", "tree": "((n mul (((((x_0_1 sub n) mul n) add x_0_1) add 3) add n)) idiv n)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 8", "x2": "mod abs n INT- 9", "tree": "(abs(n) mod -9)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 4 + 0 + 2 + 0 + 3 + 0 + 4 + 0 + 5 + 0 + 6 + 0 + 7 + 0 + 8 + 0 + 9 + 0 + 10 + 0", "x2": "abs mod x_0_2 mul INT- 1 mod mul sign INT- 1 0 sub INT+ 1 n add n n", "tree": "abs((x_0_2 mod (-1 mul ((sign(-10) mul (1 sub n)) mod (n add n)))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 4 + 2 - 9 + 8 - 10 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign sub idiv INT- 8 n add relu x_0_4 x_0_6", "tree": "sign(((-8 idiv n) sub (relu(x_0_4) add x_0_6)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 3 - 35 - 21 + 245 + 140 - 1722 - 980 + 1 2054 + 6853 - 8 4385 - 4 7971 + 59 695 + 33 5790 - 413 4872 - 235 530 + 2894 4104 + 1645 3703 - 2 260 8735 - 1 1517 5921 + 14 1826 1145", "x2": "mul add idiv INT+ 6 add INT+ 3 x_0_1 add x_0_2 sign INT+ 7 INT- 7", "tree": "(((6 idiv (3 add x_0_1)) add (x_0_2 add sign(7))) mul -7)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 5 + 4 - 14 - 8 + 4 + 16 + 25 + 40 + 57 + 76 + 97 + 120 + 145 + 172 + 201 + 232 + 265 + 300 + 337 + 376 + 417", "x2": "sub add mod sign add x_0_2 idiv x_0_1 x_0_2 n sqr n sqr INT+ 5", "tree": "(((sign((x_0_2 add (x_0_1 idiv x_0_2))) mod n) add (n)**2) sub (5)**2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 8 - 2 + 2 + 2 - 8 + 8 + 8 - 2 + 2 + 2 - 8 + 8 + 8 - 2 + 2 + 2 - 8 + 8 + 8 - 2 + 2", "x2": "idiv sqr INT- 4 x_0_3", "tree": "((-4)**2 idiv x_0_3)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 8 - 5 + 12 + 20 + 6 + 14 + 48 + 54 + 80 + 99 + 36 + 117 + 168 + 0 + 240 + 153 + 162 + 133 + 120 + 189 + 264", "x2": "mul mod sub mul x_0_3 mod INT+ 3 sub sqr add mul n x_0_3 relu n INT- 3 x_0_1 n n", "tree": "((((x_0_3 mul (3 mod ((((n mul x_0_3) add relu(n)))**2 sub -3))) sub x_0_1) mod n) mul n)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 8 + 24 + 96 + 480 + 2880 + 2 160 + 16 1280 + 145 1520 + 1451 5200 + 1 5966 7200 + 19 1600 6400 + 249 808 3200 + 3487 1316 4800 + 5 2306 9747 2000 + 83 6911 5955 2000 + 1422 7497 1238 4000 + 2 5609 4948 2291 2000 + 48 6580 4016 3532 8000 + 973 1608 327 656 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 2 + 2 + 3 + 4 + 4 + 5 + 6 + 6 + 7 + 8 + 8 + 9 + 10 + 10 + 11 + 12 + 12 + 13 + 14", "x2": "idiv sub idiv abs n add INT- 4 INT+ 7 n add idiv x_0_1 x_0_1 INT- 2", "tree": "(((abs(n) idiv (-4 add 7)) sub n) idiv ((x_0_1 idiv x_0_1) add -2))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 10 + 3 + 2 - 9 + 5 + 414 - 144 + 240 + 320 + 88 + 394 - 2 2487 - 1 1375 - 1 8375 - 2 3275 - 7368 - 3 3423 - 250 2226 - 109 9164 - 209 8474 - 264 2387 - 70 5440 - 347 9063 - 2 2109 4481", "x2": "idiv mul sqr add relu n add mod x_0_1 n abs INT- 1 0 sub n abs x_0_6 n", "tree": "((((relu(n) add ((x_0_1 mod n) add abs(-10))))**2 mul (n sub abs(x_0_6))) idiv n)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 3 + 9 - 3 - 4 - 5 - 6 - 7 - 8 - 9 + 10 - 11 + 12 - 13 - 14 - 15 - 16 - 17 - 18 - 19 + 20 - 21", "x2": "mul abs n sign mod add sign sub x_0_2 add n x_0_1 x_0_1 INT- 1 0", "tree": "(abs(n) mul sign(((sign((x_0_2 sub (n add x_0_1))) add x_0_1) mod -10)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 2 + 3 + 6 + 0 + 1 + 4 - 2 - 1 + 2 + 0 - 1 + 0 - 2 - 1 - 2 + 0 - 1 + 0 - 2 - 1 - 2", "x2": "add INT- 2 abs x_0_3", "tree": "(-2 add abs(x_0_3))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 3 + 10 + 1 - 12 + 9 + 10 - 11 + 18 + 9 - 20 + 17 + 18 - 19 + 26 + 17 - 28 + 25 + 26 - 27 + 34 + 25", "x2": "add INT+ 3 mul sub x_0_2 INT- 5 sign mod x_0_2 idiv n add mul relu x_0_1 mul x_0_2 x_0_2 n", "tree": "(3 add ((x_0_2 sub -5) mul sign((x_0_2 mod (n idiv ((relu(x_0_1) mul (x_0_2 mul x_0_2)) add n))))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 7 + 6 + 2 + 9 - 5 + 15 - 3 + 1641 - 8 + 2625 - 11 + 6855 - 19 + 1 3041 - 30 + 2 6049 - 49 + 4 8807 - 79 + 9 729 - 128 + 16 5129 - 207", "x2": "add add x_0_2 relu sub idiv mul x_0_3 sqr sqr INT- 6 INT- 4 INT+ 3 x_0_4", "tree": "((x_0_2 add relu((((x_0_3 mul ((-6)**2)**2) idiv -4) sub 3))) add x_0_4)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400", "x2": "abs sqr sub sign idiv INT- 1 n n", "tree": "abs(((sign((-1 idiv n)) sub n))**2)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 9 + 1 - 2 + 12 - 7 + 1 - 3 + 16 - 6 + 1 - 4 + 20 - 6 + 1 - 4 + 24 - 7 + 1 - 4 + 28", "x2": "idiv add n INT+ 7 x_0_2", "tree": "((n add 7) idiv x_0_2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 5 - 10 + 2 + 1 + 25 + 100 + 4 + 1 + 300 + 900 + 16 + 1 + 300 + 2700 + 48 + 1 + 300 + 2 4300 + 432 + 1 + 300 + 7 2900", "x2": "mod sqr x_0_4 abs mul sub INT+ 9 INT- 4 x_0_4", "tree": "((x_0_4)**2 mod abs(((9 sub -4) mul x_0_4)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 2 - 8 - 32 - 128 - 512 - 2048 - 8192 - 3 2768 - 13 1072 - 52 4288 - 209 7152 - 838 8608 - 3355 4432 - 1 3421 7728 - 5 3687 912 - 21 4748 3648 - 85 8993 4592 - 343 5973 8368 - 1374 3895 3472 - 5497 5581 3888", "x2": "mul x_0_1 abs INT+ 4", "tree": "(x_0_1 mul abs(4))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 4 - 1 + 3 + 8 + 14 + 21 + 29 + 38 + 48 + 59 + 71 + 84 + 98 + 113 + 129 + 146 + 164 + 183 + 203 + 224", "x2": "add add n abs sign mod idiv n idiv INT+ 1 0 sqr abs n sub INT- 6 x_0_1 x_0_1", "tree": "((n add abs(sign(((n idiv (10 idiv (abs(n))**2)) mod (-6 sub x_0_1))))) add x_0_1)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1", "x2": "mod n INT+ 3", "tree": "(n mod 3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 3 - 7 - 2 - 1 - 3 - 5 - 2 - 1 - 3 - 5 - 2 - 1 - 3 - 5 - 2 - 1 - 3 - 5 - 2 - 1 - 3", "x2": "idiv INT+ 5 x_0_2", "tree": "(5 idiv x_0_2)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 10 - 9 + 4 + 10 + 9 + 4 + 10 + 9 + 4 + 10 + 9 + 4 + 10 + 9 + 4 + 10 + 9 + 4 + 10 + 9 + 4 + 10", "x2": "abs abs x_0_3", "tree": "abs(abs(x_0_3))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 5 + 29 + 19 + 17 + 15 + 14 + 13 + 13 + 12 + 12 + 11 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 10 + 9", "x2": "idiv sub INT- 4 mul add INT- 5 sub add idiv n x_0_1 relu INT+ 1 n idiv INT- 9 add INT+ 2 INT- 3 n", "tree": "((-4 sub ((-5 add (((n idiv x_0_1) add relu(1)) sub n)) mul (-9 idiv (2 add -3)))) idiv n)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 8 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 - 1", "x2": "sign idiv mul idiv sqr n x_0_1 add mul INT+ 1 0 mod n abs INT- 1 0 INT- 9 relu INT+ 7", "tree": "sign(((((n)**2 idiv x_0_1) mul ((10 mul (n mod abs(-10))) add -9)) idiv relu(7)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 5 + 7 + 4 + 0 + 5 + 1 + 6 + 2 + 7 + 3 + 8 + 4 + 9 + 5 + 2 + 4 + 3 + 5 + 6 + 6", "x2": "abs mod sub x_0_1 n sub relu mod x_0_1 relu sub x_0_1 INT+ 2 INT+ 1 0", "tree": "abs(((x_0_1 sub n) mod (relu((x_0_1 mod relu((x_0_1 sub 2)))) sub 10)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 3 - 6 + 5 - 1 + 0 - 2 + 4 - 1 + 0 - 2 + 4 - 1 + 0 - 2 + 4 - 1 + 0 - 2 + 4 - 1 + 0 - 2", "x2": "idiv add INT+ 8 sign x_0_4 sub mul mod add abs sign n INT- 2 abs INT- 7 x_0_2 x_0_1", "tree": "((8 add sign(x_0_4)) idiv ((((abs(sign(n)) add -2) mod abs(-7)) mul x_0_2) sub x_0_1))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 7 + 2 + 16 + 12 + 27 + 24 + 40 + 38 + 55 + 54 + 72 + 72 + 91 + 92 + 112 + 114 + 135 + 138 + 160 + 164 + 187", "x2": "add add sub add n INT+ 6 n n x_0_2", "tree": "((((n add 6) sub n) add n) add x_0_2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 3 - 5 - 8 - 12 - 17 - 23 - 30 - 38 - 47 - 57 - 68 - 80 - 93 - 107 - 122 - 138 - 155 - 173 - 192 - 212", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 9 + 0 + 1 + 4 + 6 + 6 + 4 + 3 + 4 + 7 + 9 + 9 + 7 + 6 + 7 + 10 + 12 + 12 + 10 + 9 + 10", "x2": "sub sub n abs mod x_0_3 n sub sign INT+ 6 INT+ 1", "tree": "((n sub abs((x_0_3 mod n))) sub (sign(6) sub 1))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 8 + 0 + 8 - 2 + 6 + 2 + 0 + 8 + 2 + 6 + 2 + 0 + 8 + 2 + 6 + 2 + 0 + 8 + 2 + 6 + 2 + 0 + 8", "x2": "relu abs sub x_0_5 relu mul x_0_2 INT- 5", "tree": "relu(abs((x_0_5 sub relu((x_0_2 mul -5)))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 2 + 7 + 2 + 5 - 8 - 6 + 0 + 0 - 1 - 4 + 0 + 0 - 13 - 5 + 0 + 0 - 17 - 9 + 0 + 0 - 21 - 13 + 0 + 0 - 25", "x2": "mul idiv idiv x_0_4 n sub n sub INT- 8 x_0_5 add mod mod add x_0_1 x_0_6 n INT- 1 0 n", "tree": "(((x_0_4 idiv n) idiv (n sub (-8 sub x_0_5))) mul ((((x_0_1 add x_0_6) mod n) mod -10) add n))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 7 + 7 + 7 + 7 + 7 + 7 + 14 + 14 + 14 + 14 + 14 + 14 + 21 + 21", "x2": "mul idiv n INT+ 6 INT+ 7", "tree": "((n idiv 6) mul 7)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 3 + 6 - 1 - 1 + 3 + 0 + 7 + 7 + 3 + 6 - 1 - 1 + 3 + 0 + 7 + 7 + 3 + 6 - 1 - 1 + 3 + 0", "x2": "sub abs INT- 6 x_0_4", "tree": "(abs(-6) sub x_0_4)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 10 - 4 + 4 - 14 - 9 - 2 - 21 - 17 - 11 - 31 - 28 - 23 - 44 - 42 - 38 - 60 - 59 - 56 - 79 - 79 - 77", "x2": "sub add sqr sign idiv n n x_0_3 abs n", "tree": "(((sign((n idiv n)))**2 add x_0_3) sub abs(n))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 2 - 8 - 18 - 32 - 50 - 72 - 98 - 128 - 162 - 200 - 242 - 288 - 338 - 392 - 450 - 512 - 578 - 648 - 722", "x2": "mul relu n mul INT- 2 n", "tree": "(relu(n) mul (-2 mul n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 2 + 4 + 8 + 1 - 12 + 12 + 24 + 1 - 66 + 20 + 68 - 1 + 206 + 30 - 138 + 14 + 164 + 9 - 170 + 36", "x2": "sub sub relu n mul idiv idiv x_0_2 x_0_1 INT+ 4 n mul idiv x_0_2 INT- 3 INT- 2", "tree": "((relu(n) sub (((x_0_2 idiv x_0_1) idiv 4) mul n)) sub ((x_0_2 idiv -3) mul -2))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 5 + 8 + 20 + 35 + 64 + 121 + 234 + 459 + 908 + 1805 + 3598 + 7183 + 1 4352 + 2 8689 + 5 7362 + 11 4707 + 22 9396 + 45 8773 + 91 7526 + 183 5031 + 367 40", "x2": "sub sign x_0_2 sub add n mod sub n n INT- 4 mul INT+ 2 sub x_0_1 mod INT+ 1 x_0_2", "tree": "(sign(x_0_2) sub ((n add ((n sub n) mod -4)) sub (2 mul (x_0_1 sub (1 mod x_0_2)))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 49 + 196 + 441 + 784 + 1225 + 1764 + 2401 + 3136 + 3969 + 4900 + 5929 + 7056 + 8281 + 9604 + 1 1025 + 1 2544 + 1 4161 + 1 5876 + 1 7689", "x2": "sqr mul add INT- 7 mod mod n INT+ 1 INT+ 7 n", "tree": "(((-7 add ((n mod 1) mod 7)) mul n))**2", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 2 + 5 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0", "x2": "sub INT+ 1 relu mod x_0_2 mul sub mul x_0_2 x_0_2 sub INT- 4 INT+ 9 idiv n x_0_2", "tree": "(1 sub relu((x_0_2 mod (((x_0_2 mul x_0_2) sub (-4 sub 9)) mul (n idiv x_0_2)))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 6 + 8 - 9 - 4 + 10 - 7 - 2 + 12 - 5 + 0 + 14 - 3 + 2 + 16 - 1 + 4 + 18 + 1 + 6 + 20 + 3 + 8", "x2": "add mod INT+ 2 n x_0_3", "tree": "((2 mod n) add x_0_3)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 8 + 15 + 24 + 35 + 48 + 63 + 80 + 99 + 120 + 143 + 168 + 195 + 224 + 255 + 288 + 323 + 360 + 399", "x2": "add n mul n relu add n INT+ 1", "tree": "(n add (n mul relu((n add 1))))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 - 4 + 2 - 4 + 0 + 2 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 2 + 0 + 0 + 2 + 2", "x2": "mod x_0_4 add add x_0_4 INT+ 8 sub x_0_3 idiv idiv x_0_1 n sub n sqr relu INT+ 1 0", "tree": "(x_0_4 mod ((x_0_4 add 8) add (x_0_3 sub ((x_0_1 idiv n) idiv (n sub (relu(10))**2)))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 3 + 9 + 6 + 5 + 2 + 9 + 7 + 7 + 5 + 13 + 12 + 7 + 6 + 15 + 15 + 11 + 11 + 15 + 16 + 13 + 14 + 19 + 21", "x2": "add mod mod n INT+ 6 add x_0_3 sub n INT- 4 x_0_4", "tree": "(((n mod 6) mod (x_0_3 add (n sub -4))) add x_0_4)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 78 + 77 + 79 + 79 + 77 + 78 + 77 + 79 + 79 + 77 + 78 + 77 + 79 + 79 + 77 + 78 + 77 + 79 + 79", "x2": "sub sqr INT+ 9 mod add INT+ 4 sub sub sub sqr n n INT+ 1 0 n INT+ 5", "tree": "((9)**2 sub ((4 add ((((n)**2 sub n) sub 10) sub n)) mod 5))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 1 + 1 - 6 + 3 - 7 + 2 - 8 + 1 - 9 + 0 - 10 - 1 - 11 - 2 - 12 - 3 - 13 - 4 - 14 - 5 - 15 - 6", "x2": "sub add sub relu sub x_0_1 add n sqr INT+ 7 n sign sqr x_0_3 x_0_1", "tree": "(((relu((x_0_1 sub (n add (7)**2))) sub n) add sign((x_0_3)**2)) sub x_0_1)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 7 + 4 - 6 + 2 + 16 + 4 + 15 + 22 + 3 + 21 + 18 + 7 + 31 + 11 + 4 + 40 + 3 + 11 + 55 + 17 + 29 + 66 + 15", "x2": "abs sub add x_0_3 n x_0_4", "tree": "abs(((x_0_3 add n) sub x_0_4))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 5 - 6 - 7 - 1 + 8 + 1 - 3 - 5 - 7 + 3 - 2 + 7 + 8 - 2 + 2 + 6 + 1 + 10 + 6 - 2 + 10 + 11 + 2 + 5 + 9", "x2": "sub mod sub INT+ 1 x_0_3 n abs x_0_6", "tree": "(((1 sub x_0_3) mod n) sub abs(x_0_6))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 9 - 2 - 6 - 13 - 6 - 10 - 17 - 10 - 14 - 21 - 14 - 18 - 25 - 18 - 22 - 29 - 22 - 26 - 33 - 26 - 30 - 37", "x2": "idiv add x_0_3 INT- 4 sign INT+ 2", "tree": "((x_0_3 add -4) idiv sign(2))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 0 + 9 - 3 + 7 + 8 + 0 + 9 + 3 + 7 + 8 + 0 + 9 + 3 + 7 + 8 + 0 + 9 + 3 + 7 + 8 + 0 + 9 + 3", "x2": "relu abs x_0_5", "tree": "relu(abs(x_0_5))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 4 - 7 + 1 - 9 + 1 - 11 + 1 - 13 + 1 - 15 + 1 - 17 + 1 - 19 + 1 - 21 + 1 - 23 + 1 - 25", "x2": "add n sub INT- 1 sub abs sub add n n INT- 5 mod sign x_0_1 add INT+ 8 n", "tree": "(n add (-1 sub (abs(((n add n) sub -5)) sub (sign(x_0_1) mod (8 add n)))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 7 + 14 - 28 + 56 - 112 + 224 - 448 + 896 - 1792 + 3584 - 7168 + 1 4336 - 2 8672 + 5 7344 - 11 4688 + 22 9376 - 45 8752 + 91 7504 - 183 5008 + 367 16", "x2": "add sub idiv mod x_0_2 INT+ 2 n add mul add INT- 4 INT+ 6 x_0_1 n n", "tree": "((((x_0_2 mod 2) idiv n) sub (((-4 add 6) mul x_0_1) add n)) add n)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 6 + 15 + 58 + 289 + 1734 + 1 2139 + 9 7114 + 87 4029 + 874 294 + 9614 3239 + 11 5371 8874 + 149 9834 5369 + 2099 7683 5174 + 3 1496 5252 7619 + 50 3944 4044 1914 + 856 7054 8751 2549 + 1 5420 6987 7522 5894 + 29 2993 2767 2929 1999 + 585 9865 5345 8583 9994", "x2": "add mod INT- 5 mod sign add INT- 2 idiv n INT- 1 mul abs x_0_1 n n", "tree": "((-5 mod (sign((-2 add (n idiv -1))) mod (abs(x_0_1) mul n))) add n)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 1 + 9 + 10 + 18 + 27 + 39 + 52 + 67 + 84 + 103 + 124 + 147 + 172 + 199 + 228 + 259 + 292 + 327 + 364", "x2": "sub sub sqr n mod add n idiv x_0_1 n x_0_1 mod abs mod x_0_1 x_0_1 sqr n", "tree": "(((n)**2 sub ((n add (x_0_1 idiv n)) mod x_0_1)) sub (abs((x_0_1 mod x_0_1)) mod (n)**2))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722", "x2": "mul n mul INT+ 2 add idiv sign idiv INT- 4 n INT- 3 n", "tree": "(n mul (2 mul ((sign((-4 idiv n)) idiv -3) add n)))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 6 + 0 - 8 - 3 + 5 + 1 + 0 + 0 + 1 + 0 + 2 + 1 + 0 + 0 + 1 + 0 + 2 + 1 + 0 + 0 + 1 + 0 + 2 + 1", "x2": "abs mod x_0_6 abs INT- 3", "tree": "abs((x_0_6 mod abs(-3)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 31 + 71 + 127 + 199 + 287 + 391 + 511 + 647 + 799 + 967 + 1151 + 1351 + 1567 + 1799 + 2047 + 2311 + 2591 + 2887", "x2": "sub mul mul relu abs mul abs n n INT- 1 INT- 8 abs INT+ 1", "tree": "(((relu(abs((abs(n) mul n))) mul -1) mul -8) sub abs(1))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 8 + 7 + 7 - 10 + 23 + 34 - 27 + 14 + 11 - 19 + 58 + 70 - 45 + 15 + 14 - 31 + 94 + 160 - 54 + 20 + 11 - 46", "x2": "sub idiv sqr n idiv x_0_3 INT+ 5 INT+ 2", "tree": "(((n)**2 idiv (x_0_3 idiv 5)) sub 2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 8 - 7 + 3 - 7 - 6 + 4 - 6 - 5 + 5 - 5 - 4 + 6 - 4 - 3 + 7 - 3 - 2 + 8 - 2 - 1 + 9", "x2": "add x_0_3 idiv n n", "tree": "(x_0_3 add (n idiv n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 2 - 2 - 8 - 16 - 26 - 38 - 52 - 68 - 86 - 106 - 128 - 152 - 178 - 206 - 236 - 268 - 302 - 338", "x2": "sub INT+ 4 sub sqr n n", "tree": "(4 sub ((n)**2 sub n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 7 - 2 - 10 + 10 - 8 - 3 - 11 + 11 - 9 - 4 - 12 + 12 - 10 - 5 - 13 + 13 - 11 - 6 - 14 + 14 - 12 - 7 - 15", "x2": "sub x_0_4 sign idiv x_0_4 INT- 6", "tree": "(x_0_4 sub sign((x_0_4 idiv -6)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 4 - 5 - 11 - 39 - 189 - 1127 - 7881 - 6 3039 - 56 7341 - 567 3399 - 6240 7377 - 7 4888 8511 - 97 3555 629 - 1362 9770 8791 - 2 444 6563 1849 - 32 7114 5010 9567 - 556 946 5186 2621 - 1 9 7037 3352 7159 - 19 184 3709 3701 6001 - 380 3687 4187 4031 9999", "x2": "sub sqr idiv INT+ 1 0 INT+ 9 abs mul n relu sub INT- 1 x_0_1", "tree": "(((10 idiv 9))**2 sub abs((n mul relu((-1 sub x_0_1)))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 6 + 7 + 7 + 10 - 2 - 1 - 3 + 10 + 10 + 13 + 1 + 2 + 0 + 13 + 13 + 16 + 4 + 5 + 3 + 16 + 16 + 19", "x2": "sub n x_0_3", "tree": "(n sub x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 3 - 7 - 4 - 8 - 58 - 211 - 173 - 465 - 4351 - 1 9835 - 1 9896 - 6 4171 - 70 9214 - 376 8651 - 435 7225 - 1604 2751 - 2 70 7563 - 11 9843 1019 - 15 4681 4876 - 63 2084 3895 - 873 778 9906 - 5728 5002 7083 - 8089 8418 149", "x2": "add mul mod INT- 6 sqr n x_0_4 INT- 1", "tree": "(((-6 mod (n)**2) mul x_0_4) add -1)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 9 + 0 + 0 - 13 - 4 - 4 - 17 - 8 - 8 - 21 - 12 - 12 - 25 - 16 - 16 - 29 - 20 - 20 - 33 - 24 - 24", "x2": "sub x_0_3 idiv abs mul n INT+ 4 n", "tree": "(x_0_3 sub (abs((n mul 4)) idiv n))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 9 - 8 - 56 - 58 - 152 - 253 - 8 - 656 - 408 - 492 - 8 - 346 - 2360 - 3158 - 2056 - 1164 - 4544 - 5062 - 6408 - 8828", "x2": "sub INT- 8 mul mul n relu mod mod n x_0_2 n n", "tree": "(-8 sub ((n mul relu(((n mod x_0_2) mod n))) mul n))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "add sqr n sqr sqr relu idiv INT- 9 n", "tree": "((n)**2 add ((relu((-9 idiv n)))**2)**2)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 7 - 10 + 6 - 1 - 9 + 0 + 1 8350 800 + 0 + 6 0 0 + 0 + 0 + 0 + 13 8167 5879 6288 0 + 0 + 100 6632 9600 0 0 + 0 + 0 + 0 + 884 2725 6296 2432 0 0 0 + 0 + 1 1413 1948 3680 3584 0 0 0 + 0 + 0 + 0", "x2": "mul relu mul n mul n x_0_6 sqr mul n mul INT+ 1 0 n", "tree": "(relu((n mul (n mul x_0_6))) mul ((n mul (10 mul n)))**2)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 4 - 5 + 10 - 3 + 0 + 3 + 2 + 1 + 0 + 3 + 2 + 1 + 0 + 3 + 2 + 1 + 0 + 3 + 2 + 1 + 0 + 3 + 2", "x2": "mod x_0_4 relu INT+ 4", "tree": "(x_0_4 mod relu(4))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 5 + 0 + 2 - 1 + 4 + 1 + 0 + 2 + 4 + 0 + 1 + 5 + 3 + 0 + 5 + 7 + 2 + 4 + 11 + 8 + 5 + 14 + 18", "x2": "add x_0_4 add x_0_3 sign INT- 6", "tree": "(x_0_4 add (x_0_3 add sign(-6)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 6 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1 + 2 + 0 + 1", "x2": "relu mod add INT- 8 abs x_0_1 INT+ 3", "tree": "relu(((-8 add abs(x_0_1)) mod 3))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 2 - 3 - 4 + 5 + 5 + 4 + 3 + 5 + 5 + 4 + 3 + 5 + 5 + 4 + 3 + 5 + 5 + 4 + 3 + 5 + 5 + 4", "x2": "mod x_0_4 INT+ 7", "tree": "(x_0_4 mod 7)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 1 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11", "x2": "add idiv mod n x_0_1 INT+ 1 INT+ 2", "tree": "(((n mod x_0_1) idiv 1) add 2)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 4 + 9 - 16 + 25 - 36 + 49 - 64 + 81 - 100 + 121 - 144 + 169 - 196 + 225 - 256 + 289 - 324 + 361 - 400", "x2": "mul sign mul INT- 2 x_0_1 sqr n", "tree": "(sign((-2 mul x_0_1)) mul (n)**2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 - 1 + 0 + 5 - 8 - 3 + 1 + 1 + 0 + 5 + 8 + 3 + 1 + 1 + 0 + 5 + 8 + 3 + 1 + 1 + 0 + 5 + 8 + 3 + 1", "x2": "abs x_0_6", "tree": "abs(x_0_6)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4 - 5 - 5 - 5", "x2": "idiv relu n INT- 4", "tree": "(relu(n) idiv -4)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 16 + 324 + 2304 + 1 0 + 3 2400 + 8 6436 + 20 704 + 41 9904 + 81 0 + 146 4100 + 250 9056 + 411 2784 + 649 2304 + 992 2500 + 1474 5600 + 2138 1376 + 3033 8064 + 4222 4004", "x2": "sqr mul sub sqr n n n", "tree": "((((n)**2 sub n) mul n))**2", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 - 8 - 40 - 240 - 1680 - 1 3440 - 12 960 - 120 9600 - 1330 5600 - 1 5966 7200 - 20 7567 3600 - 290 5943 400 - 4358 9145 6000 - 6 9742 6329 6000 - 118 5624 7603 2000 - 2134 1245 6857 6000 - 4 548 3668 294 4000 - 81 967 3360 5888 0 - 1703 314 572 3648 0 - 3 7466 6909 2592 256 0 - 86 1733 8912 9616 5888 0", "x2": "mul x_0_1 mul mul INT- 1 sub INT- 2 n abs sign x_0_2", "tree": "(x_0_1 mul ((-1 mul (-2 sub n)) mul abs(sign(x_0_2))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 3 - 4 - 7 - 12 - 19 - 28 - 39 - 52 - 67 - 84 - 103 - 124 - 147 - 172 - 199 - 228 - 259 - 292 - 327", "x2": "sub n sub n add n sub n add sqr n INT+ 4", "tree": "(n sub (n sub (n add (n sub ((n)**2 add 4)))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 1 - 6 + 7 - 3 - 8 - 13 + 0 - 10 - 15 - 20 - 7 - 17 - 22 - 27 - 14 - 24 - 29 - 34 - 21 - 31 - 36 - 41", "x2": "add x_0_4 add INT- 4 INT- 3", "tree": "(x_0_4 add (-4 add -3))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 7 - 9 + 5 - 4 + 1 + 1 + 7 + 5 + 4 + 1 + 1 + 7 + 5 + 4 + 1 + 1 + 7 + 5 + 4 + 1 + 1 + 7 + 5", "x2": "mod x_0_5 sub sign INT+ 8 INT- 7", "tree": "(x_0_5 mod (sign(8) sub -7))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 2 - 2 - 5 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr add relu n idiv mod relu sign mod add x_0_4 x_0_4 n n n", "tree": "((relu(n) add ((relu(sign(((x_0_4 add x_0_4) mod n))) mod n) idiv n)))**2", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "- 8 - 1 + 156 + 320 + 160 + 846 + 588 + 4216 + 1656 + 3 7170 + 1 1572 + 43 7412 + 13 9464 + 611 62 + 207 5100 + 9774 528 + 3525 2152 + 17 5930 362 + 6 6975 6612 + 351 8596 7260 + 140 6484 2568", "x2": "mul abs abs sub x_0_2 sub mul sqr relu n INT+ 5 INT+ 1 n", "tree": "(abs(abs((x_0_2 sub (((relu(n))**2 mul 5) sub 1)))) mul n)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 7 + 65 - 582 + 5242 - 4 7173 + 42 4563 - 382 1060 + 3438 9548 - 3 950 5923 + 27 8555 3317 - 250 6997 9842 + 2256 2981 8590 - 2 306 6836 7297 + 18 2760 1530 5687 - 164 4841 3775 1168 + 1480 3572 3976 528 - 1 3323 2151 5784 4735 + 11 9908 9364 2060 2633 - 107 9180 4277 8542 3678 + 971 2623 8500 6881 3122", "x2": "add abs n mul INT- 9 x_0_1", "tree": "(abs(n) add (-9 mul x_0_1))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 2 - 9 - 15 - 23 - 37 - 59 - 95 - 153 - 247 - 399 - 645 - 1043 - 1687 - 2729 - 4415 - 7143 - 1 1557 - 1 8699 - 3 255 - 4 8953 - 7 9207", "x2": "add add x_0_2 sub mod sub x_0_2 add add mul x_0_1 x_0_1 x_0_1 x_0_1 x_0_1 x_0_2 add x_0_1 INT+ 1", "tree": "((x_0_2 add (((x_0_2 sub (((x_0_1 mul x_0_1) add x_0_1) add x_0_1)) mod x_0_1) sub x_0_2)) add (x_0_1 add 1))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 8 + 15 + 22 + 29 + 36 + 7 + 14 + 21 + 28 + 35 + 42 + 13 + 20 + 27 + 34 + 41 + 48 + 19", "x2": "add mul mod sub n abs sign INT- 6 INT+ 6 INT+ 6 n", "tree": "((((n sub abs(sign(-6))) mod 6) mul 6) add n)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 7 + 1 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 0", "x2": "mod n add INT+ 7 relu mod x_0_2 INT- 2", "tree": "(n mod (7 add relu((x_0_2 mod -2))))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 1 - 6 + 9 - 7 + 7 + 8 + 15 + 1 + 22 + 8 + 36 + 8 + 57 + 15 + 92 + 22 + 148 + 36 + 239 + 57 + 386 + 92 + 624", "x2": "abs add add x_0_4 add sign INT- 9 idiv idiv sign x_0_4 x_0_1 x_0_1 relu x_0_2", "tree": "abs(((x_0_4 add (sign(-9) add ((sign(x_0_4) idiv x_0_1) idiv x_0_1))) add relu(x_0_2)))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 10 + 4 + 20 + 0 + 20 + 0 + 40 + 0 + 200 + 0 + 200 + 0 + 1000 + 0 + 1 1000 + 0 + 1 1000 + 0 + 19 8000 + 0 + 59 4000", "x2": "mul x_0_2 mod add sub n x_0_2 sqr sub INT- 4 sub INT+ 2 n n", "tree": "(x_0_2 mul (((n sub x_0_2) add ((-4 sub (2 sub n)))**2) mod n))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 4 + 6 - 5 + 6 - 6 + 6 - 7 + 6 - 8 + 6 - 9 + 6 - 10 + 6 - 11 + 6 - 12 + 6 - 13", "x2": "idiv mul INT- 3 relu sub n INT- 6 x_0_1", "tree": "((-3 mul relu((n sub -6))) idiv x_0_1)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 2 + 148 + 443 + 1172 + 2468 + 4772 + 8397 + 1 3988 + 2 2086 + 3 3588 + 4 9311 + 7 452 + 9 8152 + 13 3956 + 17 9377 + 23 6356 + 30 6826 + 39 3172 + 49 7795 + 62 3572", "x2": "add x_0_2 sqr mod INT- 4 sqr relu mul sub sign INT- 2 n INT- 1", "tree": "(x_0_2 add ((-4 mod (relu(((sign(-2) sub n) mul -1)))**2))**2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 10 + 8 - 6 + 13 - 1 + 31 + 6 + 33 + 14 + 40 + 24 + 50 + 36 + 62 + 50 + 76 + 66 + 92 + 84 + 110 + 104", "x2": "idiv mul sub x_0_2 sub idiv add x_0_2 x_0_1 x_0_1 n n n", "tree": "(((x_0_2 sub (((x_0_2 add x_0_1) idiv x_0_1) sub n)) mul n) idiv n)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 3 + 0 - 2 - 3 - 1 - 3 - 1 - 2 + 0 - 2 - 3 - 1 - 3 - 1 - 2 + 0 - 2 - 3 - 1", "x2": "idiv mod abs sub relu x_0_1 mul INT- 4 mod mod INT- 3 n n INT- 7 INT+ 2", "tree": "((abs((relu(x_0_1) sub (-4 mul ((-3 mod n) mod n)))) mod -7) idiv 2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 1 + 10 + 5 - 1 + 0 + 5 - 1 + 0 + 5 - 1 + 0 + 5 - 1 + 0 + 5 - 1 + 0 + 5 - 1 + 0 + 5 - 1", "x2": "idiv x_0_3 add sign n abs mul INT+ 8 idiv relu mul INT+ 8 x_0_2 n", "tree": "(x_0_3 idiv (sign(n) add abs((8 mul (relu((8 mul x_0_2)) idiv n)))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 4 + 4 + 2 - 98 + 4998 - 24 4804 + 1199 5396 - 5 8752 9502 + 287 8894 5598 - 1 4100 7055 9898 + 69 934 5743 5002 - 3384 1687 5598 796 + 16 5824 2690 4305 9004 - 812 2003 6036 9557 6098 + 3 9797 8176 5810 8322 8802 - 194 9280 5263 2899 6832 102 + 9551 4745 7901 2084 4768 4998 - 46 7827 2450 6506 7408 5835 3604 + 2292 3535 81 8830 3020 5932 6596 - 11 2278 5193 1468 5525 5869 7043 8302 + 550 1647 4464 1959 753 7615 5147 6798 - 2 6946 8399 5530 1982 4249 5151 1535 9898", "x2": "mul sub relu x_0_3 x_0_1 sqr INT- 7", "tree": "((relu(x_0_3) sub x_0_1) mul (-7)**2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 2 - 7 + 4100 + 9998 + 2 729 + 4 2516 + 7 5534 + 12 5705 + 20 2516 + 30 9790 + 45 7481 + 65 9492 + 92 4446 + 126 7481 + 170 8068 + 226 782 + 294 7097 + 379 3204 + 482 782 + 605 8793 + 754 1300", "x2": "abs add x_0_3 sqr sqr add n n", "tree": "abs((x_0_3 add (((n add n))**2)**2))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 8 - 96 - 1152 - 1 3824 - 16 5888 - 199 656 - 2388 7872 - 2 8665 4464 - 34 3985 3568 - 412 7824 2816 - 4953 3891 3792 - 5 9440 6696 5504 - 71 3288 358 6048 - 855 9456 4303 2576 - 1 271 3477 1639 912 - 12 3256 1725 9669 944 - 147 9074 711 6029 1328 - 1774 8888 8539 2349 5936 - 2 1298 6666 2470 8195 1232 - 25 5583 9994 9649 8341 4784", "x2": "mul x_0_1 add INT+ 5 INT+ 7", "tree": "(x_0_1 mul (5 add 7))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380", "x2": "add n sqr n", "tree": "(n add (n)**2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 8 + 3 + 18 - 18 + 18 + 156 - 102 + 192 + 1866 - 912 + 2682 + 2 7984 - 1 938 + 4 5588 + 50 3706 - 16 4064 + 91 1754 + 1057 7820 - 295 3146 + 2097 336 + 2 5386 7674", "x2": "add mul x_0_3 n abs add x_0_3 sub x_0_3 INT+ 6", "tree": "((x_0_3 mul n) add abs((x_0_3 add (x_0_3 sub 6))))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 10 + 2 + 9 + 7 - 8 - 17 - 16 + 1 + 10 + 8 - 13 - 24 - 23 + 1 + 13 + 10 - 19 - 34 - 31 + 2 + 18 + 14", "x2": "sub idiv x_0_3 INT- 6 add n x_0_3", "tree": "((x_0_3 idiv -6) sub (n add x_0_3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 3 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1", "x2": "sign mod idiv n sub relu x_0_1 INT+ 3 sub x_0_2 sqr relu x_0_1", "tree": "sign(((n idiv (relu(x_0_1) sub 3)) mod (x_0_2 sub (relu(x_0_1))**2)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 5 + 6 + 22 - 43 + 236 - 947 + 5328 - 3 4543 + 26 3674 - 229 319 + 2229 4438 - 2 4004 7711 + 28 3079 4760 - 362 7045 5955 + 5015 9492 1316 - 7 4451 9144 1695 + 118 411 4085 1374 - 1990 7270 8936 8407 + 3 5581 330 2183 506 - 67 1806 1186 4923 3999 + 1336 726 7981 7548 2636", "x2": "add mul add sqr n sub sub sign x_0_2 x_0_2 x_0_1 n INT+ 1", "tree": "((((n)**2 add ((sign(x_0_2) sub x_0_2) sub x_0_1)) mul n) add 1)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 4 + 6 + 5 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1 - 1 - 1 - 1 + 1 + 1 + 1", "x2": "sign idiv x_0_3 sub INT- 3 INT+ 9", "tree": "sign((x_0_3 idiv (-3 sub 9)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 6 + 8 - 163 + 215 - 4402 + 5804 - 11 8855 + 15 6707 - 320 9086 + 423 1088 - 8664 5323 + 1 1423 9375 - 23 3942 3722 + 30 8446 3124 - 631 6444 495 + 832 8050 4347 - 1 7054 3989 3366 + 2 2485 7361 7368 - 46 468 7712 883 + 60 7114 8766 8935 - 1243 2656 8226 3842", "x2": "sub mul x_0_2 mul add INT- 9 sqr INT- 6 sqr sign n sign n", "tree": "((x_0_2 mul ((-9 add (-6)**2) mul (sign(n))**2)) sub sign(n))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 4 - 3 + 17 + 128 + 898 + 920 + 133 + 1834 + 2759 + 1 9451 + 1839 + 1 5637 + 8 2004 + 57 5872 + 1 5642 + 19 1503 + 134 1889 + 940 8870 + 19 1508 + 268 2450 + 2013 8675", "x2": "add INT+ 5 add x_0_3 mul abs x_0_1 mod idiv mul sqr relu n x_0_2 sub INT- 8 x_0_2 INT+ 8", "tree": "(5 add (x_0_3 add (abs(x_0_1) mul ((((relu(n))**2 mul x_0_2) idiv (-8 sub x_0_2)) mod 8))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 6 - 8 + 2 + 6 + 8 + 2 + 6 + 8 + 2 + 6 + 8 + 2 + 6 + 8 + 2 + 6 + 8 + 2 + 6 + 8 + 2 + 6", "x2": "abs x_0_3", "tree": "abs(x_0_3)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 26 + 107 + 363 + 988 + 2284 + 4685 + 8781 + 1 5342 + 2 5342 + 3 9983 + 6 719 + 8 9280 + 12 7696 + 17 8321 + 24 3857 + 32 7378 + 43 2354 + 56 2675 + 72 2675", "x2": "add add sqr sqr n idiv INT+ 9 x_0_1 x_0_1", "tree": "((((n)**2)**2 add (9 idiv x_0_1)) add x_0_1)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 9 + 7 + 10 - 6 - 2 + 1 + 1 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0", "x2": "idiv x_0_4 add n sign add idiv sqr relu n sign n relu relu x_0_1", "tree": "(x_0_4 idiv (n add sign((((relu(n))**2 idiv sign(n)) add relu(relu(x_0_1))))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 6 + 83 + 327 + 2029 + 2921 + 2031 + 5191 + 6569 + 5193 + 9811 + 1 1675 + 9813 + 1 5889 + 1 8239 + 1 5891 + 2 3425 + 2 6261 + 2 3427 + 3 2419 + 3 5741", "x2": "add n sqr mul add relu n idiv INT- 1 sign idiv mod n INT- 3 x_0_1 INT- 9", "tree": "(n add (((relu(n) add (-1 idiv sign(((n mod -3) idiv x_0_1)))) mul -9))**2)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 4 + 1 + 1 + 4 - 4 + 1 + 1 + 4 - 4 + 1 + 1 + 4 - 4 + 1 + 1 + 4 - 4 + 1 + 1 + 4 - 4 + 1 + 1", "x2": "mod x_0_4 mul x_0_4 n", "tree": "(x_0_4 mod (x_0_4 mul n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 2 + 2 - 3 + 4 - 15 + 84 - 588 + 4696 - 4 2264 + 42 2630 - 464 8930 + 5578 7148 - 7 2523 2924 + 101 5326 922 - 1522 9891 3830 + 2 4367 8262 1264 - 41 4253 456 1488 + 745 6554 8210 6766 - 1 4167 4541 6002 8554 + 28 3349 832 57 1060", "x2": "mul idiv sub n sqr x_0_1 x_0_1 n", "tree": "(((n sub (x_0_1)**2) idiv x_0_1) mul n)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr relu n", "tree": "(relu(n))**2", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 4 + 3 - 2 - 2 + 5 - 7 + 5 + 0 - 7 + 12 - 12 + 5 + 7 - 19 + 24 + 17 - 36 + 60 + 43 + 79 + 19", "x2": "idiv sub x_0_3 x_0_1 sign sub add n sign relu INT- 6 x_0_1", "tree": "((x_0_3 sub x_0_1) idiv sign(((n add sign(relu(-6))) sub x_0_1)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 - 5 + 8 + 11 + 0 + 14 + 18 + 8 + 23 + 28 + 19 + 35 + 41 + 33 + 50 + 57 + 50 + 68 + 13 + 70 + 14 + 35", "x2": "mod add n x_0_3 mod INT- 8 relu sub mod INT+ 6 n sub x_0_1 mul INT+ 7 n", "tree": "((n add x_0_3) mod (-8 mod relu(((6 mod n) sub (x_0_1 sub (7 mul n))))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 8 + 6 - 6 + 12 + 10 + 8 - 4 + 14 + 12 + 10 - 2 + 16 + 14 + 12 + 0 + 18 + 16 + 14 + 2 + 20 + 18 + 16", "x2": "add sub x_0_4 INT- 7 add add n sub n n sub x_0_4 add x_0_4 sub add n INT+ 5 mod n n", "tree": "((x_0_4 sub -7) add ((n add (n sub n)) add (x_0_4 sub (x_0_4 add ((n add 5) sub (n mod n))))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 3 - 10 - 1 - 16 + 1 - 30 + 3 - 60 + 5 - 122 + 7 - 248 + 9 - 502 + 11 - 1012 + 13 - 2034 + 15 - 4080 + 17", "x2": "add sub x_0_2 n add INT+ 8 x_0_2", "tree": "((x_0_2 sub n) add (8 add x_0_2))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 9 + 4 - 9 - 5 + 1 - 2 + 2 + 4 + 0 - 4 - 3 + 3 - 4 + 5 + 1 + 5 - 2 - 1 + 0 - 11 + 5", "x2": "mod n mul sub sub mod x_0_3 n x_0_3 abs INT+ 5 sign x_0_2", "tree": "(n mod ((((x_0_3 mod n) sub x_0_3) sub abs(5)) mul sign(x_0_2)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 9 + 8 + 6 + 3 - 1 - 6 - 12 - 19 - 27 - 36 - 46 - 57 - 69 - 82 - 96 - 111 - 127 - 144 - 162", "x2": "sub x_0_1 abs sub relu INT+ 2 n", "tree": "(x_0_1 sub abs((relu(2) sub n)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 2 + 9 + 6 - 5 - 11 + 55 + 41 - 41 - 98 + 551 + 450 - 493 - 1273 + 7715 + 6749 - 7889 - 2 1640 + 13 8871 + 12 8230 - 15 7781 - 45 4439 + 305 5163 + 294 9289", "x2": "sub mul x_0_4 n sign sub add x_0_4 mul sub INT+ 5 mod abs INT+ 6 INT- 3 x_0_1 mul INT+ 5 INT- 7", "tree": "((x_0_4 mul n) sub sign(((x_0_4 add ((5 sub (abs(6) mod -3)) mul x_0_1)) sub (5 mul -7))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "mul abs n n", "tree": "(abs(n) mul n)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 1 - 9 + 7 + 5 + 1 - 5 - 6 + 6 + 7 - 6 - 8 + 4 + 12 + 1 - 17 - 2 + 19 + 9 - 19 - 11 + 18 + 29 - 16 - 45", "x2": "sub mod x_0_1 x_0_5 x_0_2", "tree": "((x_0_1 mod x_0_5) sub x_0_2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 20 + 45 + 80 + 125 + 180 + 245 + 320 + 405 + 500 + 605 + 720 + 845 + 980 + 1125 + 1280 + 1445 + 1620 + 1805", "x2": "mul abs mul relu INT+ 5 n n", "tree": "(abs((relu(5) mul n)) mul n)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 6 - 7 - 5 + 8 + 6 - 7 - 5 + 8 + 6 - 7 - 5 + 8 + 6 - 7 - 5 + 8 + 6 - 7 - 5 + 8 + 6", "x2": "sub relu sqr sign add x_0_2 x_0_1 x_0_2", "tree": "(relu((sign((x_0_2 add x_0_1)))**2) sub x_0_2)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 1 + 2 + 7 + 14 + 23 + 34 + 47 + 62 + 79 + 98 + 119 + 142 + 167 + 194 + 223 + 254 + 287 + 322 + 359", "x2": "add mul n n INT- 2", "tree": "((n mul n) add -2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 3 - 2 - 2 - 6 - 5 - 8 - 6 - 8 - 5 - 6 - 2 - 2 + 3 + 4 + 10 + 12 + 19 + 22 + 30 + 34", "x2": "sub sub add n x_0_2 sub INT+ 9 abs INT- 7 abs INT- 7", "tree": "(((n add x_0_2) sub (9 sub abs(-7))) sub abs(-7))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 3 + 3 + 5 + 5 + 7 + 7 + 9 + 9 + 11 + 11 + 13 + 13 + 15 + 15 + 17 + 17 + 19 + 19 + 21", "x2": "add relu n sub n x_0_1", "tree": "(relu(n) add (n sub x_0_1))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 0 - 1 + 40 + 0 - 6 + 280 + 0 - 54 + 2800 + 0 - 648 + 3 6400 + 0 - 9720 + 58 2400 + 0 - 17 4960 + 1106 5600 + 0 - 367 4160 + 2 4344 3200", "x2": "sub mul x_0_3 n mod n sign x_0_2", "tree": "((x_0_3 mul n) sub (n mod sign(x_0_2)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 2 + 4 + 3 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "idiv idiv sign mul mul x_0_3 mul x_0_1 sqr n relu x_0_2 x_0_1 abs x_0_1", "tree": "((sign(((x_0_3 mul (x_0_1 mul (n)**2)) mul relu(x_0_2))) idiv x_0_1) idiv abs(x_0_1))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 10 - 2 + 10 + 6 - 18 - 27 - 16 - 29 - 26 - 3 + 5 - 7 + 5 + 1 - 23 - 32 - 21 - 34 - 31 - 8 + 0 - 12 + 0", "x2": "sub sub INT- 1 0 n x_0_5", "tree": "((-10 sub n) sub x_0_5)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 3 + 9 - 6 - 1 - 5 - 86 - 251 - 528 - 1085 - 2202 - 4439 - 8916 - 1 7873 - 3 5790 - 7 1627 - 14 3304 - 28 6661 - 57 3378 - 114 6815 - 229 3692 - 458 7449 - 917 4966 - 1835 3 - 3670 80", "x2": "sub mul abs sub add x_0_1 mod sign x_0_5 mul INT- 5 INT+ 6 n INT- 2 n", "tree": "((abs(((x_0_1 add (sign(x_0_5) mod (-5 mul 6))) sub n)) mul -2) sub n)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 1 + 10 + 7 - 1 + 7 - 1 - 1 + 7 - 1 + 1 + 8 - 1 + 6 + 7 - 1 + 14 + 1 + 7 + 17 - 1 + 20 + 10", "x2": "sub relu sub relu relu add n x_0_3 relu add abs abs INT- 8 x_0_1 INT+ 1", "tree": "(relu((relu(relu((n add x_0_3))) sub relu((abs(abs(-8)) add x_0_1)))) sub 1)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 10 - 6 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0 + 0 - 1 + 0", "x2": "idiv abs INT+ 4 sub sub n mul sub INT- 5 mul n INT+ 9 idiv idiv x_0_3 INT+ 6 abs n x_0_1", "tree": "(abs(4) idiv ((n sub ((-5 sub (n mul 9)) mul ((x_0_3 idiv 6) idiv abs(n)))) sub x_0_1))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 4 + 10 - 5 - 1 - 9 + 6 - 8 - 3 - 10 + 6 - 7 - 1 - 7 + 10 - 2 + 5 + 0 + 18 + 7 + 15 + 11 + 30 + 20", "x2": "sub INT- 3 sub idiv n INT- 1 add x_0_4 INT- 7", "tree": "(-3 sub ((n idiv -1) sub (x_0_4 add -7)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 8 + 7 - 3 + 0 + 6 + 8 - 408 + 357 - 153 + 0 + 306 + 408 - 2 808 + 1 8207 - 7803 + 0 + 1 5606 + 2 808 - 106 1208 + 92 8557 - 39 7953 + 0 + 79 5906 + 106 1208 - 5412 1608", "x2": "mul x_0_6 add sign n mul INT- 5 INT- 1 0", "tree": "(x_0_6 mul (sign(n) add (-5 mul -10)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 4 - 12 - 48 - 235 - 1404 - 9821 - 7 8560 - 70 7031 - 707 300 - 7777 3289 - 9 3327 9456 - 121 3263 2915 - 1698 5686 796 - 2 5478 5291 1925 - 40 7656 4659 784 - 693 159 9204 3311 - 1 2474 2878 5677 9580 - 23 7011 4692 7881 2001 - 474 229 3855 7624 0", "x2": "add mul n x_0_1 mod n add sub INT- 8 add mul n INT+ 1 x_0_1 INT+ 4", "tree": "((n mul x_0_1) add (n mod ((-8 sub ((n mul 1) add x_0_1)) add 4)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 7 + 1 + 4 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0", "x2": "sqr relu idiv sub n x_0_2 n", "tree": "(relu(((n sub x_0_2) idiv n)))**2", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 6 - 9 - 3 - 5 + 7 + 6 + 7 + 72 + 9 + 10 + 99 + 12 + 637 + 504 + 15 + 64 + 612 + 162 + 19 + 180 + 189 + 22 + 207 + 1176 + 25", "x2": "mul sqr idiv x_0_6 mod relu x_0_2 x_0_6 n", "tree": "(((x_0_6 idiv (relu(x_0_2) mod x_0_6)))**2 mul n)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 1 - 2 + 6 - 5 + 1 - 2 + 6 - 5 + 1 - 2 + 6 - 5 + 1 - 2 + 6 - 5 + 1 - 2 + 6 - 5 + 1 - 2 + 6", "x2": "mul sign mul sub relu n abs n INT- 4 x_0_4", "tree": "(sign(((relu(n) sub abs(n)) mul -4)) mul x_0_4)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 6 + 45 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "add mul n n sqr relu sub INT+ 6 x_0_2", "tree": "((n mul n) add (relu((6 sub x_0_2)))**2)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 5 + 3 + 7 + 6 + 4 + 8 + 7 + 5 + 9 + 8 + 6 + 10 + 9 + 7 + 11 + 10 + 8 + 12 + 11 + 9 + 13", "x2": "mod add abs sign INT+ 3 x_0_3 abs add INT- 1 0 add sqr relu x_0_3 relu n", "tree": "((abs(sign(3)) add x_0_3) mod abs((-10 add ((relu(x_0_3))**2 add relu(n)))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 4 - 10 - 8 + 4 - 10 - 13 - 6 - 9 - 13 - 10 - 8 - 5 - 10 - 13 - 6 - 9 - 13 - 10 - 8 - 5 - 10 - 13 - 6", "x2": "sub INT- 5 mod x_0_4 relu abs relu abs INT+ 9", "tree": "(-5 sub (x_0_4 mod relu(abs(relu(abs(9))))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 1 + 0 - 8 - 7 - 5 + 19 + 7 + 103 + 97 + 87 - 23 + 55 - 191 + 7 - 773 + 167 - 241 + 115 + 83 + 47 + 7 + 271 - 563 - 185", "x2": "add INT+ 7 mul mul sub abs mul sqr INT+ 4 idiv relu x_0_5 n n INT+ 2 mod n INT- 7", "tree": "(7 add (((abs(((4)**2 mul (relu(x_0_5) idiv n))) sub n) mul 2) mul (n mod -7)))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 7 + 8 - 10 - 1 + 36 + 0 + 48 - 3 + 27 + 141 + 36 + 183 + 33 + 126 + 471 + 159 + 603 + 156 + 438 + 1476 + 543 + 1878 + 540", "x2": "mul add n x_0_5 abs INT+ 3", "tree": "((n add x_0_5) mul abs(3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 1 + 8 + 41 + 322 + 3215 + 3 8576 + 54 61 + 864 974 + 1 5553 7531 + 31 1075 620 + 684 3651 3641 + 1 6424 7632 7386 + 42 7043 8451 2039 + 1195 7227 6633 7096 + 3 5871 6829 9011 2885 + 114 7893 8556 8361 2326 + 3902 8391 932 4281 9091 + 14 502 2079 3567 4148 7284 + 533 9083 9015 5561 7651 6801 + 2 1356 3356 622 2470 6067 2050", "x2": "abs sub add INT- 1 0 n mul idiv relu x_0_1 INT- 1 add n n", "tree": "abs(((-10 add n) sub ((relu(x_0_1) idiv -1) mul (n add n))))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 8 + 8 - 6 - 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11 + 13 + 12 + 14 + 13 + 15 + 14 + 16", "x2": "add sign mod idiv idiv add n n x_0_4 INT+ 6 x_0_1 abs x_0_2", "tree": "(sign(((((n add n) idiv x_0_4) idiv 6) mod x_0_1)) add abs(x_0_2))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 9 + 2 + 3 + 4 + 7 + 7 + 8 + 10 + 13 + 17 + 22 + 28 + 35 + 43 + 52 + 62 + 73 + 85 + 98 + 112", "x2": "add relu mod add x_0_1 INT- 6 add n sub x_0_1 n n", "tree": "(relu(((x_0_1 add -6) mod (n add (x_0_1 sub n)))) add n)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 2 + 3 + 6 + 5 + 8 + 3 + 8 + 6 + 14 + 6 + 11 + 9 + 37 + 11 + 16 + 15 + 63 + 17 + 51 + 26 + 118 + 37", "x2": "add add mod INT- 7 n idiv sqr x_0_4 mod mul sqr INT+ 9 INT+ 7 add n n add INT- 6 INT+ 8", "tree": "(((-7 mod n) add ((x_0_4)**2 idiv (((9)**2 mul 7) mod (n add n)))) add (-6 add 8))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 1 - 8 - 10 - 17 - 19 - 26 - 28 - 35 - 37 - 44 - 46 - 53 - 55 - 62 - 64 - 71 - 73 - 80 - 82 - 89 - 91", "x2": "mul sub x_0_2 INT+ 9 sign idiv sqr x_0_1 add mod x_0_2 n abs x_0_1", "tree": "((x_0_2 sub 9) mul sign(((x_0_1)**2 idiv ((x_0_2 mod n) add abs(x_0_1)))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 9 - 10 - 4 + 6 + 5 - 8 - 442 - 641 - 324 + 600 + 604 - 1153 - 7 4699 - 12 5637 - 7 2900 + 15 3600 + 17 4555 - 37 3573 - 2696 6340 - 5025 4801 - 3214 8900 + 7434 2400 + 9233 9594 - 2 1517 8049 - 168 5396 2501", "x2": "add idiv INT+ 4 x_0_5 mul INT+ 1 mul sqr n x_0_6", "tree": "((4 idiv x_0_5) add (1 mul ((n)**2 mul x_0_6)))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361", "x2": "relu sqr n", "tree": "relu((n)**2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 9 + 114 - 588 + 132 - 4 3950 + 132 - 329 6100 + 132 - 2 4720 7350 + 132 - 185 4055 1100 + 114 - 1 3905 4133 2350 + 114 - 104 2905 9992 6100 + 96 - 7821 7949 9445 7350 + 78 - 58 6634 6245 8430 1100 + 42", "x2": "mul add sign INT- 4 mul INT- 3 sub INT+ 7 idiv sqr n x_0_2 mul mod add x_0_2 INT+ 2 x_0_2 INT- 3", "tree": "((sign(-4) add (-3 mul (7 sub ((n)**2 idiv x_0_2)))) mul (((x_0_2 add 2) mod x_0_2) mul -3))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 3 - 2 - 3 + 5 + 9 + 9 + 11 + 4 + 1 + 2 + 1 + 9 + 13 + 13 + 15 + 8 + 5 + 6 + 5 + 13 + 17 + 17", "x2": "sub n x_0_4", "tree": "(n sub x_0_4)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 3 - 3 - 8 + 1 + 2 + 4 + 1 + 2 + 4 + 1 + 2 + 4 + 1 + 2 + 4 + 1 + 2 + 4 + 1 + 2 + 4 + 1", "x2": "idiv mod x_0_3 n sign n", "tree": "((x_0_3 mod n) idiv sign(n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 10 - 9 + 1 - 1 - 6 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 + 1 - 1 - 1 - 1", "x2": "sign add idiv INT- 8 sqr x_0_2 sub sign INT+ 1 idiv add n mul n x_0_6 x_0_3", "tree": "sign(((-8 idiv (x_0_2)**2) add (sign(1) sub ((n add (n mul x_0_6)) idiv x_0_3))))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 6 - 3 + 10 + 2 + 0 - 3 + 54 - 27 + 90 + 18 + 0 - 27 + 486 - 243 + 810 + 162 + 0 - 243 + 4374 - 2187 + 7290 + 1458 + 0 - 2187 + 3 9366", "x2": "mul x_0_6 sqr INT- 3", "tree": "(x_0_6 mul (-3)**2)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 7 + 5 + 9 + 37 + 40 + 37 + 10 + 8 + 12 + 40 + 43 + 40 + 13 + 11 + 15 + 43 + 46 + 43 + 16 + 14 + 18 + 46", "x2": "sub n sub relu add add x_0_3 INT- 8 abs abs INT+ 4 sqr INT- 6", "tree": "(n sub (relu(((x_0_3 add -8) add abs(abs(4)))) sub (-6)**2))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729", "x2": "relu sqr sub n INT- 8", "tree": "relu(((n sub -8))**2)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 5 + 7 - 10 + 10 - 22 + 25 - 42 + 55 - 89 + 120 - 186 + 262 - 395 + 566 - 843 + 1221 - 1804 + 2628 - 3868 + 5651 - 8300 + 1 2145", "x2": "sub sub idiv n add x_0_1 mul mod n sub INT+ 9 x_0_2 mod n n x_0_1 add n x_0_3", "tree": "(((n idiv (x_0_1 add ((n mod (9 sub x_0_2)) mul (n mod n)))) sub x_0_1) sub (n add x_0_3))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "- 10 + 7 + 4 - 28 + 32 + 42 + 11 + 78 + 95 + 71 + 145 + 169 + 152 + 233 + 264 + 254 + 342 + 380 + 377 + 472 + 517 + 521", "x2": "add add INT- 1 0 x_0_3 mul n sub idiv INT- 1 0 add x_0_2 add n x_0_3 INT- 8", "tree": "((-10 add x_0_3) add (n mul ((-10 idiv (x_0_2 add (n add x_0_3))) sub -8)))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 3 + 0 - 5 + 4 - 3 - 18 + 0 - 40 + 36 - 30 - 198 + 0 - 520 + 504 - 450 - 3168 + 0 - 9360 + 9576 - 9000 - 6 6528 + 0 - 21 5280 + 22 9824", "x2": "mul x_0_5 n", "tree": "(x_0_5 mul n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 1 + 17 + 107 + 323 + 719 + 1349 + 2267 + 3527 + 5183 + 7289 + 9899 + 1 3067 + 1 6847 + 2 1293 + 2 6459 + 3 2399 + 3 9167 + 4 6817 + 5 5403", "x2": "idiv sub mul sqr sub n relu sqr n relu INT+ 9 abs n n", "tree": "(((((n sub relu((n)**2)))**2 mul relu(9)) sub abs(n)) idiv n)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 10 + 12 + 9 + 5 + 0 + 6 + 1 + 7 + 2 + 8 + 3 + 9 + 4 + 10 + 5 + 11 + 6 + 12 + 7 + 13", "x2": "abs sub x_0_1 n", "tree": "abs((x_0_1 sub n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 4 - 9 + 7 + 13 + 12 + 19 + 19 + 27 + 28 + 37 + 39 + 49 + 52 + 63 + 67 + 79 + 84 + 97 + 103 + 117 + 124", "x2": "add abs add sqr mul n mod INT+ 3 sign INT- 3 x_0_2 n", "tree": "(abs((((n mul (3 mod sign(-3))))**2 add x_0_2)) add n)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 7 - 9 - 1 + 2 - 16 - 10 + 1 - 14 - 26 - 9 - 13 - 40 - 35 - 22 - 53 - 75 - 57 - 75 - 128 - 132 - 132 - 203", "x2": "idiv add x_0_3 x_0_4 sign add n INT+ 1 0", "tree": "((x_0_3 add x_0_4) idiv sign((n add 10)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 1 + 6 - 10 + 5 + 6 + 5 + 6 + 9 + 8 + 11 + 12 + 13 + 12 + 13 + 16 + 15 + 18 + 19 + 20 + 19 + 20 + 23", "x2": "sub n sign mod mod sub n x_0_3 mod x_0_2 x_0_3 mul mod n x_0_3 INT- 4", "tree": "(n sub sign((((n sub x_0_3) mod (x_0_2 mod x_0_3)) mod ((n mod x_0_3) mul -4))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 9 + 7 + 15 + 31 + 64 + 80 + 113 + 129 + 162 + 178 + 211 + 227 + 260 + 276 + 309 + 325 + 358 + 374 + 407 + 423 + 456", "x2": "add x_0_2 idiv sqr sub INT- 7 relu sub INT+ 1 n abs idiv INT- 5 n", "tree": "(x_0_2 add (((-7 sub relu((1 sub n))))**2 idiv abs((-5 idiv n))))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 10 + 0 + 11 - 5 + 6 + 18 + 3 + 15 + 28 + 14 + 27 + 41 + 28 + 42 + 57 + 45 + 60 + 76 + 65 + 81 + 98", "x2": "add x_0_3 n", "tree": "(x_0_3 add n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 3 - 5 + 7 + 5 + 2058 + 1529 - 3317 + 5542 + 4945 + 249 2172 + 220 3361 - 560 9125 + 1086 7778 + 1113 1105 + 63 8245 2396 + 63 6991 6838 - 181 7917 4233 + 392 4354 6244 + 445 3555 985 + 28 1529 9751 8630 + 30 8367 6741 3110 - 96 1860 1086 6941 + 226 820 6991 1540", "x2": "sub x_0_5 mul n add INT+ 6 mul abs n add mul INT- 1 0 x_0_5 idiv abs abs n x_0_4", "tree": "(x_0_5 sub (n mul (6 add (abs(n) mul ((-10 mul x_0_5) add (abs(abs(n)) idiv x_0_4))))))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 5 + 2 - 2 - 7 - 13 - 20 - 28 - 37 - 47 - 58 - 70 - 83 - 97 - 112 - 128 - 145 - 163 - 182 - 202", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 9 + 6 - 5 - 5 + 3 + 3 + 0 - 2 - 2 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1 + 0 + 0 + 0 - 1 - 1", "x2": "idiv x_0_5 add relu relu n x_0_5", "tree": "(x_0_5 idiv (relu(relu(n)) add x_0_5))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 6 + 8 + 8 + 1 - 1 + 6 - 8 - 8 - 1 + 1 - 6 + 8 + 8 + 1 - 1 + 6 - 8 - 8 - 1 + 1 - 6 + 8 + 8", "x2": "sub relu mod sign sqr relu abs n sign sqr sqr x_0_3 x_0_5", "tree": "(relu((sign((relu(abs(n)))**2) mod sign(((x_0_3)**2)**2))) sub x_0_5)", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "5"}
{"x1": "- 1 + 2 + 7 + 8 + 14 + 16 + 23 + 26 + 34 + 38 + 47 + 52 + 62 + 68 + 79 + 86 + 98 + 106 + 119 + 128 + 142 + 152", "x2": "relu add mod x_0_2 add add x_0_3 sign idiv INT+ 9 n n sub n INT- 2", "tree": "relu(((x_0_2 mod ((x_0_3 add sign((9 idiv n))) add n)) add (n sub -2)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 10 + 30 + 120 + 600 + 3600 + 2 5200 + 20 1600 + 181 4400 + 1814 4000 + 1 9958 4000 + 23 9500 8000 + 311 3510 4000 + 4358 9145 6000 + 6 5383 7184 0 + 104 6139 4944 0 + 1778 4371 4048 0 + 3 2011 8685 2864 0 + 60 8225 5020 4416 0 + 1216 4510 408 8320 0", "x2": "abs mul x_0_1 n", "tree": "abs((x_0_1 mul n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 3 + 1 + 0 + 2 + 0 + 3 + 0 + 4 + 0 + 5 + 0 + 6 + 0 + 7 + 0 + 8 + 0 + 9 + 0 + 10", "x2": "mod sub relu relu x_0_1 relu idiv n INT+ 2 n", "tree": "((relu(relu(x_0_1)) sub relu((n idiv 2))) mod n)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 5 + 5 - 5 + 7 + 2 + 12 + 3 + 14 + 3 + 9 + 0 + 10 + 0 + 12 + 7 + 17 + 8 + 19 + 8 + 14 + 5 + 15 + 5", "x2": "sub n x_0_5", "tree": "(n sub x_0_5)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "- 4 + 4 + 17 + 32 + 52 + 74 + 101 + 130 + 164 + 200 + 241 + 284 + 332 + 382 + 437 + 494 + 556 + 620 + 689 + 760 + 836", "x2": "add x_0_2 mul abs INT+ 7 n", "tree": "(x_0_2 add (abs(7) mul n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 2 + 4 + 5 - 2 + 2 + 3 - 2 + 1 + 2 - 2 + 1 + 1 - 2 + 1 + 1 - 2 + 1 + 1 - 2 + 1 + 1", "x2": "sub x_0_3 abs relu mod n x_0_3", "tree": "(x_0_3 sub abs(relu((n mod x_0_3))))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 2 - 13 - 12 - 20 - 94 - 74 - 136 - 91 - 90 - 133 - 244 - 471 - 242 - 610 - 384 - 1007 - 766 - 557", "x2": "sub n sqr abs add mod sqr sub INT- 9 sign n n n", "tree": "(n sub (abs(((((-9 sub sign(n)))**2 mod n) add n)))**2)", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 7 + 1 + 8 + 10 + 1 + 2 + 5 + 3 + 1 + 3 + 2 + 2 + 1 + 4 + 1 + 3 + 1 + 5 + 1 + 4 + 1 + 6 + 1", "x2": "sub idiv abs x_0_4 mod x_0_1 sqr n INT- 1", "tree": "((abs(x_0_4) idiv (x_0_1 mod (n)**2)) sub -1)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 0 + 0 + 3 + 2 + 0 + 0 + 0 + 1 + 7 + 1 + 11 + 4 + 1 + 0 + 9 + 5 + 2", "x2": "abs idiv sqr mod sqr INT- 8 n n", "tree": "abs(((((-8)**2 mod n))**2 idiv n))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 7 + 0 + 2 - 3 + 18 + 4 + 0 + 10 - 32 - 4 + 4 - 16 + 68 + 12 - 4 + 36 - 132 - 20 + 12 - 68 + 268 + 44 - 20", "x2": "sub sub add sub n x_0_4 abs INT- 4 x_0_4 n", "tree": "((((n sub x_0_4) add abs(-4)) sub x_0_4) sub n)", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 6 + 2 - 6 + 6 - 6 + 1 + 3 + 2 + 1 + 2 + 11 + 4 + 3 + 4 + 7 + 1 + 2 + 6 + 3 + 2 + 21 + 11 + 2 + 4", "x2": "abs idiv n add mod n x_0_2 x_0_5", "tree": "abs((n idiv ((n mod x_0_2) add x_0_5)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "- 7 - 1 + 1 - 6 - 2 + 2 + 2 + 6 + 9 + 12 + 11 + 14 + 16 + 18 + 16 + 18 + 19 + 20 + 17 + 18 + 44 + 45 + 42", "x2": "add mod sqr n add n INT+ 5 x_0_4", "tree": "(((n)**2 mod (n add 5)) add x_0_4)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 1 + 1 + 7 + 0 + 1 + 0 + 4 + 6 + 6 + 0 + 2 + 6 + 1 + 6 + 0 + 10 + 3 + 6 + 15 + 10 + 18 + 4", "x2": "mod mul INT+ 6 sub relu sign sqr x_0_3 sub INT- 8 x_0_2 n", "tree": "((6 mul (relu(sign((x_0_3)**2)) sub (-8 sub x_0_2))) mod n)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 1 - 4 + 1 - 5 + 1 - 6 + 1 - 7 + 2 - 8 + 2 - 9 + 3 - 10 + 4 - 11 + 4 - 12 + 5 - 13 + 6", "x2": "add x_0_2 idiv n mul INT- 3 sub INT- 2 x_0_2", "tree": "(x_0_2 add (n idiv (-3 mul (-2 sub x_0_2))))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 3 + 5 + 1 + 4 + 6 + 6 + 8 + 9 + 8 + 9 + 9 + 9 + 11 + 11 + 12 + 13 + 12 + 13 + 12 + 12 + 14 + 14", "x2": "sub n idiv sqr x_0_4 mul INT+ 2 INT+ 9", "tree": "(n sub ((x_0_4)**2 idiv (2 mul 9)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 0 + 0 + 1 + 0 + 0 + 4 + 4 + 0 + 1 + 0 + 1 + 4 + 3 + 4 + 10 + 0 + 4 + 10 + 6", "x2": "mod add n sqr sub sqr INT- 1 0 mod relu INT- 2 n n", "tree": "((n add (((-10)**2 sub (relu(-2) mod n)))**2) mod n)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 0 + 42 + 56 + 0 + 84 + 196 + 336 + 504 + 0 + 154 + 336 + 546 + 784 + 1050 + 1344 + 1666 + 2016 + 2394", "x2": "mul mul INT+ 7 n relu mod mod n INT- 1 0 abs n", "tree": "((7 mul n) mul relu(((n mod -10) mod abs(n))))", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "- 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 + 11 + 11 + 11 + 11", "x2": "sub add add INT+ 2 INT- 7 n mod relu abs n sqr INT+ 4", "tree": "(((2 add -7) add n) sub (relu(abs(n)) mod (4)**2))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 8 + 6 + 9 - 6 - 18 - 4 - 1 - 16 - 28 - 14 - 11 - 26 - 38 - 24 - 21 - 36 - 48 - 34 - 31 - 46 - 58 - 44 - 41", "x2": "add sub x_0_4 n sub n add INT+ 7 INT+ 3", "tree": "((x_0_4 sub n) add (n sub (7 add 3)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 9 - 1 + 0 + 1 - 40 - 39 + 4 + 5 - 36 - 35 + 8 + 9 - 32 - 31 + 12 + 13 - 28 - 27 + 16 + 17 - 24", "x2": "add mod INT- 2 n mod sign sign x_0_2 mul idiv relu sqr INT+ 1 0 INT+ 9 INT- 4", "tree": "((-2 mod n) add (sign(sign(x_0_2)) mod ((relu((10)**2) idiv 9) mul -4)))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362", "x2": "add sqr idiv n INT- 1 INT+ 1", "tree": "(((n idiv -1))**2 add 1)", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 3 + 10 + 9 - 1 - 8 + 4 + 2 - 9 - 17 - 6 - 9 - 21 - 30 - 20 - 24 - 37 - 47 - 38 - 43 - 57 - 68 - 60 - 66", "x2": "sub x_0_4 abs n", "tree": "(x_0_4 sub abs(n))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 10 - 6 - 3 - 4 - 5 - 4 - 4 - 4 - 4 - 4 - 5 - 4 - 4 - 4 - 5 - 4 - 4 - 4 - 5 - 4", "x2": "sub INT- 5 idiv mod n x_0_2 n", "tree": "(-5 sub ((n mod x_0_2) idiv n))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 5 - 10 + 8 + 5 - 6 - 2 - 1 + 1 + 1 - 2 - 4 - 8 + 8 + 8 - 4 - 2 - 1 + 1 + 1 - 2 - 4 - 8 + 8 + 8", "x2": "idiv relu INT+ 8 x_0_5", "tree": "(relu(8) idiv x_0_5)", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 7 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 110 + 0 + 1404 + 0 + 2310 + 0 + 272 + 0 + 0 + 380 + 0", "x2": "mul add sqr n n mod sqr mod n add INT+ 9 x_0_1 n", "tree": "(((n)**2 add n) mul (((n mod (9 add x_0_1)))**2 mod n))", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 7 + 4 + 6 - 2 + 7 + 1 + 6 + 2 + 7 + 3 + 8 + 4 + 9 + 5 + 10 + 6 + 11 + 7 + 12 + 8 + 13", "x2": "sub relu add relu sub x_0_2 add x_0_2 x_0_2 n x_0_1", "tree": "(relu((relu((x_0_2 sub (x_0_2 add x_0_2))) add n)) sub x_0_1)", "n_input_points": "19", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 4 + 5 + 35 - 1 - 196 - 10 + 1586 + 302 - 1 5835 - 4894 + 18 9731 + 7 9469 - 265 1329 - 138 1756 + 4234 1804 + 2614 1189 - 7 6077 709 - 5 3902 4389 + 151 8927 2996 + 120 8028 2882 - 3336 2498 1520", "x2": "sub sub sqr INT- 5 mul n x_0_2 add n x_0_3", "tree": "(((-5)**2 sub (n mul x_0_2)) sub (n add x_0_3))", "n_input_points": "19", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 + 1 + 10 - 5 - 8 - 26 - 51 - 156 - 325 - 965 - 2080 - 6077 - 1 2578 - 3 6852 - 7 7789 - 22 9236 - 49 6339 - 144 6242 - 299 514 - 874 4215 - 1841 8314 - 5441 3206 - 1 1754 805 - 3 4299 6630", "x2": "add mul x_0_2 INT+ 6 mod mul n x_0_5 x_0_3", "tree": "((x_0_2 mul 6) add ((n mul x_0_5) mod x_0_3))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 6 - 3 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441", "x2": "mul idiv x_0_2 x_0_2 sqr relu n", "tree": "((x_0_2 idiv x_0_2) mul (relu(n))**2)", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 10 + 30 + 120 + 600 + 3600 + 2 5200 + 20 1600 + 181 4400 + 1814 4000 + 1 9958 4000 + 23 9500 8000 + 311 3510 4000 + 4358 9145 6000 + 6 5383 7184 0 + 104 6139 4944 0 + 1778 4371 4048 0 + 3 2011 8685 2864 0 + 60 8225 5020 4416 0 + 1216 4510 408 8320 0", "x2": "mul n abs x_0_1", "tree": "(n mul abs(x_0_1))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 5 - 9 - 4 - 4 - 9 - 16 + 11 + 14 + 13 + 25 + 24 + 23 + 10 + 26 + 78 + 33 + 18 + 40 + 362 + 50 + 4 + 32 + 3 2779", "x2": "sub relu mod sub x_0_4 sqr x_0_4 add INT+ 1 0 n idiv sub add x_0_3 x_0_2 sqr x_0_4 x_0_2", "tree": "(relu(((x_0_4 sub (x_0_4)**2) mod (10 add n))) sub (((x_0_3 add x_0_2) sub (x_0_4)**2) idiv x_0_2))", "n_input_points": "19", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 3 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1", "x2": "sign mul x_0_3 sign x_0_2", "tree": "sign((x_0_3 mul sign(x_0_2)))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 5 + 7 - 5 - 5 - 7 + 10 + 1 + 13 + 1 + 1 - 1 + 16 + 7 + 19 + 7 + 7 + 5 + 22 + 13 + 25 + 13 + 13 + 11 + 28 + 19", "x2": "add x_0_6 abs INT+ 6", "tree": "(x_0_6 add abs(6))", "n_input_points": "19", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 10 + 9 + 9 - 9 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1 - 1 + 1 + 1 + 1", "x2": "sign mod sign INT+ 2 mul INT+ 8 x_0_4", "tree": "sign((sign(2) mod (8 mul x_0_4)))", "n_input_points": "19", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 1 - 4 - 9 - 16 - 25 - 36 - 49 - 64 - 81 - 100 - 121 - 144 - 169 - 196 - 225 - 256 - 289 - 324 - 361", "x2": "mul mul n n sign INT- 3", "tree": "((n mul n) mul sign(-3))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 5 - 1 + 8 - 38 - 50 - 46 - 37 - 83 - 95 - 91 - 82 - 128 - 140 - 136 - 127 - 173 - 185 - 181 - 172 - 218 - 230 - 226", "x2": "add x_0_4 mul relu INT+ 5 INT- 9", "tree": "(x_0_4 add (relu(5) mul -9))", "n_input_points": "19", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 9 - 18 - 39 - 72 - 170 - 270 - 406 - 584 - 810 - 1090 - 1430 - 1836 - 2314 - 2870 - 3510 - 4240 - 5066 - 5994 - 7030", "x2": "mul sub mod idiv n n INT- 1 0 sqr sub mod idiv INT+ 4 relu n INT+ 3 n n", "tree": "((((n idiv n) mod -10) sub ((((4 idiv relu(n)) mod 3) sub n))**2) mul n)", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "0"}
{"x1": "- 5 + 2 + 3 + 0 + 1 + 2 + 3 + 0 + 1 + 3 + 2 + 2 + 3 + 1 + 0 + 0 + 1 + 3 + 2 + 2", "x2": "mod add relu add x_0_1 mul sqr INT+ 1 0 add INT- 1 0 n n INT+ 4", "tree": "((relu((x_0_1 add ((10)**2 mul (-10 add n)))) add n) mod 4)", "n_input_points": "19", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 2 - 1 - 8 - 6 + 2 + 1 + 8 + 6 + 2 + 1 + 8 + 6 + 2 + 1 + 8 + 6 + 2 + 1 + 8 + 6 + 2 + 1 + 8", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "19", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 1 + 6 - 4 + 11 + 18 + 8 + 23 + 30 + 20 + 35 + 42 + 32 + 47 + 54 + 44 + 59 + 66 + 56 + 71 + 78 + 68 + 83", "x2": "add INT+ 4 sub add sign n x_0_3 add abs idiv INT+ 6 sub INT- 4 n INT- 8", "tree": "(4 add ((sign(n) add x_0_3) sub (abs((6 idiv (-4 sub n))) add -8)))", "n_input_points": "19", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 6 - 4 - 1 + 50 + 56 + 77 + 148 + 176 + 221 + 318 + 374 + 449 + 578 + 668 + 779 + 946 + 1076 + 1229 + 1440 + 1616 + 1817 + 2078", "x2": "relu add x_0_3 mul sub idiv mul n n relu n sub INT- 7 sub n n n", "tree": "relu((x_0_3 add ((((n mul n) idiv relu(n)) sub (-7 sub (n sub n))) mul n)))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 20 - 560 + 1 7952 - 89 7560 + 4308 2912 - 30 1580 3800 + 1930 1144 3232 - 17 3710 2989 840 + 1389 6823 9126 7232 - 15 2865 630 3939 5480 + 1467 5046 517 8196 6112 - 19 775 5986 7316 5559 4520 + 2136 6867 513 9454 2658 6272 - 32 503 57 7091 8139 8794 760 + 4102 4384 7386 7752 1904 5641 7312 - 69 7414 5405 5751 7872 3775 9094 3000 + 1 42 7693 8402 8257 3622 3730 9579 2032 - 190 8126 1829 6536 8898 8250 8882 48 6040 + 3 530 189 2744 5902 3812 142 1120 7776 6432", "x2": "mul sub abs INT- 9 idiv sign x_0_1 INT- 1 sub abs sqr INT+ 2 mul n x_0_1", "tree": "((abs(-9) sub (sign(x_0_1) idiv -1)) mul (abs((2)**2) sub (n mul x_0_1)))", "n_input_points": "19", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 9 - 7 + 2 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 - 1 + 1 + 1 - 1 + 1 - 1", "x2": "idiv x_0_2 x_0_3", "tree": "(x_0_2 idiv x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 6 + 10 + 7 - 6 + 6 + 6 + 10 + 7 + 6 + 6 + 6 + 10 + 7 + 6 + 6 + 6 + 10 + 7 + 6 + 6 + 6 + 10 + 7 + 6 + 6 + 6", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 2 - 5 + 2 + 9 + 70 - 30 + 112 + 136 + 162 - 10 + 220 + 252 + 286 + 42 + 360 + 400 + 442 + 486 + 532 + 580 + 630 + 682 + 736 + 792 + 850 + 910", "x2": "mul sub idiv INT+ 1 0 sign mul n x_0_4 sub sign mod sign INT- 8 n n n", "tree": "(((10 idiv sign((n mul x_0_4))) sub (sign((sign(-8) mod n)) sub n)) mul n)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 9 + 13 - 31 + 57 - 119 + 233 - 471 + 937 - 1879 + 3753 - 7511 + 1 5017 - 3 39 + 6 73 - 12 151 + 24 297 - 48 599 + 96 1193 - 192 2391 + 384 4777 - 768 9559 + 1537 9113", "x2": "sub INT- 1 sub INT+ 4 sub sub mod n mod n sqr n x_0_1 x_0_1", "tree": "(-1 sub (4 sub (((n mod (n mod (n)**2)) sub x_0_1) sub x_0_1)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 6 - 3 - 6 + 1 - 19 - 39 - 55 - 63 - 100 - 139 - 176 - 207 - 269 - 335 - 401 - 463 - 558 - 659 - 762 - 863 - 999 - 1143 - 1291 - 1439 - 1624 - 1819", "x2": "mul sub x_0_4 sqr abs n sign n", "tree": "((x_0_4 sub (abs(n))**2) mul sign(n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 8 - 5 + 8 + 9 + 1 + 9 + 10 + 2 + 10 + 11 + 3 + 11 + 12 + 4 + 12 + 13 + 5 + 13 + 14 + 6 + 14 + 15 + 7 + 15 + 16", "x2": "add relu x_0_3 sqr abs idiv relu abs x_0_3 mul INT- 7 n", "tree": "(relu(x_0_3) add (abs((relu(abs(x_0_3)) idiv (-7 mul n))))**2)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "- 4 - 9 + 45 + 40 + 94 + 89 + 143 + 138 + 192 + 187 + 241 + 236 + 290 + 285 + 339 + 334 + 388 + 383 + 437 + 432 + 486 + 481 + 535 + 530", "x2": "add sqr INT+ 7 add x_0_2 relu idiv x_0_2 sqr add n INT+ 8", "tree": "((7)**2 add (x_0_2 add relu((x_0_2 idiv ((n add 8))**2))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 6 - 4 + 4 - 7 + 0 + 18 + 0 + 16 + 27 + 0 + 33 + 24 + 0 + 42 + 0 + 0 + 51 + 0 + 19 + 60 + 0 + 44 + 69 + 0 + 75 + 52", "x2": "relu mul idiv sub sub n sub INT- 8 x_0_3 x_0_4 n abs n", "tree": "relu(((((n sub (-8 sub x_0_3)) sub x_0_4) idiv n) mul abs(n)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 4 - 9 - 1 - 4 - 7 - 4 - 6 - 11 - 7 - 9 - 16 - 9 - 12 - 18 - 13 - 14 - 31 + 13 - 20 - 22 - 20 - 12 - 22 - 27", "x2": "sub idiv x_0_1 add idiv idiv INT+ 7 n add INT+ 1 0 n add x_0_2 mod sub n x_0_1 n n", "tree": "((x_0_1 idiv (((7 idiv n) idiv (10 add n)) add (x_0_2 add ((n sub x_0_1) mod n)))) sub n)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 5 - 8 - 21 - 80 - 395 - 2364 - 1 6541 - 13 2320 - 119 871 - 1190 8700 - 1 3099 5689 - 15 7194 8256 - 204 3532 7315 - 2860 9458 2396 - 4 2914 1873 5925 - 68 6626 9977 4784 - 1167 2658 9617 1311 - 2 1010 7861 3108 3580 - 39 9204 9364 9058 8001 - 798 4098 7298 1176 0 - 1 6766 6073 3260 4695 9979 - 36 8865 3613 1730 3311 9516 - 848 3903 3102 9797 6174 8845", "x2": "add n mul n x_0_1", "tree": "(n add (n mul x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 6 - 6 - 5 - 3 + 0 + 0 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 + 0 - 1 + 0 - 1 - 1 + 0 + 0 - 1", "x2": "mod n add x_0_1 mod INT- 2 sub INT- 2 add mul idiv n n relu x_0_1 INT+ 3", "tree": "(n mod (x_0_1 add (-2 mod (-2 sub (((n idiv n) mul relu(x_0_1)) add 3)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 7 - 6 + 3 + 0 + 16 + 0 + 4 + 0 + 144 + 0 + 0 + 0 + 484 + 0 + 0 + 0 + 1296 + 0 + 0 + 0 + 2916 + 0 + 0 + 0 + 5776", "x2": "abs sqr idiv relu mul mod relu n x_0_4 n INT- 9", "tree": "abs(((relu(((relu(n) mod x_0_4) mul n)) idiv -9))**2)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "4"}
{"x1": "- 10 + 7 + 4 - 7 - 2 - 4 - 3 - 5 - 4 - 6 - 5 - 7 - 6 - 8 - 7 - 9 - 8 - 10 - 9 - 11 - 10 - 12 - 11 - 13", "x2": "mul sign INT+ 4 sub abs x_0_1 add mul sub n n add x_0_2 x_0_2 add n relu x_0_2", "tree": "(sign(4) mul (abs(x_0_1) sub (((n sub n) mul (x_0_2 add x_0_2)) add (n add relu(x_0_2)))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 2 + 6 + 81 + 110 + 2341 + 992 + 6 9285 + 3 9590 + 203 9041 + 85 1440 + 6031 9913 + 3477 6854 + 17 7482 709 + 7 3151 5280 + 525 1310 6221 + 305 6764 8070 + 1 5448 2553 8857 + 6277 9609 7072 + 45 7169 7006 9009 + 26 8830 8715 7238 + 1344 6260 1491 3485 + 538 1334 19 6816 + 3 9800 6470 4720 8277 + 2 3656 6450 4130 4358", "x2": "add abs add add sub mul mul x_0_2 INT- 5 INT+ 6 n INT+ 9 x_0_1 sqr n", "tree": "(abs((((((x_0_2 mul -5) mul 6) sub n) add 9) add x_0_1)) add (n)**2)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 6 - 7 + 0 - 1 - 2 - 3 - 4 - 5 - 6 - 7 + 0 - 1 - 2 - 3 - 4 - 5 - 6 - 7 + 0 - 1 - 2 - 3", "x2": "mod sub INT- 5 n mod abs relu n sub INT- 8 n", "tree": "((-5 sub n) mod (abs(relu(n)) mod (-8 sub n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 6 + 9 + 8 + 3 - 9 - 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1", "x2": "sign add mod sign abs mul n INT- 4 sqr sqr abs x_0_3 idiv x_0_5 x_0_6", "tree": "sign(((sign(abs((n mul -4))) mod ((abs(x_0_3))**2)**2) add (x_0_5 idiv x_0_6)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 8 + 9 - 5 + 7 + 0 + 8 + 9 + 0 + 7 + 0 + 8 + 9 + 0 + 7 + 0 + 8 + 9 + 0 + 7 + 0 + 8 + 9 + 0 + 7 + 0 + 8 + 9", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2", "x2": "idiv abs add INT- 5 abs n INT+ 7", "tree": "(abs((-5 add abs(n))) idiv 7)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 9 - 3 + 1 - 2 - 2 - 4 - 6 - 4 - 2 - 2 - 4 - 6 - 4 - 2 - 2 - 4 - 6 - 4 - 2 - 2 - 4 - 6 - 4 - 2 - 2", "x2": "mod sub INT- 2 relu idiv x_0_1 add x_0_2 idiv x_0_4 x_0_4 INT- 7", "tree": "((-2 sub relu((x_0_1 idiv (x_0_2 add (x_0_4 idiv x_0_4))))) mod -7)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 10 - 6 - 1 + 3 - 3 + 2 - 19 - 19 - 8 - 9 + 6 + 11 - 21 - 20 - 24 - 30 + 17 + 21 - 7 + 0 - 51 - 61 + 14 + 11 + 34 + 51 - 75", "x2": "sub add INT- 1 0 x_0_6 x_0_4", "tree": "((-10 add x_0_6) sub x_0_4)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 4 + 5 + 0 - 27 + 36 + 81 - 117 - 243 + 81 - 666 - 999 - 648 - 9 - 1512 - 162 - 2142 - 1917 - 1377 - 135 - 666 - 3402 - 3060 - 3447 - 405 - 504", "x2": "mul add mod x_0_3 sqr n INT- 9 INT- 9", "tree": "(((x_0_3 mod (n)**2) add -9) mul -9)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 0 - 7 + 0 + 1 + 0 + 8 + 0 + 6 + 0 + 8 + 0 + 4 + 0 + 2 + 0 + 6 + 0 + 8 + 0 + 4 + 0 + 2 + 0 + 6", "x2": "mod add relu mod sub x_0_2 n n mul INT+ 7 relu relu x_0_2 sub x_0_1 INT- 1 0", "tree": "((relu(((x_0_2 sub n) mod n)) add (7 mul relu(relu(x_0_2)))) mod (x_0_1 sub -10))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 11 + 14 + 18 + 23 + 29 + 36 + 44 + 53 + 63 + 74 + 86 + 99 + 113 + 128 + 144 + 161 + 179 + 198 + 218 + 239 + 261 + 284", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 7 - 6 - 1 - 15 - 2 + 91 + 87 + 219 - 59 - 95 - 227 + 51 + 997 + 1749 + 3701 - 1005 - 1757 - 3709 + 997 + 2 2938 + 4 2465 + 8 4440 - 2 2946 - 4 2473 - 8 4448", "x2": "add sub mul n relu relu sub relu add INT+ 1 0 mod n INT- 9 x_0_4 x_0_3 INT- 8", "tree": "(((n mul relu(relu((relu((10 add (n mod -9))) sub x_0_4)))) sub x_0_3) add -8)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 60 + 1800 - 7 2000 + 360 0 - 2 1600 0 + 151 2000 0 - 1 2096 0 0 + 108 8640 0 0 - 1 886 4000 0 0 + 119 7504 0 0 0 - 1 4370 480 0 0 0 + 186 8106 2400 0 0 0 - 2 6153 4873 6000 0 0 0 + 392 3023 1040 0 0 0 0 - 6 2768 3696 6400 0 0 0 0 + 1067 622 8428 8000 0 0 0 0 - 19 2071 2111 7184 0 0 0 0 0 + 3649 3530 1226 4960 0 0 0 0 0 - 72 9870 6024 5299 2000 0 0 0 0 0 + 1 5327 2826 5151 2832 0 0 0 0 0 0 - 337 2002 1833 3282 3040 0 0 0 0 0 0 + 7 7556 502 1665 4929 9200 0 0 0 0 0 0", "x2": "mul INT- 1 0 mul n x_0_1", "tree": "(-10 mul (n mul x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 + 6 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 1 + 1 + 2 + 1", "x2": "relu sub idiv sub sub n relu add x_0_2 sub INT+ 8 INT- 9 idiv INT- 1 0 n INT+ 2 x_0_1", "tree": "relu(((((n sub relu((x_0_2 add (8 sub -9)))) sub (-10 idiv n)) idiv 2) sub x_0_1))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 7 - 9 - 30 - 52 - 175 - 348 - 1274 - 2848 - 1 1547 - 2 8580 - 12 7138 - 34 3104 - 165 2963 - 480 3652 - 2479 4670 - 7685 8688 - 4 2150 9679 - 13 8345 6708 - 80 868 4262 - 276 6913 4560 - 1681 8236 9943 - 6087 2096 804 - 3 8681 9450 9218 - 14 6093 305 9872", "x2": "add idiv mod idiv INT+ 4 add INT- 1 n x_0_1 x_0_1 mul sub x_0_2 relu n n", "tree": "((((4 idiv (-1 add n)) mod x_0_1) idiv x_0_1) add ((x_0_2 sub relu(n)) mul n))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 1 0 + 16 0 + 81 0 + 256 0 + 625 0 + 1296 0 + 2401 0 + 4096 0 + 6561 0 + 1 0 0 + 1 4641 0 + 2 736 0 + 2 8561 0 + 3 8416 0 + 5 625 0 + 6 5536 0 + 8 3521 0 + 10 4976 0 + 13 321 0 + 16 0 0 + 19 4481 0", "x2": "sqr sqr mul sub n sign relu abs n INT- 1 0", "tree": "((((n sub sign(relu(abs(n)))) mul -10))**2)**2", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 32 + 72 + 128 + 200 + 288 + 392 + 512 + 648 + 800 + 968 + 1152 + 1352 + 1568 + 1800 + 2048 + 2312 + 2592 + 2888 + 3200 + 3528 + 3872", "x2": "relu abs mul mul n n relu sub idiv sign n INT- 5 INT- 9", "tree": "relu(abs(((n mul n) mul relu(((sign(n) idiv -5) sub -9)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6 - 5 - 4 - 3 - 2 - 1 + 0 - 6", "x2": "mod abs n add INT- 8 sign n", "tree": "(abs(n) mod (-8 add sign(n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 9 - 9 + 6 + 8 - 10 + 5 + 7 - 11 + 4 + 6 - 12 + 3 + 5 - 13 + 2 + 4 - 14 + 1 + 3 - 15 + 0 + 2 - 16 - 1", "x2": "sub x_0_3 relu sign INT+ 1", "tree": "(x_0_3 sub relu(sign(1)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 1 - 3 - 4 - 10 + 1 + 3 + 4 + 10 + 1 + 3 + 4 + 10 + 1 + 3 + 4 + 10 + 1 + 3 + 4 + 10 + 1 + 3 + 4 + 10 + 1 + 3", "x2": "abs x_0_4", "tree": "abs(x_0_4)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "+ 7 - 10 - 1 + 0 - 9 - 3 + 14 + 9 + 20 + 14 + 26 + 20 + 31 + 25 + 36 + 30 + 41 + 35 + 46 + 40 + 51 + 45 + 56 + 50 + 61 + 55 + 66 + 60", "x2": "sub add abs x_0_2 INT+ 5 idiv x_0_6 relu relu add mul INT- 7 INT- 9 sqr abs INT+ 8", "tree": "((abs(x_0_2) add 5) sub (x_0_6 idiv relu(relu(((-7 mul -9) add (abs(8))**2)))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 32 + 243 + 1024 + 3125 + 7776 + 1 6807 + 3 2768 + 5 9049 + 10 0 + 16 1051 + 24 8832 + 37 1293 + 53 7824 + 75 9375 + 104 8576 + 141 9857 + 188 9568 + 247 6099 + 320 0 + 408 4101 + 515 3632", "x2": "mul sqr sqr n n", "tree": "(((n)**2)**2 mul n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 10 - 7 - 8 + 10 - 1 + 2 - 10 - 10 + 8 - 4 - 2 - 6 - 4 + 4 - 6 - 10 - 10 + 0 + 0 - 4 - 18 - 16 - 4 - 2 - 4 - 40 - 30", "x2": "mul mod n add x_0_5 INT- 5 INT+ 2", "tree": "((n mod (x_0_5 add -5)) mul 2)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "- 2 - 1 + 2 + 3 + 4 + 9 + 4 + 9 + 10 + 11 + 14 + 15 + 16 + 21 + 16 + 21 + 22 + 23 + 26 + 27 + 28 + 33 + 28 + 33", "x2": "sub x_0_2 mod mul add INT- 7 n n INT- 8", "tree": "(x_0_2 sub (((-7 add n) mul n) mod -8))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 9 - 9 - 8 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625", "x2": "add sqr n sub mod idiv INT+ 4 x_0_3 INT- 1 relu INT- 8", "tree": "((n)**2 add (((4 idiv x_0_3) mod -1) sub relu(-8)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 1 + 5 + 15 + 60 + 300 + 1800 + 1 2600 + 10 800 + 90 7200 + 907 2000 + 9979 2000 + 11 9750 4000 + 155 6755 2000 + 2179 4572 8000 + 3 2691 8592 0 + 52 3069 7472 0 + 889 2185 7024 0 + 1 6005 9342 6432 0 + 30 4112 7510 2208 0 + 608 2255 204 4160 0 + 1 2772 7355 4292 7360 0 + 28 1000 1819 4440 1920 0 + 646 3004 1847 2124 4160 0 + 1 5511 2100 4333 985 9840 0", "x2": "mul x_0_1 mul n sign sign sqr sign mul INT+ 5 add idiv x_0_2 n INT+ 1", "tree": "(x_0_1 mul (n mul sign(sign((sign((5 mul ((x_0_2 idiv n) add 1))))**2))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 8 - 6 - 2 - 3 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1 - 1 - 1 + 1 - 1", "x2": "sign idiv mul x_0_4 n add sqr sub add INT- 8 INT+ 5 sqr INT+ 2 n", "tree": "sign(((x_0_4 mul n) idiv ((((-8 add 5) sub (2)**2))**2 add n)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 10 + 0 + 33 + 4 + 0 + 0 + 7 + 8 + 0 + 0 + 11 + 12 + 0 + 0 + 15 + 16 + 0 + 0 + 19 + 20 + 0 + 0 + 23 + 24", "x2": "relu sub n mul n x_0_2", "tree": "relu((n sub (n mul x_0_2)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 4 + 36 - 576 + 1 4400 - 51 8400 + 2540 1600 - 16 2570 2400 + 1316 8189 4400 - 13 1681 8944 0 + 1593 3509 2224 0 - 22 9442 5328 256 0 + 3877 5788 436 3264 0 - 76 5 4456 5519 9744 0 + 1 7100 1225 2724 1994 2400 0 - 437 7631 3669 7395 525 4400 0 + 12 6513 5465 554 7170 1852 1600 0 - 4099 389 677 9728 3140 99 8400 0 + 147 9753 453 4748 1921 3543 6042 2400 0 - 5 9190 1218 1389 9276 8541 7441 6896 0 0 + 2610 2843 7199 2958 1092 6909 1785 1136 0 0 - 126 3377 6360 4459 1724 8862 4042 3994 9824 0 0 + 6 6832 6769 4675 8902 2464 8211 8429 3345 6896 0 0", "x2": "mul sign INT- 5 mul sqr n x_0_1", "tree": "(sign(-5) mul ((n)**2 mul x_0_1))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 16 + 32 + 48 + 64 + 80 + 104 + 133 + 164 + 197 + 232 + 269 + 308 + 349 + 392 + 437 + 484 + 533 + 584 + 637 + 692 + 749 + 808", "x2": "sub relu sub sqr n mul abs INT- 7 INT+ 4 mul mul INT- 2 n INT+ 8", "tree": "(relu(((n)**2 sub (abs(-7) mul 4))) sub ((-2 mul n) mul 8))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 1 - 3 + 10 + 10 + 7 - 2 + 2 + 10 + 7 - 2 + 2 + 10 + 7 - 2 + 2 + 10 + 7 - 2 + 2 + 10 + 7 - 2 + 2 + 10 + 7", "x2": "add idiv add n mul relu INT- 7 idiv INT- 7 x_0_4 add sub n add x_0_4 x_0_2 n x_0_4", "tree": "(((n add (relu(-7) mul (-7 idiv x_0_4))) idiv ((n sub (x_0_4 add x_0_2)) add n)) add x_0_4)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 8 - 8 + 10 - 7 + 15 - 14 + 23 - 24 + 30 - 39 + 44 - 62 + 68 - 92 + 107 - 136 + 169 - 204 + 261 - 311 + 397 - 480 + 601 - 741 + 912 - 1138", "x2": "sub x_0_2 mod x_0_5 x_0_1", "tree": "(x_0_2 sub (x_0_5 mod x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "- 1 + 0 + 10 - 4 + 1 + 61 - 28 + 9 + 550 - 280 + 100 + 6601 - 3640 + 1401 + 9 9016 - 5 8240 + 2 3818 + 178 2289 - 110 6560 + 47 6361 + 3742 8070 - 2434 4320 + 1095 6304 + 8 9827 3681 - 6 860 8000", "x2": "add mul x_0_3 n relu sign x_0_3", "tree": "((x_0_3 mul n) add relu(sign(x_0_3)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 5 + 10 - 3 - 4 + 218 + 219 + 218 + 216 + 214 + 211 + 207 + 202 + 196 + 189 + 181 + 172 + 162 + 151 + 139 + 126 + 112 + 97 + 81 + 64 + 46 + 27", "x2": "add INT+ 7 mod sub add idiv x_0_4 sqr sub x_0_2 n x_0_1 n add x_0_1 sqr add n x_0_3", "tree": "(7 add ((((x_0_4 idiv ((x_0_2 sub n))**2) add x_0_1) sub n) mod (x_0_1 add ((n add x_0_3))**2)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 5 - 2 + 9 + 3 - 4 + 4 + 13 - 1 + 152 + 1 - 139 - 1 + 291 + 1 + 8 4251 - 1 - 8 3960 + 1 + 16 8211 - 1 + 282 9468 8350 + 1 - 282 9452 139 - 1 + 565 8920 8489", "x2": "sub mod x_0_4 abs sqr x_0_2 x_0_2", "tree": "((x_0_4 mod abs((x_0_2)**2)) sub x_0_2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 2 - 2 - 5 - 8 + 14 + 33 + 45 - 92 - 209 - 247 + 604 + 1318 + 1336 - 3949 - 8252 - 7049 + 2 5738 + 5 1330 + 3 5969 - 16 7172 - 31 7278 - 17 4604 + 108 1961 + 194 9061 + 78 307 - 697 7352", "x2": "sub mul INT- 6 x_0_3 idiv add x_0_2 idiv x_0_4 n INT+ 4", "tree": "((-6 mul x_0_3) sub ((x_0_2 add (x_0_4 idiv n)) idiv 4))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 2 - 6 + 5 - 9 + 0 + 4 + 11 + 43 + 32 + 88 + 7 + 23 + 128 + 1856 + 1031 + 7751 + 56 + 536 + 1 6391 + 344 4743 + 106 2968 + 6007 8008 + 3143 + 28 7303 + 2 6866 4888 + 11 8662 5433 6056 + 1 1299 96 9031 + 3609 3670 4524 8071", "x2": "add INT+ 7 sqr x_0_6", "tree": "(7 add (x_0_6)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "- 9 + 2 + 0 + 1 + 1 + 0 + 1 + 0 + 0 + 1 + 1 + 0 + 1 + 0 + 0 + 1 + 1 + 0 + 1 + 0 + 0 + 1 + 1", "x2": "mod n sub idiv mul abs INT- 1 add n relu add n n n relu x_0_1", "tree": "(n mod (((abs(-1) mul (n add relu((n add n)))) idiv n) sub relu(x_0_1)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 9 - 7 - 4 + 0 + 5 + 11 + 18 + 26 + 35 + 45 + 56 + 68 + 81 + 95 + 110 + 126 + 143 + 161 + 180 + 200 + 221 + 243 + 266", "x2": "add n x_0_1", "tree": "(n add x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 5 - 3 - 6 - 4 - 7 - 5 - 8 - 6 - 9 - 7 - 10 - 8 - 11 - 9 - 12 - 10 - 13 - 11 - 14 - 12 - 15 - 13 - 16", "x2": "sub sub abs x_0_1 INT+ 6 n", "tree": "((abs(x_0_1) sub 6) sub n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 4 + 2 + 6 + 5 - 5 - 2 - 4 - 15 - 15 - 18 - 30 - 33 - 37 - 50 - 55 - 61 - 75 - 82 - 89 - 105 - 114 - 122 - 139 - 151 - 160 - 178", "x2": "sub relu INT- 5 sub abs sub x_0_3 relu n sub idiv x_0_4 n idiv n INT+ 3", "tree": "(relu(-5) sub (abs((x_0_3 sub relu(n))) sub ((x_0_4 idiv n) sub (n idiv 3))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "4"}
{"x1": "+ 4 - 8 - 7 - 8 + 6 + 6 + 5 + 6 + 8 + 8 + 7 + 8 + 10 + 10 + 9 + 10 + 12 + 12 + 11 + 12 + 14 + 14 + 13 + 14 + 16 + 16", "x2": "abs mul sub INT+ 2 add x_0_4 INT+ 4 INT+ 1", "tree": "abs(((2 sub (x_0_4 add 4)) mul 1))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 10 + 2 - 10 - 7 + 1 + 3 - 17 + 4 - 6 - 24 + 5 - 2 - 41 + 10 - 7 - 65 + 16 - 8 - 106 + 27 - 14 - 171 + 44 - 21 - 277 + 72 - 34 - 448", "x2": "add idiv INT- 1 x_0_5 add x_0_3 add x_0_6 INT+ 1", "tree": "((-1 idiv x_0_5) add (x_0_3 add (x_0_6 add 1)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "- 2 - 2 + 0 - 2 - 2 + 0 - 2 - 2 + 0 - 2 - 2 + 0 - 2 - 2 + 0 - 2 - 2 + 0 - 2 - 2 + 0 - 2", "x2": "mod sqr n INT- 3", "tree": "((n)**2 mod -3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 1 - 4 - 9 + 2 + 0 - 3 - 14 + 0 + 0 - 8 - 30 + 0 + 0 - 14 - 12 + 0 + 0 - 15 - 24 + 0 + 0 - 24 + 0 + 0 + 0", "x2": "mul mod x_0_4 n idiv x_0_4 INT+ 5", "tree": "((x_0_4 mod n) mul (x_0_4 idiv 5))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 3 - 6 + 60 - 240 + 600 - 600 - 3000 + 2 1000 - 7 5000 + 16 5000 - 7 5000 - 127 5000 + 712 5000 - 2287 5000 + 4312 5000 + 1312 5000 - 4 9687 5000 + 23 5312 5000 - 67 9687 5000 + 104 5312 5000 + 157 312 5000 - 1830 4687 5000 + 7582 312 5000 - 1 9605 4687 5000", "x2": "add mul mod INT+ 3 INT- 8 x_0_1 mul INT- 1 0 x_0_2", "tree": "(((3 mod -8) mul x_0_1) add (-10 mul x_0_2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 2 - 4 - 8 + 2 - 4 - 8 + 2 - 4 - 8 + 2 - 4 - 8 + 2 - 4 - 8 + 2 - 4 - 8 + 2 - 4 - 8 + 2 - 4 - 8 + 2", "x2": "mul x_0_3 relu relu abs INT- 1", "tree": "(x_0_3 mul relu(relu(abs(-1))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 5 + 36 + 147 + 640 + 3265 + 1 9668 + 13 7767 + 110 2240 + 992 277 + 9920 2900 + 10 9123 2043 + 130 9478 4672 + 1702 3220 905 + 2 3832 5081 2852 + 35 7487 6219 2975 + 571 9801 9508 7808 + 9723 6633 1649 2957 + 17 5025 9396 9687 3460 + 332 5492 8542 4059 5987 + 6650 9857 848 1192 0 + 13 9670 6998 7810 5032 273 + 307 2755 3973 1831 704 6292 + 7067 3374 1383 2114 6206 5015", "x2": "mul n add mul idiv INT- 3 sqr mul INT+ 7 add sub n INT- 6 INT- 4 INT- 6 add INT+ 7 abs x_0_1", "tree": "(n mul (((-3 idiv ((7 mul ((n sub -6) add -4)))**2) mul -6) add (7 add abs(x_0_1))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 2 - 8 + 7 + 7 - 9 - 9 + 367 - 9 - 9 + 720 - 9 - 9 + 882 - 9 - 9 + 1044 - 9 - 9 + 1206 - 9 - 9 + 1368 - 9 - 9 + 1530 - 9", "x2": "add INT- 9 relu mul x_0_5 sub add mul n INT- 6 x_0_4 mod relu INT+ 6 n", "tree": "(-9 add relu((x_0_5 mul (((n mul -6) add x_0_4) sub (relu(6) mod n)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 1 + 0 + 1 + 3 + 0 + 2 + 5 + 0 + 3 + 7 + 0 + 4 + 9 + 0 + 5 + 11 + 0 + 6 + 13 + 0 + 7", "x2": "mod idiv mul abs sqr n INT+ 1 INT+ 3 n", "tree": "(((abs((n)**2) mul 1) idiv 3) mod n)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 10 - 7 + 4 + 9 + 22 + 29 + 44 + 53 + 70 + 81 + 100 + 113 + 134 + 149 + 172 + 189 + 214 + 233 + 260 + 281 + 310 + 333 + 364 + 389", "x2": "add x_0_2 sub add n abs relu n INT- 8", "tree": "(x_0_2 add ((n add abs(relu(n))) sub -8))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 - 4 - 9 - 2 - 5 - 6 - 1 - 2 - 5 + 0 - 1 - 6 - 7 + 0 - 5 - 6 - 1 - 2 - 5 + 0 - 1 - 6 - 7", "x2": "mod mul sub x_0_1 sub sqr n abs abs add INT+ 9 n mul n n INT- 1 0", "tree": "(((x_0_1 sub ((n)**2 sub abs(abs((9 add n))))) mul (n mul n)) mod -10)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 10 + 50 - 50 + 250 - 250 + 1250 - 1250 + 6250 - 6250 + 3 1250 - 3 1250 + 15 6250 - 15 6250 + 78 1250 - 78 1250 + 390 6250 - 390 6250 + 1953 1250 - 1953 1250 + 9765 6250 - 9765 6250 + 4 8828 1250 - 4 8828 1250", "x2": "sub relu add mul x_0_1 INT- 5 x_0_1 x_0_1", "tree": "(relu(((x_0_1 mul -5) add x_0_1)) sub x_0_1)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "relu relu sqr n", "tree": "relu(relu((n)**2))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 4 - 9 - 1 + 8 + 14 + 7 + 15 + 22 + 16 + 25 + 33 + 28 + 38 + 47 + 43 + 54 + 64 + 61 + 73 + 84 + 82 + 95 + 107 + 106 + 120", "x2": "add abs n abs add x_0_3 idiv n add x_0_1 abs INT+ 1 0", "tree": "(abs(n) add abs((x_0_3 add (n idiv (x_0_1 add abs(10))))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 7 - 10 + 4 - 1 + 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1", "x2": "idiv n add n add x_0_1 sqr x_0_4", "tree": "(n idiv (n add (x_0_1 add (x_0_4)**2)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 7 - 5 - 2 + 2 + 7 + 13 + 20 + 28 + 37 + 47 + 58 + 70 + 83 + 97 + 112 + 128 + 145 + 163 + 182 + 202 + 223 + 245 + 268", "x2": "add add n mul n INT+ 1 sub x_0_1 n", "tree": "((n add (n mul 1)) add (x_0_1 sub n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 1 + 6 - 8 - 8 + 60 - 96 - 112 + 960 - 1728 - 2240 + 2 1120 - 4 1472 - 5 8240 + 59 1360 - 124 4160 - 186 3680 + 2010 6240 - 4478 9760 - 7081 9840 + 8 424 9600 - 18 8116 9920 - 31 1607 2960 + 369 9548 1600 - 902 9615 6160 - 1558 364 8000", "x2": "mul mul x_0_3 mod INT+ 7 INT+ 5 n", "tree": "((x_0_3 mul (7 mod 5)) mul n)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 10 - 1 + 1 + 8 + 11 + 0 + 2 + 9 + 12 + 1 + 3 + 10 + 13 + 2 + 4 + 11 + 14 + 3 + 5 + 12 + 15 + 4 + 6 + 13 + 16", "x2": "add add INT+ 2 x_0_4 sign mul add INT- 1 0 sign mod relu n n n", "tree": "((2 add x_0_4) add sign(((-10 add sign((relu(n) mod n))) mul n)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 4 + 6 + 3 + 1 + 4 + 2 + 5 + 3 + 6 + 4 + 7 + 5 + 8 + 6 + 9 + 7 + 10 + 8 + 11 + 9 + 12 + 10 + 13", "x2": "abs sub x_0_1 abs n", "tree": "abs((x_0_1 sub abs(n)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "+ 3 + 7 + 10 + 0 + 0 + 0 + 7 + 8 + 9 + 31 + 35 + 0 + 0 + 0 + 15 + 16 + 17 + 63 + 67 + 0 + 0 + 0 + 23 + 24 + 25", "x2": "abs relu sub n mul add INT- 7 sqr sub n x_0_2 x_0_3", "tree": "abs(relu((n sub ((-7 add ((n sub x_0_2))**2) mul x_0_3))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784 + 841 + 900 + 961", "x2": "sqr sub INT- 9 n", "tree": "((-9 sub n))**2", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 7 + 24 + 132 + 112 + 580 + 1416 + 2716 + 480 + 1260 + 2360 + 3828 + 5712 + 8060 + 1 920 + 1 4340 + 1 8368 + 2 3052 + 2 8440 + 3 4580 + 4 1520 + 4 9308 + 5 7992 + 6 7620", "x2": "mul add INT- 4 mul mul n INT+ 8 add idiv x_0_1 x_0_1 abs mod INT- 8 n n", "tree": "((-4 add ((n mul 8) mul ((x_0_1 idiv x_0_1) add abs((-8 mod n))))) mul n)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 8 + 3 - 1449 - 1044 + 11 6568 + 8 3763 - 944 2809 - 678 5604 + 7 6486 6728 + 5 4963 3123 - 619 5420 5769 - 445 2028 3764 + 5 182 9066 6488 + 3 6061 4298 4083 - 406 4815 4398 6329 - 292 975 8171 1524 + 3 2925 50 6289 1848 + 2 3659 9041 1863 2643 - 266 6925 4100 9424 489 - 191 6452 2336 924 4884 + 2 1602 958 2176 3347 8808 + 1 5523 2630 9223 4883 4803 - 174 9769 7615 6283 1178 4249 - 125 7384 3104 7102 5561 9844", "x2": "sub INT+ 9 mul add x_0_2 INT+ 1 0 sqr INT+ 9", "tree": "(9 sub ((x_0_2 add 10) mul (9)**2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 9 - 9 + 2 - 3 + 4 - 1 + 9 + 1 - 7 + 3 - 1 + 9 + 1 - 7 + 3 - 1 + 9 + 1 - 7 + 3 - 1 + 9 + 1 - 7", "x2": "sub sign relu x_0_1 mul sign mod x_0_2 INT+ 6 idiv INT+ 8 x_0_1", "tree": "(sign(relu(x_0_1)) sub (sign((x_0_2 mod 6)) mul (8 idiv x_0_1)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 1 + 7 - 3 - 1 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 6 - 6 - 7 - 7 - 8 - 8 - 9 - 9 - 10 - 10 - 6 - 6 - 7", "x2": "sub mod mod x_0_2 mod mul sign add mul INT+ 4 n x_0_4 INT- 5 INT- 8 x_0_1 INT+ 6", "tree": "(((x_0_2 mod ((sign(((4 mul n) add x_0_4)) mul -5) mod -8)) mod x_0_1) sub 6)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 7 + 9 - 7 - 10 + 23 - 8 - 13 + 54 - 7 - 16 + 119 - 2 - 19 + 252 + 11 - 22 + 521 + 40 - 25 + 1062 + 101 - 28 + 2147 + 226 - 31", "x2": "add add n x_0_3 x_0_3", "tree": "((n add x_0_3) add x_0_3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 64 + 4 + 0 + 4 + 16 + 25 + 36 + 49 + 64 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr sub idiv INT+ 9 n n", "tree": "(((9 idiv n) sub n))**2", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 10 - 20 - 60 - 240 - 1200 - 7200 - 5 400 - 40 3200 - 362 8800 - 3628 8000 - 3 9916 8000 - 47 9001 6000 - 622 7020 8000 - 8717 8291 2000 - 13 767 4368 0 - 209 2278 9888 0 - 3556 8742 8096 0 - 6 4023 7370 5728 0 - 121 6451 40 8832 0 - 2432 9020 817 6640 0 - 5 1090 9421 7170 9440 0 - 112 4000 7277 7760 7680 0 - 2585 2016 7388 8497 6640 0", "x2": "mul x_0_1 n", "tree": "(x_0_1 mul n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 10 + 9 - 4 + 9 + 2 + 9 + 8 + 15 + 14 + 21 + 20 + 27 + 26 + 33 + 32 + 39 + 38 + 45 + 44 + 51 + 50 + 57 + 56 + 63", "x2": "add relu mod INT+ 6 relu x_0_1 x_0_2", "tree": "(relu((6 mod relu(x_0_1))) add x_0_2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 7 + 7 + 3 + 10 + 8 + 0 + 0 + 36 + 4 + 81 + 49 + 0 + 0 + 1225 + 9 + 6400 + 2304 + 0 + 0 + 149 8176 + 64 + 4094 7201 + 530 3809 + 0 + 0 + 2 2445 2833 625 + 3969", "x2": "sqr relu add sign sub mod n n INT+ 8 x_0_6", "tree": "(relu((sign(((n mod n) sub 8)) add x_0_6)))**2", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 4 + 5 + 2 + 3 + 3 + 3 + 4 + 5 + 5 + 5 + 6 + 7 + 7 + 7 + 8 + 9 + 9 + 9 + 10 + 11 + 11 + 11 + 12 + 13", "x2": "mod sub n x_0_2 n", "tree": "((n sub x_0_2) mod n)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 7 + 5 - 7 + 9 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1", "x2": "sign mul sub INT- 8 x_0_4 x_0_2", "tree": "sign(((-8 sub x_0_4) mul x_0_2))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 4 + 7 + 11 + 16 + 22 + 29 + 37 + 46 + 56 + 67 + 79 + 92 + 106 + 121 + 137 + 154 + 172 + 191 + 211 + 232 + 254 + 277", "x2": "add x_0_1 n", "tree": "(x_0_1 add n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 9 + 4 - 33 - 50 - 29 + 226 + 395 + 256 - 2265 - 4350 - 3077 + 2 9440 + 6 895 + 4 6150 - 47 1045 - 103 5220 - 83 705 + 894 9850 + 2070 4395 + 1744 4800 - 1 9689 6705 - 4 7620 1090 - 4 1867 5205 + 49 2241 7620", "x2": "sub INT- 5 mul n x_0_3", "tree": "(-5 sub (n mul x_0_3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 2 - 3 + 10 - 8 - 2 - 3 + 10 - 8 - 2 - 3 + 10 - 8 - 2 - 3 + 10 - 8 - 2 - 3 + 10 - 8 - 2 - 3 + 10 - 8 - 2 - 3", "x2": "idiv x_0_4 sign n", "tree": "(x_0_4 idiv sign(n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 10 - 7 + 8 + 353 + 458 + 38 + 818 + 1 5923 + 2 1428 + 1 7633 + 5 8238 + 73 4168 + 102 2498 + 152 7653 + 364 3208 + 3456 5213 + 4965 5618 + 1 330 9598 + 2 1359 9978 + 16 5874 4183 + 24 4810 2788 + 63 767 6093 + 120 6010 1798 + 809 5116 4328 + 1222 2472 7258", "x2": "sub x_0_2 mul mul INT+ 5 INT- 9 x_0_4", "tree": "(x_0_2 sub ((5 mul -9) mul x_0_4))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 1 + 8 - 7 - 1 - 10 - 2 - 11 - 6 - 12 - 10 - 14 - 11 - 17 - 14 - 19 - 10 - 23 - 14 - 21 - 10 - 23 - 10 - 15 - 10 - 18 - 8", "x2": "add INT- 1 0 mod add INT+ 3 mod x_0_3 n add add x_0_2 x_0_4 n", "tree": "(-10 add ((3 add (x_0_3 mod n)) mod ((x_0_2 add x_0_4) add n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "- 2 + 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764 + 1936 + 2116", "x2": "mul sub sqr abs n abs sub x_0_1 x_0_1 abs mod INT- 5 sqr INT- 3", "tree": "(((abs(n))**2 sub abs((x_0_1 sub x_0_1))) mul abs((-5 mod (-3)**2)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 10 + 4 + 10 - 75 + 65 + 1425 - 579 + 1862 + 970 - 160 + 219 + 12 - 35 + 12 + 27 - 188 + 151 + 3258 - 1236 + 3985 + 1972 - 311 + 419 + 21 - 61", "x2": "idiv mul sub n sub n sub sign x_0_3 add n mul relu abs n INT+ 1 0 x_0_2 x_0_4", "tree": "(((n sub (n sub (sign(x_0_3) sub (n add (relu(abs(n)) mul 10))))) mul x_0_2) idiv x_0_4)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 4 - 7 + 8 - 8 + 34 + 59 + 24 + 32 + 70 + 125 + 130 + 71 + 92 + 220 + 300 + 209 + 100 + 246 + 514 + 490 + 190 + 133 + 638 + 1001 + 536 - 72", "x2": "add add sub sqr n INT+ 6 sub x_0_5 x_0_2 mod abs x_0_5 add relu n INT+ 2", "tree": "((((n)**2 sub 6) add (x_0_5 sub x_0_2)) add (abs(x_0_5) mod (relu(n) add 2)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 10 + 5 + 1 + 44 + 30 + 12 + 315 + 248 + 117 + 3160 + 2739 + 1416 + 4 1093 + 3 8360 + 2 1255 + 65 7504 + 65 2137 + 38 2608 + 1249 2595 + 1304 2760 + 803 4789 + 2 7483 7112 + 2 9998 3503 + 1 9283 4960 + 68 7092 7825", "x2": "abs add mul x_0_3 n n", "tree": "abs(((x_0_3 mul n) add n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 + 7 + 8 + 8 + 9 + 9 + 10 + 10 + 11 + 11 + 12", "x2": "relu sub n mod x_0_1 n", "tree": "relu((n sub (x_0_1 mod n)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 3 + 10 + 6 + 3 - 7 - 3 + 0 + 3 + 3 + 3 + 0 + 0 + 0 + 3 + 3 + 3 + 0 + 0 + 0 + 3 + 3 + 3 + 0 + 0 + 0", "x2": "sub INT+ 3 relu relu x_0_3", "tree": "(3 sub relu(relu(x_0_3)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 3 - 5 - 8 - 12 - 17 - 23 - 30 - 38 - 47 - 57 - 68 - 80 - 93 - 107 - 122 - 138 - 155 - 173 - 192 - 212 - 233 - 255 - 278", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 6 + 2 - 7 + 1 - 8 + 0 - 9 - 1 - 10 - 2 - 11 - 3 - 12 - 4 - 13 - 5 - 14 - 6 - 15 - 7 - 16 - 8", "x2": "sub sub INT- 1 n x_0_1", "tree": "((-1 sub n) sub x_0_1)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 10 + 4 + 10 + 1 - 3 - 3 + 167 + 208 + 265 + 345 + 428 + 515 + 440 + 502 + 556 + 595 + 639 + 687 + 905 + 994 + 1099 + 1227 + 1358 + 1493 + 1466 + 1576 + 1678 + 1765", "x2": "sub mod INT- 5 sqr mod INT- 1 abs mul n INT- 2 add n x_0_6", "tree": "((-5 mod ((-1 mod abs((n mul -2))))**2) sub (n add x_0_6))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 6 - 9 - 1 + 10 + 24 + 31 + 28 + 12 + 9 + 10 + 11 + 14 + 17 + 20 + 21 + 20 + 17 + 18 + 19 + 22 + 25 + 28 + 29 + 28 + 25", "x2": "add relu sub relu relu x_0_1 x_0_3 n", "tree": "(relu((relu(relu(x_0_1)) sub x_0_3)) add n)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 6 + 3 - 9 - 16 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462 - 506 - 552", "x2": "mul abs n sub sub sqr sign n mod n add idiv x_0_2 add x_0_1 x_0_1 n n", "tree": "(abs(n) mul (((sign(n))**2 sub (n mod ((x_0_2 idiv (x_0_1 add x_0_1)) add n))) sub n))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 1 + 10 + 2 - 95 + 5 - 93 + 4 - 16 - 15 - 38 - 4 - 43 - 11 - 29 + 0 - 32 - 3 - 22 + 20 - 3 + 13 - 61 + 24 + 16 - 43", "x2": "sub n mod sqr x_0_4 sqr sub INT- 1 0 idiv INT+ 8 n", "tree": "(n sub ((x_0_4)**2 mod ((-10 sub (8 idiv n)))**2))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 6 - 10 - 3 + 6 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1 + 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 + 1 + 1", "x2": "sign sub mod idiv mod x_0_4 abs idiv sub x_0_2 INT- 1 0 x_0_3 idiv x_0_5 INT+ 3 n INT- 3", "tree": "sign(((((x_0_4 mod abs(((x_0_2 sub -10) idiv x_0_3))) idiv (x_0_5 idiv 3)) mod n) sub -3))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 7 + 10 + 20 + 39 + 69 + 112 + 170 + 245 + 339 + 454 + 592 + 755 + 945 + 1164 + 1414 + 1697 + 2015 + 2370 + 2764 + 3199 + 3677 + 4200", "x2": "abs sub INT+ 7 sub mul n n sub sign INT- 4 x_0_1", "tree": "abs((7 sub ((n mul n) sub (sign(-4) sub x_0_1))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 2 + 7 - 6 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0 - 1 - 1 + 0 + 0", "x2": "idiv x_0_4 sqr n", "tree": "(x_0_4 idiv (n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "- 5 + 36 + 144 + 786 + 4632 + 2 7702 + 16 6116 + 99 6594 + 597 9456 + 3587 6622 + 2 1525 9612 + 12 9155 7546 + 77 4934 5144 + 464 9607 726 + 2789 7642 4212 + 1 6738 5854 5122 + 10 431 5127 576 + 60 2589 762 3294 + 361 5534 4573 9596 + 2169 3206 7443 7402 + 1 3015 9240 4662 4232 + 7 8095 5442 7974 5206 + 46 8573 2656 7847 1044", "x2": "mul INT+ 6 abs sub mod INT- 9 x_0_1 n", "tree": "(6 mul abs(((-9 mod x_0_1) sub n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 6 + 6 + 10 + 96 - 90 - 120 - 672 + 0 - 120 - 2688 + 0 - 1920 - 6 7200 + 0 - 9 4080 + 0 + 0 - 188 1600 + 0 + 0 - 1 2230 4000 + 0 + 0 + 0 + 0", "x2": "mul sub n INT+ 8 mul x_0_3 mod n INT+ 8", "tree": "((n sub 8) mul (x_0_3 mul (n mod 8)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr sub n INT- 1", "tree": "((n sub -1))**2", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 - 2 + 9 + 6 + 3 + 11 + 22 + 19 + 16 + 24 + 35 + 32 + 29 + 37 + 48 + 45 + 42 + 50 + 61 + 58 + 55 + 63 + 74 + 71 + 68 + 76", "x2": "add add x_0_4 mul INT- 6 INT- 2 sign idiv x_0_2 x_0_1", "tree": "((x_0_4 add (-6 mul -2)) add sign((x_0_2 idiv x_0_1)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "+ 6 + 6 + 1 + 0 + 3 + 4 + 2 + 4 + 0 + 8 + 4 + 0 + 1 + 4 + 3 + 4 + 12 + 6 + 12 + 8 + 7 + 6 + 1 + 16", "x2": "mod mul sign INT- 3 add mul sqr x_0_2 INT+ 1 INT- 4 abs abs n", "tree": "((sign(-3) mul (((x_0_2)**2 mul 1) add -4)) mod abs(abs(n)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 8 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2", "x2": "mod idiv sub n mod n sub x_0_2 n sub INT- 5 sqr INT- 4 add x_0_2 sub mul n INT- 9 n", "tree": "(((n sub (n mod (x_0_2 sub n))) idiv (-5 sub (-4)**2)) mod (x_0_2 add ((n mul -9) sub n)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 8 + 5 - 4 - 8 - 2 + 1 - 12 - 10 - 1 - 11 - 21 - 11 - 12 - 32 - 32 - 23 - 44 - 64 - 55 - 67 - 108 - 119 - 122 - 175 - 227 - 241 - 297", "x2": "add x_0_4 add x_0_3 mul x_0_5 relu sub x_0_2 x_0_6", "tree": "(x_0_4 add (x_0_3 add (x_0_5 mul relu((x_0_2 sub x_0_6)))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "- 6 - 114 - 81 - 54 - 33 - 18 - 9 - 6 - 9 - 18 - 33 - 54 - 81 - 114 - 153 - 198 - 249 - 306 - 369 - 438 - 513 - 594 - 681", "x2": "mul INT- 3 add sub sub relu sqr sub n INT+ 8 relu x_0_1 sign x_0_1 INT+ 1", "tree": "(-3 mul (((relu(((n sub 8))**2) sub relu(x_0_1)) sub sign(x_0_1)) add 1))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 4 + 5 - 8 + 20 + 24 + 35 + 0 + 18 + 40 + 22 + 0 + 65 + 168 + 105 + 0 + 238 + 108 + 190 + 0 + 147 + 440 + 138 + 0 + 550 + 624", "x2": "mul n relu mod x_0_4 n", "tree": "(n mul relu((x_0_4 mod n)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 5 - 29 - 83 - 197 - 431 - 905 - 1859 - 3773 - 7607 - 1 5281 - 3 635 - 6 1349 - 12 2783 - 24 5657 - 49 1411 - 98 2925 - 196 5959 - 393 2033 - 786 4187 - 1572 8501 - 3145 7135 - 6291 4409", "x2": "add x_0_1 sub sign sign sub sqr n mul INT- 4 x_0_1 add mul n INT+ 5 sub n x_0_1", "tree": "(x_0_1 add (sign(sign(((n)**2 sub (-4 mul x_0_1)))) sub ((n mul 5) add (n sub x_0_1))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 6 + 3 - 21 + 5 - 121 + 7 - 961 + 9 - 9601 + 11 - 11 5201 + 13 - 161 2801 + 15 - 2580 4801 + 17 - 4 6448 6401 + 19 - 92 8972 8001 + 21 - 2043 7401 6001 + 23 - 4 9049 7638 4001", "x2": "mod n add mul x_0_2 n idiv idiv sqr INT- 3 x_0_2 sub INT+ 4 abs idiv x_0_2 x_0_2", "tree": "(n mod ((x_0_2 mul n) add (((-3)**2 idiv x_0_2) idiv (4 sub abs((x_0_2 idiv x_0_2))))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 3 + 2 + 6 + 2 + 10 + 2 + 14 + 2 + 18 + 2 + 22 + 2 + 26 + 2 + 30 + 2 + 34 + 2 + 38 + 2 + 42 + 2 + 46", "x2": "idiv mul n idiv INT+ 4 abs sqr idiv INT- 7 sub INT+ 7 mod n sub x_0_1 mul n INT+ 1 0 x_0_1", "tree": "((n mul (4 idiv abs(((-7 idiv (7 sub (n mod (x_0_1 sub (n mul 10))))))**2))) idiv x_0_1)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 6 - 12 - 21 - 43 - 104 - 246 - 654 - 1858 - 5448 - 1 6194 - 4 8406 - 14 5014 - 43 4808 - 130 4158 - 391 2174 - 1173 6186 - 3520 8184 - 1 562 4138 - 3 1687 1958 - 9 5061 5374 - 28 5184 5576 - 85 5553 6134 - 256 6660 7758", "x2": "add mul add n mod INT+ 5 n n mul x_0_1 relu INT+ 3", "tree": "(((n add (5 mod n)) mul n) add (x_0_1 mul relu(3)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 2 - 6 - 12 - 20 - 30 - 42 - 56 - 72 - 90 - 110 - 132 - 156 - 182 - 210 - 240 - 272 - 306 - 342 - 380 - 420 - 462", "x2": "sub abs n abs mul abs n n", "tree": "(abs(n) sub abs((abs(n) mul n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 4 + 1 + 4 + 4 + 5 + 4 + 4 + 5 + 4 + 4 + 5 + 4 + 4 + 5 + 4 + 4 + 5 + 4 + 4 + 5 + 4 + 4 + 5 + 4", "x2": "mul idiv INT+ 5 x_0_3 x_0_3", "tree": "((5 idiv x_0_3) mul x_0_3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 5 - 10 + 9 - 8 + 0 + 9 + 25 + 100 + 81 + 64 + 0 + 81 + 625 + 1 0 + 6561 + 4096 + 0 + 6561 + 39 625 + 1 0 0 + 4304 6721 + 1677 7216 + 0 + 4304 6721 + 1525 8789 625 + 1 0 0 0 0 + 1853 201 8885 1841", "x2": "sqr x_0_6", "tree": "(x_0_6)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "6"}
{"x1": "- 2 + 1 - 4 + 8 + 4 + 3 + 6 + 6 + 3 + 5 + 2 + 10 + 12 + 12 + 8 + 7 + 7 + 2 + 16 + 14 + 8 + 21 + 1 + 3 + 12 + 6", "x2": "abs mod idiv sub add sub sign n mul sub mul x_0_2 x_0_4 n INT- 4 INT- 1 0 x_0_3 x_0_4 n", "tree": "abs((((((sign(n) sub (((x_0_2 mul x_0_4) sub n) mul -4)) add -10) sub x_0_3) idiv x_0_4) mod n))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 5 - 2 - 4 - 2 - 5 - 2 - 6 - 2 - 7 - 2 - 8 - 2 - 9 - 2 - 10 - 2 - 11 - 2 - 12 - 2 - 13 - 2 - 14", "x2": "idiv add mod sign n sign idiv mul INT+ 5 INT+ 4 add x_0_1 INT+ 2 sub n INT- 4 x_0_1", "tree": "(((sign(n) mod sign(((5 mul 4) idiv (x_0_1 add 2)))) add (n sub -4)) idiv x_0_1)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 5 + 5 - 15 + 50 - 228 + 1251 - 8134 + 6 1002 - 51 8520 + 492 5937 - 5172 2341 + 5 9480 6919 - 74 3508 6490 + 1003 7366 7612 - 1 4554 1818 377 + 22 5589 8179 5841 - 372 2231 9963 1379 + 6513 9059 9354 9130 - 12 507 2608 8065 8908 + 234 9891 5871 7284 8703 - 4817 2777 5370 4339 8414 + 10 3571 4717 464 3306 5898 - 233 358 1133 5447 4398 2708", "x2": "idiv sub INT- 5 mul sub add n abs abs relu n sign n x_0_1 INT+ 2", "tree": "((-5 sub (((n add abs(abs(relu(n)))) sub sign(n)) mul x_0_1)) idiv 2)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 4 - 2 + 1 + 9 - 9 + 4 + 0 + 1 + 9 + 0 + 4 + 0 + 1 + 9 + 0 + 4 + 0 + 1 + 9 + 0 + 4 + 0 + 1 + 9 + 0 + 4 + 0", "x2": "relu x_0_5", "tree": "relu(x_0_5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 5 - 8 - 9 - 5 + 1 + 2 + 3 + 1 + 1 + 3 + 4 + 5 + 6 + 6 + 6 + 6 + 7 + 8 + 9 + 9 + 9 + 9 + 10 + 11 + 12", "x2": "sub relu n abs add mod INT- 3 x_0_3 abs INT- 7", "tree": "(relu(n) sub abs(((-3 mod x_0_3) add abs(-7))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 6 - 3 + 30 + 15 - 150 - 75 + 750 + 375 - 3750 - 1875 + 1 8750 + 9375 - 9 3750 - 4 6875 + 46 8750 + 23 4375 - 234 3750 - 117 1875 + 1171 8750 + 585 9375 - 5859 3750 - 2929 6875 + 2 9296 8750 + 1 4648 4375", "x2": "mul INT- 5 x_0_2", "tree": "(-5 mul x_0_2)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 1 6384 + 3 2768 + 6 5536 + 6 5536 + 13 1072 + 15 7168 + 18 4015 + 20 8030 + 22 1579 + 44 3158 + 60 6475", "x2": "sub mod x_0_1 sqr mul n n mul x_0_1 INT- 1", "tree": "((x_0_1 mod ((n mul n))**2) sub (x_0_1 mul -1))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 0 + 0 + 0 + 1 + 1 + 1 + 1 + 2 + 2 + 2 + 2 + 3 + 3 + 3 + 3 + 4 + 4 + 4 + 4 + 5 + 5 + 5", "x2": "idiv n sqr INT- 2", "tree": "(n idiv (-2)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 10 - 7 + 8 - 2 + 0 + 0 + 0 - 2 - 2 - 2 + 0 + 0 + 0 - 2 - 2 - 2 + 0 + 0 + 0 - 2 - 2 - 2 + 0 + 0 + 0", "x2": "mod add relu INT+ 4 add INT- 3 sign n mod sub x_0_3 INT- 1 INT- 5", "tree": "((relu(4) add (-3 add sign(n))) mod ((x_0_3 sub -1) mod -5))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 10 - 20 - 60 - 240 - 1200 - 7200 - 5 400 - 40 3200 - 362 8800 - 3628 8000 - 3 9916 8000 - 47 9001 6000 - 622 7020 8000 - 8717 8291 2000 - 13 767 4368 0 - 209 2278 9888 0 - 3556 8742 8096 0 - 6 4023 7370 5728 0 - 121 6451 40 8832 0 - 2432 9020 817 6640 0 - 5 1090 9421 7170 9440 0 - 112 4000 7277 7760 7680 0 - 2585 2016 7388 8497 6640 0", "x2": "mul n x_0_1", "tree": "(n mul x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "- 1 - 1 + 1 + 0 + 1 + 0 + 3 + 2 + 3 + 0 + 5 + 0 + 5 + 2 + 7 + 1 + 7 + 2 + 9 + 0 + 9 + 1 + 11 + 0", "x2": "mod n add x_0_2 INT+ 3", "tree": "(n mod (x_0_2 add 3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 34 - 48 - 60 - 70 - 78 - 84 - 88 - 90 - 90 - 88 - 84 - 78 - 70 - 60 - 48 - 34 - 18 + 0 + 20 + 42 + 66 + 92", "x2": "mul add mul INT+ 9 INT- 2 n add n sign n", "tree": "(((9 mul -2) add n) mul (n add sign(n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr sub mod INT+ 9 sign INT+ 1 n", "tree": "(((9 mod sign(1)) sub n))**2", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 0 - 2 - 12 - 40 - 100 - 210 - 392 - 672 - 1080 - 1650 - 2420 - 3432 - 4732 - 6370 - 8400 - 1 880 - 1 3872 - 1 7442 - 2 1660 - 2 6600 - 3 2340 - 3 8962", "x2": "idiv sub sqr sqr n sqr n add INT- 6 idiv INT+ 8 INT+ 1 0", "tree": "((((n)**2)**2 sub (n)**2) idiv (-6 add (8 idiv 10)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 24 + 54 + 96 + 150 + 216 + 294 + 384 + 486 + 600 + 726 + 864 + 1014 + 1176 + 1350 + 1536 + 1734 + 1944 + 2166 + 2400 + 2646 + 2904", "x2": "mul sqr abs n sub add abs INT+ 4 INT+ 3 abs sqr INT- 1", "tree": "((abs(n))**2 mul ((abs(4) add 3) sub abs((-1)**2)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 13 + 9 + 5 + 4 + 4 + 6 + 10 + 16 + 24 + 34 + 46 + 60 + 76 + 94 + 114 + 136 + 160 + 186 + 214 + 244 + 276 + 310", "x2": "add sqr sub INT+ 5 n add idiv INT- 4 n n", "tree": "(((5 sub n))**2 add ((-4 idiv n) add n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 7 - 2 + 4 - 6 - 1 - 12 - 8 - 20 - 17 - 30 - 28 - 42 - 41 - 56 - 56 - 72 - 73 - 90 - 92 - 110 - 113 - 132 - 136 - 156", "x2": "sub add sub idiv INT- 5 relu sub sqr INT+ 1 0 INT- 1 sign INT- 3 x_0_2 n", "tree": "((((-5 idiv relu(((10)**2 sub -1))) sub sign(-3)) add x_0_2) sub n)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 3 - 7 + 10 + 14 + 17 + 21 + 24 + 28 + 31 + 35 + 38 + 42 + 45 + 49 + 52 + 56 + 59 + 63 + 66 + 70 + 73 + 77 + 80 + 84", "x2": "sub abs x_0_2 INT- 7", "tree": "(abs(x_0_2) sub -7)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 8 + 1 + 9 - 6 + 10 + 0 + 0 + 0 + 7 + 0 + 1 + 1 + 1 + 0 + 1 + 0 + 0 + 0 + 1 + 0 + 1 + 1 + 1 + 0 + 1 + 0 + 0", "x2": "relu sub sign abs n x_0_5", "tree": "relu((sign(abs(n)) sub x_0_5))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 5 + 9 + 14 + 20 + 27 + 35 + 44 + 54 + 65 + 77 + 90 + 104 + 119 + 135 + 152 + 170 + 189 + 209 + 230 + 252 + 275 + 299", "x2": "add add relu sign n x_0_1 n", "tree": "((relu(sign(n)) add x_0_1) add n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 0 + 15 + 6 + 22 + 14 + 31 + 24 + 42 + 36 + 55 + 50 + 70 + 66 + 87 + 84 + 106 + 104 + 127 + 126 + 150 + 150 + 175 + 176", "x2": "add sub sub abs x_0_2 sign relu mul n mod n relu n INT- 3 n", "tree": "(((abs(x_0_2) sub sign(relu((n mul (n mod relu(n)))))) sub -3) add n)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 6 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign mod abs x_0_2 mod sub x_0_2 sign n n", "tree": "sign((abs(x_0_2) mod ((x_0_2 sub sign(n)) mod n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 7 + 7 + 14 + 47 + 80 + 217 + 354 + 907 + 1460 + 3677 + 5894 + 1 4767 + 2 3640 + 5 9137 + 9 4634 + 23 6627 + 37 8620 + 94 6597 + 151 4574 + 378 6487 + 605 8400 + 1514 6057 + 2423 3714 + 6058 4347", "x2": "abs add sub sign sub x_0_1 relu relu INT- 5 n mul add x_0_2 n INT- 4", "tree": "abs(((sign((x_0_1 sub relu(relu(-5)))) sub n) add ((x_0_2 add n) mul -4)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 1 - 6 + 17 + 27 + 35 + 62 + 79 + 98 + 119 + 142 + 167 + 194 + 223 + 254 + 287 + 322 + 359 + 398 + 439 + 482 + 527 + 574 + 623 + 674", "x2": "add n add add sub mod add INT+ 2 n x_0_3 mod relu x_0_1 idiv n n INT- 3 mul n n", "tree": "(n add (((((2 add n) mod x_0_3) sub (relu(x_0_1) mod (n idiv n))) add -3) add (n mul n)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "- 5 + 20 - 80 + 320 - 1280 + 5120 - 2 480 + 8 1920 - 32 7680 + 131 720 - 524 2880 + 2097 1520 - 8388 6080 + 3 3554 4320 - 13 4217 7280 + 53 6870 9120 - 214 7483 6480 + 858 9934 5920 - 3435 9738 3680 + 1 3743 8953 4720 - 5 4975 5813 8880 + 21 9902 3255 5520 - 87 9609 3022 2080", "x2": "mul idiv x_0_1 sign sub mod sqr x_0_1 n idiv abs INT- 7 mul sign n x_0_1 INT- 4", "tree": "((x_0_1 idiv sign((((x_0_1)**2 mod n) sub (abs(-7) idiv (sign(n) mul x_0_1))))) mul -4)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 6 - 3 - 5 + 4 + 6 - 3 - 5 + 4 + 6 - 3 - 5 + 4 + 6 - 3 - 5 + 4 + 6 - 3 - 5 + 4 + 6 - 3 - 5", "x2": "sub sign INT+ 2 x_0_2", "tree": "(sign(2) sub x_0_2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 - 136 + 1 3970 - 554 + 9 6082 - 1252 + 30 5034 - 2230 + 69 9626 - 3488 + 133 8658 - 5026 + 228 930 - 6844 + 358 5242 - 8942 + 531 394 - 1 1320 + 751 5186 - 1 3978 + 1025 8418 - 1 6916 + 1359 8890", "x2": "add add n add mul INT- 7 mul mul INT+ 5 n mod n x_0_1 mul x_0_1 sqr relu INT- 5 INT+ 2", "tree": "((n add ((-7 mul ((5 mul n) mul (n mod x_0_1))) add (x_0_1 mul (relu(-5))**2))) add 2)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 4 + 126 + 294 + 388 + 480 + 570 + 658 + 744 + 828 + 910 + 990 + 1068 + 1144 + 1218 + 1290 + 1360 + 1428 + 1494 + 1558 + 1620 + 1680 + 1738 + 1794", "x2": "add mul n sub sqr add abs INT+ 9 idiv sign x_0_1 relu INT+ 1 n n", "tree": "((n mul (((abs(9) add (sign(x_0_1) idiv relu(1))))**2 sub n)) add n)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "- 6 - 1 + 4 + 2 + 3 + 4 + 4 + 5 + 5 + 6 + 7 + 7 + 8 + 8 + 9 + 10 + 10 + 11 + 12 + 12 + 13 + 13 + 14", "x2": "idiv mul relu n n add n x_0_1", "tree": "((relu(n) mul n) idiv (n add x_0_1))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 7 - 1 + 6 + 3 - 1 + 6 + 5 + 2 + 9 + 5 + 4 + 1 + 8 + 4 + 3 + 0 + 7 + 3 + 2 - 1 + 6 + 2 + 1 + 24 + 5", "x2": "sub mod x_0_4 add sign idiv mod INT- 9 n n n relu abs sqr sign n", "tree": "((x_0_4 mod (sign(((-9 mod n) idiv n)) add n)) sub relu(abs((sign(n))**2)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 3 - 9 - 2 - 9 - 3 - 9 - 3 - 11 - 3 - 13 - 3 - 16 - 3 - 19 - 3 - 22 - 3 - 25 - 3 - 28 - 3 - 31 - 3 - 34", "x2": "idiv sub relu add n x_0_1 sub INT- 3 idiv x_0_2 x_0_1 INT- 1", "tree": "((relu((n add x_0_1)) sub (-3 sub (x_0_2 idiv x_0_1))) idiv -1)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 6 + 16 + 9 + 4 + 1 + 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289", "x2": "sqr abs add add sub x_0_1 x_0_1 n add sign INT+ 3 INT- 7", "tree": "(abs((((x_0_1 sub x_0_1) add n) add (sign(3) add -7))))**2", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 2 + 1 - 51 - 48 - 100 - 145 - 249 - 339 - 796 - 1066 - 2437 - 4313 - 9797 - 1 7301 - 4 9034 - 8 6554 - 24 5219 - 51 9373 - 147 1363 - 311 6287 - 1029 9590 - 2181 4058 - 7209 7179 - 1 7451 2513", "x2": "sub mul mod idiv abs n INT+ 3 n x_0_2 sqr INT+ 7", "tree": "((((abs(n) idiv 3) mod n) mul x_0_2) sub (7)**2)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 6 - 2 - 2 - 11 - 12 - 22 - 24 - 35 - 38 - 50 - 54 - 67 - 72 - 86 - 92 - 107 - 114 - 130 - 138 - 155 - 164 - 182 - 192", "x2": "sub INT- 4 sub n x_0_2", "tree": "(-4 sub (n sub x_0_2))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 7 - 4 - 19 - 94 - 577 - 4126 - 3 3577 - 30 6310 - 309 6667 - 3436 9636 - 4 1553 2287 - 54 3628 9354 - 765 2358 3229 - 1 1532 9003 7774 - 18 5291 6418 7597 - 316 1490 8122 6906 - 5709 2126 2627 1887 - 10 8791 1889 8039 2740 - 218 1532 9922 3412 6667 - 4592 984 258 9705 2726 - 10 1244 3181 5619 6928 6617 - 233 3211 4159 9511 9064 4894 - 5609 8318 3020 3905 4476 4049 - 14 479 1168 9669 7148 974 6094", "x2": "add add x_0_2 add mul x_0_1 n abs sign n add x_0_1 n", "tree": "((x_0_2 add ((x_0_1 mul n) add abs(sign(n)))) add (x_0_1 add n))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 13 + 28 + 58 + 118 + 238 + 478 + 958 + 1918 + 3838 + 7678 + 1 5358 + 3 718 + 6 1438 + 12 2878 + 24 5758 + 49 1518 + 98 3038 + 196 6078 + 393 2158 + 786 4318 + 1572 8638 + 3145 7278", "x2": "add relu INT+ 9 add x_0_1 sub relu sub x_0_1 INT+ 6 sign INT+ 9", "tree": "(relu(9) add (x_0_1 add (relu((x_0_1 sub 6)) sub sign(9))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "- 6 + 5 - 2 + 6 + 4 + 8 + 8 + 16 + 16 + 32 + 32 + 64 + 64 + 128 + 128 + 256 + 256 + 512 + 512 + 1024 + 1024 + 2048 + 2048 + 4096", "x2": "add mod x_0_1 add x_0_2 x_0_2 x_0_1", "tree": "((x_0_1 mod (x_0_2 add x_0_2)) add x_0_1)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 4 - 4 - 4 - 4", "x2": "idiv n sub sign n relu add INT- 2 sqr mod INT+ 7 add INT- 5 relu idiv INT+ 6 INT- 5", "tree": "(n idiv (sign(n) sub relu((-2 add ((7 mod (-5 add relu((6 idiv -5)))))**2))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 5 + 4 + 7 + 0 + 72 + 3773 + 24 1728 + 1958 535 + 19 5805 3500 + 2369 2448 2212 + 34 1171 2598 1840 + 5765 7943 3178 2992 + 113 95 6928 6725 1292 + 2 5427 1531 3356 9357 8200 + 650 9351 2082 5902 2346 5472 + 18 8120 2500 1728 4239 9027 3168 + 6095 961 242 8126 7363 4619 5840 + 220 329 6933 8451 8296 9460 5441 4652 + 8 8013 1877 4555 1593 1312 6991 9714 800 + 3881 3815 7986 5887 6453 7322 6344 8736 5952 + 187 8588 6847 4613 9821 3690 712 3031 7733 4080 + 9 9377 3414 2629 5102 3886 495 5851 9079 4732 7680 + 5724 1348 6628 1336 8879 2259 3710 9739 9050 358 3232 + 357 7584 2914 8084 3797 2925 9081 5065 7877 6254 5252 0 + 24 1844 6981 672 8854 6449 6847 9146 7195 5375 7193 6290 3552 + 1 7630 4784 9211 7482 6187 3619 5722 7736 5608 8168 4318 3323 3728", "x2": "add mod mod INT- 6 INT- 3 sqr n relu mul n mul n add x_0_1 abs x_0_5", "tree": "(((-6 mod -3) mod (n)**2) add relu((n mul (n mul (x_0_1 add abs(x_0_5))))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "+ 0 + 13 + 27 + 42 + 58 + 75 + 93 + 112 + 132 + 153 + 175 + 198 + 222 + 247 + 273 + 300 + 328 + 357 + 387 + 418 + 450 + 483 + 517", "x2": "add relu add sub INT+ 8 INT- 3 x_0_1 n", "tree": "(relu(((8 sub -3) add x_0_1)) add n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 3 + 1 + 8 + 9 + 19 + 20 + 34 + 34 + 54 + 50 + 81 + 65 + 107 + 98 + 129 + 129 + 170 + 157 + 222 + 195 + 258 + 245 + 289 + 292", "x2": "sub relu add mod x_0_2 n mul sqr n INT+ 1 x_0_1", "tree": "(relu(((x_0_2 mod n) add ((n)**2 mul 1))) sub x_0_1)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "- 7 + 4 + 9 + 4 + 17 - 4 + 29 - 24 + 59 - 72 + 134 - 190 + 319 - 481 + 777 - 1200 + 1907 - 2977 + 4700 - 7367 + 1 1600 - 1 8213 + 2 8648 - 4 5009 + 7 767 - 11 1213", "x2": "sub sub add x_0_2 idiv sub x_0_4 INT+ 6 INT- 4 idiv abs INT- 6 sqr sqr n add INT- 9 x_0_1", "tree": "(((x_0_2 add ((x_0_4 sub 6) idiv -4)) sub (abs(-6) idiv ((n)**2)**2)) sub (-9 add x_0_1))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 12 + 6 + 7 + 6 + 11 - 22 + 16 - 103 + 20 - 203 + 24 - 335 + 28 - 499 + 32 - 695 + 36 - 923 + 40 - 1183 + 44 - 1475", "x2": "sub abs mul INT+ 2 n sqr abs relu sub x_0_1 INT+ 5", "tree": "(abs((2 mul n)) sub (abs(relu((x_0_1 sub 5))))**2)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 3 - 10 - 7 - 5 + 3 + 13 + 14 + 19 + 102 + 124 + 140 + 168 + 195 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676 + 729 + 784", "x2": "add sub mul sub relu mod n x_0_3 sign x_0_4 n idiv n x_0_6 mod n sqr n", "tree": "((((relu((n mod x_0_3)) sub sign(x_0_4)) mul n) sub (n idiv x_0_6)) add (n mod (n)**2))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "- 9 + 1467 - 35 5014 + 1 1537 9550 - 466 1333 8200 + 22 7006 9570 3400 - 1 2848 5937 6812 4400 + 833 8737 3555 1273 5600 - 60 7060 794 8132 7151 6800 + 4 9232 5724 4593 5632 12 4800 - 4381 6989 4768 8271 2481 1107 2000 + 426 3393 761 68 7924 4120 7305 6000 - 44 8508 9516 579 2369 6481 5008 5491 2000 + 5 905 7660 725 7433 9550 6503 4703 2512 0 - 6179 9599 9328 1052 4821 4489 5212 9746 9568 0 + 801 5408 1112 8552 5069 3419 2909 1228 1802 9696 0 - 110 2920 1561 1288 8249 5414 4944 2952 9976 886 1696 0 + 16 916 507 7687 395 6080 9747 3726 8423 5113 2921 4464 0 - 2 4748 8886 948 2666 8445 2539 1459 1883 5360 4243 3184 5632 0 + 4011 7948 4359 7140 2954 9756 5955 5344 3211 9247 8419 2176 9472 0 - 682 51 2341 1513 8502 3458 6212 4408 5346 272 1331 2670 810 2400 0 + 121 6015 1350 4272 9194 9682 6721 6782 417 1966 5213 3649 754 4657 9200 0 - 22 6422 181 4495 6176 1030 9135 5764 8161 6820 1662 7285 4578 4815 3047 400 0", "x2": "sub abs x_0_1 mul mul x_0_1 sqr INT+ 9 n", "tree": "(abs(x_0_1) sub ((x_0_1 mul (9)**2) mul n))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 8 - 7 - 6 - 6 - 7 - 9 - 12 - 16 - 21 - 27 - 34 - 42 - 51 - 61 - 72 - 84 - 97 - 111 - 126 - 142 - 159 - 177 - 196", "x2": "sub INT+ 3 sub idiv sub n x_0_2 add x_0_2 INT- 1 add sub mul sign n x_0_1 n mod x_0_2 x_0_2", "tree": "(3 sub (((n sub x_0_2) idiv (x_0_2 add -1)) sub (((sign(n) mul x_0_1) sub n) add (x_0_2 mod x_0_2))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 10 - 9 + 8 - 18 - 18 + 16 - 15 + 32 + 32 - 29 + 27 - 58 - 58 + 52 - 49 + 104 + 104 - 94 + 88 - 188 - 188 + 169 - 159 + 338 + 338", "x2": "idiv mul x_0_4 relu INT+ 9 INT- 5", "tree": "((x_0_4 mul relu(9)) idiv -5)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 4 + 6 + 10 - 33 - 51 + 162 + 255 - 810 - 1278 + 4047 + 6390 - 2 235 - 3 1953 + 10 1172 + 15 9765 - 50 5860 - 79 8828 + 252 9297 + 399 4140 - 1264 6485 - 1997 703 + 6323 2422 + 9985 3515 - 3 1616 2110 - 4 9926 7578", "x2": "mul idiv add mul mul x_0_3 abs INT+ 1 0 x_0_2 n mul INT- 6 x_0_3 INT+ 3", "tree": "(((((x_0_3 mul abs(10)) mul x_0_2) add n) idiv (-6 mul x_0_3)) mul 3)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 7 + 3 - 7 + 15 + 11 + 1 + 23 + 19 + 9 + 31 + 27 + 17 + 39 + 35 + 25 + 47 + 43 + 33 + 55 + 51 + 41 + 63 + 59 + 49 + 71", "x2": "add x_0_3 add mod n n INT+ 8", "tree": "(x_0_3 add ((n mod n) add 8))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 9 + 3 - 3 - 3 + 12 + 6 + 0 + 15 + 6 + 6 + 15 + 9 + 0 + 9 + 6 + 9 + 9 + 3 + 3 + 0 + 6 + 0 + 3 + 6 + 6 + 3", "x2": "sub sub abs sub x_0_4 x_0_3 sign INT- 7 idiv n n", "tree": "((abs((x_0_4 sub x_0_3)) sub sign(-7)) sub (n idiv n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 10 - 10 + 8 + 7 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1", "x2": "sign mul abs sub idiv sqr n x_0_5 x_0_3 x_0_3", "tree": "sign((abs((((n)**2 idiv x_0_5) sub x_0_3)) mul x_0_3))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 8 + 6 + 0 + 0 + 2 + 2 + 3 + 4 + 5 + 6 + 8 + 9 + 11 + 13 + 15 + 17 + 19 + 22 + 24 + 27 + 30 + 33 + 36 + 39 + 43", "x2": "mod idiv sub idiv sqr n INT- 2 x_0_3 INT- 8 add x_0_2 n", "tree": "(((((n)**2 idiv -2) sub x_0_3) idiv -8) mod (x_0_2 add n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "- 7 + 11 + 2 + 9 + 6 + 5 + 8 + 3 + 8 + 5 + 8 + 7 + 4 + 8 + 3 + 9 + 2 + 9 + 4 + 8 + 9 + 7 + 8", "x2": "add mod n sub sign sub sqr INT+ 8 abs idiv x_0_1 x_0_1 x_0_1 INT+ 9", "tree": "((n mod (sign(((8)**2 sub abs((x_0_1 idiv x_0_1)))) sub x_0_1)) add 9)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 8 - 2 - 2 + 4 + 4 + 10 + 10 + 16 + 16 + 22 + 22 + 28 + 28 + 34 + 34 + 40 + 40 + 46 + 46 + 52 + 52 + 58 + 58 + 64", "x2": "add INT+ 6 x_0_2", "tree": "(6 add x_0_2)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 4 + 16 + 36 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256", "x2": "sqr abs add sign INT+ 2 mod INT- 7 n", "tree": "(abs((sign(2) add (-7 mod n))))**2", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 0 + 8 + 9 + 0 + 8 + 9 + 0 + 8 + 9 + 0 + 8 + 9 + 0 + 8 + 9 + 0 + 8 + 9 + 0 + 8 + 9 + 0 + 8 + 9 + 0", "x2": "mod x_0_3 add x_0_3 add abs add idiv mod n n n sqr idiv x_0_2 INT+ 3 x_0_1", "tree": "(x_0_3 mod (x_0_3 add (abs((((n mod n) idiv n) add ((x_0_2 idiv 3))**2)) add x_0_1)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 1920 + 64 5120 + 2 2708 2240 + 817 4960 6400 + 31 3918 4885 7600 + 1 2305 6047 5217 9200 + 472 5352 2248 3681 2800 + 20 4135 2161 1295 312 9600 + 8165 4086 4451 8012 5184 0 + 359 2779 8035 8792 5508 960 0 + 17 2453 4305 7222 424 3886 800 0 + 7174 627 1180 4369 6545 6609 2800 0 + 321 3980 948 8835 7605 2456 957 4400 0 + 15 4271 445 5464 1165 517 8925 9571 2000 0 + 7898 6774 8119 7627 6506 5161 90 454 4000 0 + 429 6880 5497 7150 9441 9544 7588 8984 7193 6000 0 + 24 7500 3196 6683 8943 8565 7781 1205 5198 3513 6000 0 + 1 1286 145 7680 7855 8398 5994 8190 9717 448 2201 6000 0 + 541 7286 9968 6777 803 1327 7513 1666 4181 5145 6768 0 0 + 27 3031 2646 4213 5648 4778 9186 6635 9874 7483 3421 1072 0 0 + 1 4416 507 7310 4762 2396 3269 558 3801 3867 1204 6344 6016 0 0 + 795 7660 267 5382 8756 2772 4518 8225 8365 4650 4958 2220 832 0 0", "x2": "mul idiv add add abs n n sqr INT- 6 n abs mul mod n mul n INT- 9 x_0_1", "tree": "((((abs(n) add n) add (-6)**2) idiv n) mul abs(((n mod (n mul -9)) mul x_0_1)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 1 - 1 + 7 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0", "x2": "abs sqr idiv relu x_0_3 INT- 9", "tree": "abs(((relu(x_0_3) idiv -9))**2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "- 10 - 8 + 13 + 4 + 24 + 20 + 33 + 60 + 72 + 100 + 37 + 134 + 140 + 160 + 145 + 176 + 208 + 132 + 261 + 202 + 394 + 262 + 397 + 216", "x2": "sub sqr n mod sqr sub x_0_2 relu abs sub n n x_0_1", "tree": "((n)**2 sub (((x_0_2 sub relu(abs((n sub n)))))**2 mod x_0_1))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 5 - 6 + 3 + 4 + 1 + 2 - 1 + 0 + 3 + 4 + 1 + 2 - 1 + 0 + 3 + 4 + 1 + 2 - 1 + 0 + 3 + 4 + 1 + 2", "x2": "add mod x_0_2 INT- 6 INT+ 4", "tree": "((x_0_2 mod -6) add 4)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 0 - 10 - 6 - 8 + 0 + 2 + 1 + 0 + 0 + 2 + 1 + 0 + 0 + 2 + 1 + 0 + 0 + 2 + 1 + 0 + 0 + 2 + 1 + 0 + 0 + 2", "x2": "mod x_0_4 n", "tree": "(x_0_4 mod n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 3 - 3 - 7 + 5 + 0 + 114 + 133 + 344 - 261 + 10 - 7513 - 9564 - 2 6819 + 2 1938 - 885 + 72 1264 + 97 5545 + 289 6470 - 250 913 + 10 6220 - 9087 9243 - 1 2877 1918 - 3 9971 2837 + 3 6013 1496 - 1593 2975 + 141 7716 1934 + 208 6105 743", "x2": "sub n mul mul add mod x_0_5 INT+ 1 INT+ 3 x_0_5 add n n", "tree": "(n sub ((((x_0_5 mod 1) add 3) mul x_0_5) mul (n add n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "- 5 - 1 + 1 + 6 - 4 + 0 + 2 + 7 - 3 + 0 + 2 + 7 - 3 + 0 + 2 + 7 - 3 + 0 + 2 + 7 - 3 + 0 + 2 + 7 - 3 + 0", "x2": "add idiv sqr INT+ 3 n x_0_4", "tree": "(((3)**2 idiv n) add x_0_4)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 1 - 3 - 7 - 12 - 20 - 32 - 51 - 81 - 129 - 206 - 330 - 530 - 853 - 1375 - 2219 - 3584 - 5792 - 9364 - 1 5143 - 2 4493 - 3 9621 - 6 4098 - 10 3702 - 16 7782", "x2": "add mod n sub x_0_2 INT+ 6 idiv sqr x_0_1 x_0_1", "tree": "((n mod (x_0_2 sub 6)) add ((x_0_1)**2 idiv x_0_1))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 7 + 9 - 5 - 10 + 15 - 15 - 6 + 24 - 31 + 8 + 29 - 56 + 38 + 20 - 86 + 93 - 19 - 107 + 178 - 113 - 89 + 284 - 292 + 23 + 372 - 577", "x2": "sub x_0_3 add idiv n n x_0_4", "tree": "(x_0_3 sub ((n idiv n) add x_0_4))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "- 2 + 10 + 8 + 0 + 8 + 0 + 39 + 32 + 18 + 16 + 74 + 112 + 34 + 0 + 11 + 64 + 74 + 44 + 59 + 116 + 130 + 104 + 123 + 184", "x2": "mod mul mul INT- 6 abs INT- 2 abs n sub sqr n x_0_2", "tree": "(((-6 mul abs(-2)) mul abs(n)) mod ((n)**2 sub x_0_2))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "- 7 + 8 - 2 + 8 + 9 + 3 + 1 + 0 + 1 + 0 + 0 + 4 + 2 + 0 + 2 + 0 + 0 + 3 + 2 + 0 + 2 + 0 + 0 + 3 + 0 + 0 + 1 + 0", "x2": "mod mul sub relu x_0_2 n x_0_6 INT+ 5", "tree": "(((relu(x_0_2) sub n) mul x_0_6) mod 5)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "6"}
{"x1": "+ 0 - 3 + 9 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1 - 1 + 1 + 1", "x2": "add sign x_0_3 relu sub abs INT+ 3 mul sign INT- 1 INT- 6", "tree": "(sign(x_0_3) add relu((abs(3) sub (sign(-1) mul -6))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 3 - 4 + 3 - 10 - 6 - 324 - 588 + 576 - 2430 - 1800 - 11 7612 - 25 4016 + 29 2032 - 142 8840 - 121 5000 - 9032 6016 - 2 2023 1872 + 2 8385 5104 - 15 4743 3720 - 14 5800 0 - 1195 131 9168 - 3197 7667 8144 + 4504 7805 48 - 2 6739 6546 8160 - 2 7337 5000 0 - 242 3486 7527 2704 - 699 3515 9510 928", "x2": "mul mul INT+ 3 mul n n x_0_5", "tree": "((3 mul (n mul n)) mul x_0_5)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 4 + 9 - 3 - 4 - 1 - 3 - 4 - 1 - 3 - 4 - 1 - 3 - 4 - 1 - 3 - 4 - 1 - 3 - 4 - 1 - 3 - 4 - 1 - 3", "x2": "mul sign n mod x_0_3 INT- 1 0", "tree": "(sign(n) mul (x_0_3 mod -10))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 10 - 3 - 10 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529 + 576 + 625 + 676", "x2": "sub sqr n mul sub x_0_4 x_0_4 x_0_4", "tree": "((n)**2 sub ((x_0_4 sub x_0_4) mul x_0_4))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 10 - 9 - 20 + 18 + 40 - 36 - 80 + 72 + 160 - 144 - 320 + 288 + 640 - 576 - 1280 + 1152 + 2560 - 2304 - 5120 + 4608 + 1 240 - 9216 - 2 480 + 1 8432", "x2": "mul INT- 2 mul x_0_2 sign add sqr n mod sqr INT+ 7 mod INT+ 3 INT+ 7", "tree": "(-2 mul (x_0_2 mul sign(((n)**2 add ((7)**2 mod (3 mod 7))))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 5 + 10 + 17 + 26 + 37 + 50 + 65 + 82 + 101 + 122 + 145 + 170 + 197 + 226 + 257 + 290 + 325 + 362 + 401 + 442 + 485", "x2": "add abs sqr n sign n", "tree": "(abs((n)**2) add sign(n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 8 + 6 + 20 - 28 - 104 + 164 + 724 - 1316 - 6520 + 1 3156 + 7 1716 - 15 7876 - 93 2312 + 221 260 + 1398 4676 - 3536 4164 - 2 3773 9496 + 6 3655 4948 + 45 1705 420 - 127 3109 8964 - 948 5805 8824 + 2800 8417 7204 + 2 1817 3535 2948 - 6 7220 2025 2900", "x2": "sub INT- 4 mul n x_0_2", "tree": "(-4 sub (n mul x_0_2))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 2 + 10 - 1 - 9 + 2 + 10 - 1 - 9 + 2 + 10 - 1 - 9 + 2 + 10 - 1 - 9 + 2 + 10 - 1 - 9 + 2 + 10 - 1 - 9", "x2": "add sub INT+ 1 x_0_2 idiv mod idiv n n x_0_1 x_0_1", "tree": "((1 sub x_0_2) add (((n idiv n) mod x_0_1) idiv x_0_1))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 10 + 1 - 9 + 2 - 12 + 3 - 16 + 4 - 20 + 5 - 24 + 6 - 28 + 7 - 32 + 8 - 36 + 9 - 40 + 10 - 44 + 11 - 48", "x2": "sub relu idiv INT- 2 INT- 1 0 idiv sqr relu n x_0_1", "tree": "(relu((-2 idiv -10)) sub ((relu(n))**2 idiv x_0_1))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 5 + 0 + 25 + 150 + 775 + 3900 + 1 9525 + 9 7650 + 48 8275 + 244 1400 + 1220 7025 + 6103 5150 + 3 517 5775 + 15 2587 8900 + 76 2939 4525 + 381 4697 2650 + 1907 3486 3275 + 9536 7431 6400 + 4 7683 7158 2025 + 23 8418 5791 150 + 119 2092 8955 775 + 596 464 4775 3900 + 2980 2322 3876 9525", "x2": "mul sub x_0_1 INT- 5 INT+ 5", "tree": "((x_0_1 sub -5) mul 5)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 10 - 3 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0 + 0 + 3 + 0", "x2": "relu x_0_3", "tree": "relu(x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 8 + 16 - 16 + 128 - 320 + 704 - 640 + 64 - 448 + 3200 - 1 9136 + 9 5744 - 38 2912 + 114 8800 - 229 7536 + 229 7600 + 64 - 448 + 3200 - 1 9136 + 9 5744 - 38 2912", "x2": "add mul mod abs n INT- 9 x_0_1 sqr INT- 8", "tree": "(((abs(n) mod -9) mul x_0_1) add (-8)**2)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 3 - 5 - 8 - 12 - 17 - 23 - 30 - 38 - 47 - 57 - 68 - 80 - 93 - 107 - 122 - 138 - 155 - 173 - 192 - 212 - 233 - 255 - 278", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 10 + 9 - 20 - 27 + 80 + 135 - 480 - 945 + 3840 + 8505 - 3 8400 - 9 3555 + 46 800 + 121 6215 - 645 1200 - 1824 3225 + 1 321 9200 + 3 1013 4825 - 18 5794 5600 - 58 9256 1675 + 371 5891 2000 + 1237 4379 5175 - 8174 9606 4000 - 2 8461 728 9025", "x2": "mul x_0_2 sub sign INT+ 1 n", "tree": "(x_0_2 mul (sign(1) sub n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 9 + 5 + 4 + 1 + 1 + 1 + 9 + 25 + 64 + 25 + 9 + 1 + 49 + 9 + 1 + 169 + 36 + 1 + 121 + 81 + 256 + 361 + 100 + 169", "x2": "sqr relu mod add n sub INT- 1 0 x_0_2 n", "tree": "(relu(((n add (-10 sub x_0_2)) mod n)))**2", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 + 2 + 33 + 168 + 885 + 5364 + 3 7611 + 30 960 + 270 8721 + 2708 7300 + 2 9796 399 + 35 7552 4896 + 464 8182 3765 + 6507 4553 2836 + 9 7611 8299 2675 + 156 1789 2788 2944 + 2655 417 7401 201 + 4 7790 7519 3218 3780 + 90 8024 2867 1149 1991 + 1816 485 7342 2984 0 + 3 8137 200 4188 2664 189 + 83 9014 4409 2141 8608 4356 + 1929 7332 1411 9262 7994 395", "x2": "add relu mul add INT+ 8 x_0_1 n n", "tree": "(relu(((8 add x_0_1) mul n)) add n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 2 + 44 + 136 + 404 + 1042 + 2352 + 4768 + 8880 + 1 5458 + 2 5476 + 4 136 + 6 892 + 8 9474 + 12 7912 + 17 8560 + 24 4120 + 32 7666 + 43 2668 + 56 3016 + 72 3044 + 91 7554 + 115 1840 + 143 1712", "x2": "add add n x_0_1 abs add INT+ 8 relu sqr mul n abs sub n idiv n x_0_1", "tree": "((n add x_0_1) add abs((8 add relu(((n mul abs((n sub (n idiv x_0_1)))))**2))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 7 + 8 + 18 + 32 + 50 + 72 + 98 + 128 + 162 + 200 + 242 + 288 + 338 + 392 + 450 + 512 + 578 + 648 + 722 + 800 + 882 + 968 + 1058", "x2": "relu mul mod n x_0_1 mul INT+ 2 n", "tree": "relu(((n mod x_0_1) mul (2 mul n)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 7 - 8 + 9 + 43 + 56 - 55 - 336 - 496 + 558 + 3704 + 5960 - 7246 - 5 1848 - 8 9392 + 11 5944 + 88 1424 + 160 9064 - 220 2928 - 1762 8472 - 3379 336 + 4846 4424 + 4 545 4864 + 8 1096 8072 - 12 1161 592 - 105 4182 6456", "x2": "sub sub INT+ 8 mul n x_0_3 mul relu n mul add x_0_4 mul abs n n relu INT- 9", "tree": "((8 sub (n mul x_0_3)) sub (relu(n) mul ((x_0_4 add (abs(n) mul n)) mul relu(-9))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "+ 9 - 10 - 5 + 15 + 11 - 8 - 3 + 17 + 13 - 6 - 1 + 19 + 15 - 4 + 1 + 21 + 17 - 2 + 3 + 23 + 19 + 0 + 5 + 25", "x2": "add abs sign sub sub n abs n sqr INT+ 1 0 sub relu n x_0_2", "tree": "(abs(sign(((n sub abs(n)) sub (10)**2))) add (relu(n) sub x_0_2))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 7 - 1 + 2 + 2 + 3 + 0 + 4 + 2 + 4 + 3 + 4 + 0 + 0 + 3 + 2 + 0 + 0 + 0 + 2 + 0 + 4 + 0 + 2 + 0", "x2": "mod INT+ 1 0 add INT+ 4 mod add sub abs x_0_3 INT- 8 n INT+ 4", "tree": "(10 mod (4 add (((abs(x_0_3) sub -8) add n) mod 4)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 6 + 12 + 20 + 30 + 42 + 56 + 72 + 90 + 110 + 132 + 156 + 182 + 210 + 240 + 272 + 306 + 342 + 380 + 420 + 462 + 506", "x2": "relu add mul n n n", "tree": "relu(((n mul n) add n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 10 - 6 - 8 + 19 + 28 + 39 + 52 + 67 + 84 + 103 + 124 + 147 + 172 + 199 + 228 + 259 + 292 + 327 + 364 + 403 + 444 + 487 + 532 + 579 + 628", "x2": "add sqr n mod idiv INT+ 3 abs sign relu x_0_3 abs n", "tree": "((n)**2 add ((3 idiv abs(sign(relu(x_0_3)))) mod abs(n)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 10 + 7 - 1 - 4 - 3 - 2 - 1 - 4 - 3 - 2 - 1 - 4 - 3 - 2 - 1 - 4 - 3 - 2 - 1 - 4 - 3 - 2 - 1 - 4", "x2": "sub mod n INT- 4 sign abs sign add INT- 1 0 x_0_3", "tree": "((n mod -4) sub sign(abs(sign((-10 add x_0_3)))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 10 - 1 - 8 - 70 + 7 + 56 + 490 - 49 - 392 - 3430 + 343 + 2744 + 2 4010 - 2401 - 1 9208 - 16 8070 + 1 6807 + 13 4456 + 117 6490 - 11 7649 - 94 1192 - 823 5430 + 82 3543 + 658 8344 + 5764 8010", "x2": "mul sub sub n n x_0_3 sub abs INT- 7 idiv relu INT- 1 x_0_3", "tree": "(((n sub n) sub x_0_3) mul (abs(-7) sub (relu(-1) idiv x_0_3)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 4 + 3 + 3 + 2 + 2 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1", "x2": "sub abs x_0_2 sign mod x_0_2 x_0_2", "tree": "(abs(x_0_2) sub sign((x_0_2 mod x_0_2)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "- 5 + 1 - 4 - 3 + 0 + 7 + 3 + 5 + 9 + 17 + 14 + 17 + 22 + 31 + 29 + 33 + 39 + 49 + 48 + 53 + 60 + 71 + 71 + 77 + 85 + 97", "x2": "add x_0_4 n", "tree": "(x_0_4 add n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 10 - 6 - 8 + 5 + 7 + 9 + 10 + 10 + 10 + 11 + 13 + 15 + 16 + 16 + 16 + 17 + 19 + 21 + 22 + 22 + 22 + 23 + 25 + 27 + 28 + 28", "x2": "mod sub sign abs x_0_4 x_0_3 add abs n n", "tree": "((sign(abs(x_0_4)) sub x_0_3) mod (abs(n) add n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 3 - 3 - 5 + 14 + 21 - 35 - 55 + 114 + 175 - 331 - 513 + 1006 + 1553 - 3003 - 4643 + 9026 + 1 3947 - 2 7059 - 4 1821 + 8 1198 + 12 5485 - 24 3571 - 37 6431", "x2": "add mul INT- 4 x_0_2 add n x_0_2", "tree": "((-4 mul x_0_2) add (n add x_0_2))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "- 9 + 9 + 0 - 23 - 5 - 14 - 37 - 19 - 28 - 51 - 33 - 42 - 65 - 47 - 56 - 79 - 61 - 70 - 93 - 75 - 84 - 107 - 89 - 98 - 121", "x2": "add add idiv mul INT+ 4 idiv idiv INT+ 1 0 sqr INT- 3 INT+ 1 0 INT- 2 x_0_3 add INT- 4 INT- 1 0", "tree": "((((4 mul ((10 idiv (-3)**2) idiv 10)) idiv -2) add x_0_3) add (-4 add -10))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 2 + 5 + 12 + 28 + 65 + 150 + 346 + 798 + 1840 + 4242 + 9779 + 2 2543 + 5 1967 + 11 9796 + 27 6157 + 63 6604 + 146 7515 + 338 2951 + 779 8460 + 1797 7197 + 4144 1465 + 9553 1857 + 2 2022 2323 + 5 766 1769", "x2": "idiv sub sqr idiv x_0_1 sign mul n abs INT+ 7 sign x_0_2 x_0_2", "tree": "((((x_0_1 idiv sign((n mul abs(7)))))**2 sub sign(x_0_2)) idiv x_0_2)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 9 - 1 + 1 + 0 - 1 + 1 + 0 - 1 + 1 + 0 - 1 + 1 + 0 - 1 + 1 + 0 - 1 + 1 + 0 - 1 + 1 + 0 - 1", "x2": "sub sign sub x_0_1 idiv n add mul idiv x_0_1 sign INT+ 9 n x_0_1 abs relu x_0_1", "tree": "(sign((x_0_1 sub (n idiv (((x_0_1 idiv sign(9)) mul n) add x_0_1)))) sub abs(relu(x_0_1)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 7 - 1 + 25 - 9 + 108 + 0 + 717 - 53 + 6384 + 2192 + 7 117 + 2 6175 + 91 1368 + 36 6271 + 1367 313 + 586 99 + 2 3239 5052 + 1 548 1479 + 44 1550 5649 + 21 962 9203 + 927 2561 8212 + 464 1184 2007 + 2 1326 8921 8373 + 1 1138 8420 7619", "x2": "sub sub abs add abs relu mul mod n x_0_2 x_0_2 n sqr n INT- 3", "tree": "((abs((abs(relu(((n mod x_0_2) mul x_0_2))) add n)) sub (n)**2) sub -3)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 4 + 5 + 0 + 1 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 3 + 3 + 2 + 2 + 2 + 2 + 2 + 1 + 1 + 1", "x2": "mod INT+ 7 idiv add x_0_2 n relu INT+ 4", "tree": "(7 mod ((x_0_2 add n) idiv relu(4)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 2 - 6 - 4 - 7 + 6 + 4 - 3 - 3 - 3 - 3 + 69 + 49 - 3 - 3 - 3 - 3 + 1239 + 928 - 3 - 3 - 3 - 3 + 2 9733 + 2 3197 - 3 - 3 - 3", "x2": "mod INT- 3 mul n x_0_6", "tree": "(-3 mod (n mul x_0_6))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "6"}
{"x1": "+ 5 + 10 - 147 - 296 + 4415 + 8886 - 13 2443 - 26 6572 + 397 3299 + 799 7170 - 1 1919 8959 - 2 3991 5088 + 35 7596 8783 + 71 9745 2654 - 1072 7906 3475 - 2159 2357 9604 + 3 2183 7190 4267 + 6 4777 738 8138 - 96 5511 5712 7991 - 194 3312 2164 4120 + 2896 5347 1383 9751 + 5829 9366 4932 3622 - 8 6896 414 1519 2507 - 17 4898 994 7970 8636", "x2": "sub n mul mul abs sub INT- 1 0 relu INT- 1 x_0_2 INT+ 3", "tree": "(n sub ((abs((-10 sub relu(-1))) mul x_0_2) mul 3))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 6 - 3 - 19 - 44 - 80 - 129 - 193 - 274 - 374 - 495 - 639 - 808 - 1004 - 1229 - 1485 - 1774 - 2098 - 2459 - 2859 - 3300 - 3784 - 4313", "x2": "sub x_0_1 relu mul abs relu n n", "tree": "(x_0_1 sub relu((abs(relu(n)) mul n)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 3 - 12 - 27 - 48 - 75 - 108 - 147 - 192 - 243 - 300 - 363 - 432 - 507 - 588 - 675 - 768 - 867 - 972 - 1083 - 1200 - 1323 - 1452", "x2": "mul sub sqr sub n n mul n INT+ 3 n", "tree": "((((n sub n))**2 sub (n mul 3)) mul n)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 4 + 10 - 2 + 12 + 0 + 14 + 2 + 16 + 4 + 18 + 6 + 20 + 8 + 22 + 10 + 24 + 12 + 26 + 14 + 28 + 16 + 30", "x2": "add n sub n add abs idiv idiv mul n INT+ 1 n n x_0_1", "tree": "(n add (n sub (abs((((n mul 1) idiv n) idiv n)) add x_0_1)))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 6724 + 1 3778 + 2 1168 + 2 8900 + 3 6980 + 4 5414 + 5 4208 + 6 3368 + 7 2900 + 8 2810 + 9 3104 + 10 3788 + 11 4868 + 12 6350 + 13 8240 + 15 544 + 16 3268 + 17 6418 + 19 0 + 20 4020 + 21 8484 + 23 3398", "x2": "mul n sqr add n sqr add INT- 8 INT- 1", "tree": "(n mul ((n add ((-8 add -1))**2))**2)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "0"}
{"x1": "- 2 + 3 - 10 - 5 - 18 - 13 - 26 - 21 - 34 - 29 - 42 - 37 - 50 - 45 - 58 - 53 - 66 - 61 - 74 - 69 - 82 - 77 - 90 - 85", "x2": "add INT- 8 x_0_2", "tree": "(-8 add x_0_2)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3 - 2 - 1 + 0 - 5 - 4 - 3 - 2", "x2": "mod n sub idiv n sub sub sqr INT- 9 n add INT+ 1 0 sign n INT+ 6", "tree": "(n mod ((n idiv (((-9)**2 sub n) sub (10 add sign(n)))) sub 6))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 8 + 4 + 8 - 40 + 24 + 56 - 320 + 216 + 560 - 3520 + 2592 + 7280 - 4 9280 + 3 8880 + 11 6480 - 83 7760 + 69 9840 + 221 3120 - 1675 5200 + 1469 6640 + 4868 8640 - 3 8536 9600 + 3 5271 9360 + 12 1721 6000", "x2": "mul x_0_3 n", "tree": "(x_0_3 mul n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "- 10 + 190 + 4940 + 17 2900 + 760 7600 + 4 320 2800 + 249 9857 3600 + 1 7748 9872 5600 + 141 9918 9804 8000 + 1 2637 2789 2627 2000 + 123 8453 3347 7465 6000 + 1 3251 4506 8208 8819 2000 + 153 7168 2791 2230 3027 2000 + 1 9214 6034 8902 8787 8400 0 + 257 4756 8675 2985 7570 5600 0 + 3 6819 232 567 6963 2590 800 0 + 559 6491 5272 6289 8415 3692 1600 0 + 9 103 5135 8893 2664 4874 4437 7600 0 + 1531 7597 3101 1855 2962 8655 4419 2000 0 + 27 4184 9918 5112 2098 352 9324 1036 8000 0 + 5154 6778 4680 1095 4430 6351 2931 4918 4000 0 + 101 5471 5358 1981 5802 2835 1204 7503 8924 8000 0 + 2 918 7136 3788 8205 5270 4034 8178 5801 8508 8000 0", "x2": "sub abs mul abs mul x_0_1 mul sign n n abs abs INT+ 9 x_0_1", "tree": "(abs((abs((x_0_1 mul (sign(n) mul n))) mul abs(abs(9)))) sub x_0_1)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "1"}
{"x1": "+ 9 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484 + 529", "x2": "sqr idiv abs relu n mod sign n x_0_1", "tree": "((abs(relu(n)) idiv (sign(n) mod x_0_1)))**2", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 9 - 7 - 10 + 8 + 2 + 0 - 4 - 5 - 5 - 4 - 5 - 4 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 5 - 4 - 4 - 4", "x2": "sub mod idiv add mul x_0_1 x_0_6 add mod INT+ 2 INT+ 2 n n INT+ 2 INT+ 5", "tree": "(((((x_0_1 mul x_0_6) add ((2 mod 2) add n)) idiv n) mod 2) sub 5)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "+ 5 - 2 + 0 - 9 + 6 + 5 + 2 + 0 + 9 + 6 + 5 + 2 + 0 + 9 + 6 + 5 + 2 + 0 + 9 + 6 + 5 + 2 + 0 + 9 + 6 + 5 + 2", "x2": "abs sub x_0_5 sqr sqr idiv abs sqr INT+ 3 mul n n", "tree": "abs((x_0_5 sub (((abs((3)**2) idiv (n mul n)))**2)**2))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 7 + 2000 + 2970 + 7680 + 1 6250 + 3 240 + 5 1450 + 8 1920 + 12 3930 + 18 0 + 25 2890 + 34 5600 + 46 1370 + 60 3680 + 77 6250 + 98 3040 + 122 8250 + 151 6320 + 185 1930 + 224 0 + 268 5690 + 319 4400 + 377 1770", "x2": "abs abs mul mod n x_0_1 mul mul sub n INT- 8 INT- 1 0 sqr n", "tree": "abs(abs(((n mod x_0_1) mul (((n sub -8) mul -10) mul (n)**2))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 10 - 9 + 10 + 3 + 1 + 16 - 2 + 18 + 12 + 11 + 27 + 10 + 31 + 26 + 26 + 43 + 27 + 49 + 45 + 46 + 64 + 49 + 72 + 69 + 71 + 90 + 76", "x2": "add x_0_5 n", "tree": "(x_0_5 add n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 9 - 6 + 3 + 4 + 4 + 4 - 15 - 4 - 4 - 5 - 6 - 31 - 19 - 19 - 22 - 23 - 54 - 41 - 41 - 47 - 48 - 91 - 70 - 70 - 80 - 81 - 123", "x2": "add sub sign sign x_0_5 relu n add x_0_5 mod abs n idiv x_0_5 INT+ 3", "tree": "((sign(sign(x_0_5)) sub relu(n)) add (x_0_5 add (abs(n) mod (x_0_5 idiv 3))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "5"}
{"x1": "- 7 - 5 + 6 - 8 - 57 - 65 - 64 - 88 - 147 - 165 - 174 - 208 - 277 - 305 - 324 - 368 - 447 - 485 - 514 - 568 - 657 - 705 - 744 - 808 - 907 - 965", "x2": "sub x_0_4 mul n INT+ 1 0", "tree": "(x_0_4 sub (n mul 10))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "4"}
{"x1": "+ 2 + 6 + 1 - 5 + 4 + 1 + 6 + 2 + 7 + 6 + 4 + 10 + 7 + 7 + 12 + 11 + 12 + 10 + 11 + 16 + 16 + 18 + 17 + 19 + 18 + 19 + 22", "x2": "mod sub mod mod x_0_5 sqr INT+ 8 INT- 6 idiv n INT+ 5 n", "tree": "((((x_0_5 mod (8)**2) mod -6) sub (n idiv 5)) mod n)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 5 - 5 + 5 - 10 - 12 - 21 + 56 - 27 + 120 + 154 + 276 - 702 + 406 - 1770 - 2432 - 4658 + 1 2672 - 7676 + 3 5440 + 5 1114 + 10 2520 - 29 1410 + 18 4272 - 88 5950 - 132 8912 - 276 7986", "x2": "mul sub sign n sub x_0_5 sign idiv abs INT- 7 sign INT+ 3 n", "tree": "((sign(n) sub (x_0_5 sub sign((abs(-7) idiv sign(3))))) mul n)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "+ 7 - 70 + 700 - 7000 + 7 0 - 70 0 + 700 0 - 7000 0 + 7 0 0 - 70 0 0 + 700 0 0 - 7000 0 0 + 7 0 0 0 - 70 0 0 0 + 700 0 0 0 - 7000 0 0 0 + 7 0 0 0 0 - 70 0 0 0 0 + 700 0 0 0 0 - 7000 0 0 0 0 + 7 0 0 0 0 0 - 70 0 0 0 0 0 + 700 0 0 0 0 0", "x2": "mul INT- 1 0 x_0_1", "tree": "(-10 mul x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 168 + 9408 - 52 6848 + 2950 3488 - 16 5219 5328 + 925 2293 8368 - 5 1812 8454 8608 + 290 1519 3472 2048 - 1 6248 5083 4443 4688 + 90 9916 4672 8834 2528 - 5095 5322 1681 4718 1568 + 28 5349 8041 4162 4216 7808 - 1597 9589 319 3095 6139 7248 + 8 9485 6985 7881 3354 3824 5888 - 501 1199 1204 1354 7845 4176 9728 + 2 8062 7150 7431 5867 9343 3910 4768 - 157 1512 441 6168 8604 3229 8986 7008 + 8800 4674 4730 5456 1842 874 3255 2448 - 49 2826 1770 4910 5546 3156 8962 2293 7088 + 2759 8265 9147 4991 593 6786 1884 8447 6928 - 15 4550 2891 2259 9499 3246 26 5551 3070 7968 + 865 4816 1908 6557 1962 1776 1487 873 1964 6208", "x2": "mul mul mod mul INT- 3 sign relu idiv INT+ 2 n INT+ 1 0 x_0_1 INT- 8", "tree": "((((-3 mul sign(relu((2 idiv n)))) mod 10) mul x_0_1) mul -8)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 8 + 9 - 1 + 10 + 490 + 680 + 909 + 1220 + 1716 + 2052 - 3653 - 6174 - 9570 - 1 4640 - 2 3375 - 3 114 + 7 7368 + 13 2700 + 21 1575 + 33 4202 + 55 1402 + 73 8312 - 191 6675 - 343 570 - 569 628 - 933 3324", "x2": "mul n add sub sqr sub idiv INT- 2 n n x_0_6 n", "tree": "(n mul (((((-2 idiv n) sub n))**2 sub x_0_6) add n))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "+ 1 + 2 + 4 + 7 + 11 + 16 + 22 + 29 + 37 + 46 + 56 + 67 + 79 + 92 + 106 + 121 + 137 + 154 + 172 + 191 + 211 + 232 + 254", "x2": "sub n sub INT+ 1 x_0_1", "tree": "(n sub (1 sub x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 5 + 15 - 60 + 300 - 1800 + 1 2600 - 10 800 + 90 7200 - 907 2000 + 9979 2000 - 11 9750 4000 + 155 6755 2000 - 2179 4572 8000 + 3 2691 8592 0 - 52 3069 7472 0 + 889 2185 7024 0 - 1 6005 9342 6432 0 + 30 4112 7510 2208 0 - 608 2255 204 4160 0 + 1 2772 7355 4292 7360 0 - 28 1000 1819 4440 1920 0 + 646 3004 1847 2124 4160 0 - 1 5511 2100 4333 985 9840 0", "x2": "mul sub add INT- 7 add n INT+ 6 add n n x_0_1", "tree": "(((-7 add (n add 6)) sub (n add n)) mul x_0_1)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 1 + 1 - 5 + 6 - 2 + 1 - 5 + 10 - 3 + 1 - 5 + 14 - 3 + 1 - 6 + 18 - 4 + 1 - 6 + 22 - 4 + 1 - 7", "x2": "idiv add sign relu abs add add n n mul INT+ 6 n n x_0_2", "tree": "((sign(relu(abs(((n add n) add (6 mul n))))) add n) idiv x_0_2)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 5 + 204 7761 + 983 4496 + 1139 625 + 6737 1264 + 8576 6121 + 0 + 3 8742 489 + 0 + 12 9146 7969 + 0 + 35 1874 3761 + 0 + 83 376 5625 + 0 + 175 9628 7801 + 0 + 342 9644 7249 + 0 + 625 2350 2209 + 0 + 1079 1816 3081 + 0", "x2": "sqr mul abs mul n n idiv mul mod x_0_2 mul INT- 6 INT+ 9 n INT- 1", "tree": "((abs((n mul n)) mul (((x_0_2 mod (-6 mul 9)) mul n) idiv -1)))**2", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 8 + 4 + 5 + 2 + 4 + 2 - 3 - 5 - 4 - 2 - 3 - 5 - 4 - 2 - 3 - 5 - 4 - 2 - 3 - 5 - 4 - 2 - 3", "x2": "sub abs abs x_0_2 mod INT+ 7 n", "tree": "(abs(abs(x_0_2)) sub (7 mod n))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 7 - 3 - 8 - 9 + 8 + 0 - 12 - 7 - 7 + 11 - 10 - 17 + 0 - 6 + 13 - 23 - 13 + 12 - 12 + 17 - 41 + 4 + 20 - 30 + 27 - 64 + 39 + 14", "x2": "add sqr idiv x_0_4 n sub x_0_5 add INT+ 6 x_0_6", "tree": "(((x_0_4 idiv n))**2 add (x_0_5 sub (6 add x_0_6)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 5 - 7 - 8 + 3 2771 + 1939 + 1 3574 + 1 265 + 9 2386 + 92 3861 + 1016 2472 + 1 2194 9665 + 15 8534 5646 + 221 9483 9045 + 3329 2258 5676 + 5 3267 6137 817 + 90 5549 4330 3890 + 1629 9889 7947 21 + 3 969 7906 993 400 + 61 9395 8121 9860 8001 + 1300 7312 561 7076 8022 + 2 8616 865 2357 5689 6485 + 65 8169 9900 4224 861 9156 + 1579 6079 7610 1378 685 9745 + 3 9490 1994 253 4451 7149 3626 + 102 6745 1844 6589 5744 5883 4277", "x2": "add sign INT+ 4 mul n mod x_0_1 add sign add relu INT- 8 x_0_3 sqr sqr x_0_4", "tree": "(sign(4) add (n mul (x_0_1 mod (sign((relu(-8) add x_0_3)) add ((x_0_4)**2)**2))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 6 + 7 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 79 - 84 - 4 - 4 - 99 - 104 - 4 - 4", "x2": "add mul mod sign sub sqr x_0_2 n n INT- 5 sign sub x_0_2 sub x_0_2 n", "tree": "(((sign(((x_0_2)**2 sub n)) mod n) mul -5) add sign((x_0_2 sub (x_0_2 sub n))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "2"}
{"x1": "- 4 + 3 + 1 + 3 + 1 + 1 + 2 + 3 + 4 + 3 + 4 + 7 + 2 + 9 + 4 + 11 + 6 + 13 + 8 + 11 + 6 + 13 + 8", "x2": "mod INT- 5 mul x_0_1 idiv n x_0_1", "tree": "(-5 mod (x_0_1 mul (n idiv x_0_1)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 8 + 9 - 9 + 0 - 7 - 5 + 6 + 0 + 0 + 0 + 4 + 6 + 5 - 1 - 1 - 1 + 3 + 6 + 4 + 19 + 19 + 20 + 2 + 6 + 3 + 19 + 18 + 19", "x2": "sub mod x_0_6 n relu sign sub sqr mod x_0_1 n n", "tree": "((x_0_6 mod n) sub relu(sign((((x_0_1 mod n))**2 sub n))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "6"}
{"x1": "- 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3 - 2 - 1 + 0 - 4 - 3", "x2": "mod n INT- 5", "tree": "(n mod -5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 6 + 5 + 8 + 12 + 10 + 16 + 24 + 20 + 32 + 48 + 40 + 64 + 96 + 80 + 128 + 192 + 160 + 256 + 384 + 320 + 512 + 768 + 640 + 1024 + 1536", "x2": "relu mul INT+ 2 x_0_3", "tree": "relu((2 mul x_0_3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 6 - 1 - 8 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0 + 0 + 1 + 0", "x2": "abs idiv x_0_3 INT- 7", "tree": "abs((x_0_3 idiv -7))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 7 + 7 + 9 - 6 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0 + 0 + 0 - 1 + 0 + 0", "x2": "idiv mod add x_0_5 relu INT- 2 add x_0_5 idiv add n INT- 8 INT- 8 n", "tree": "(((x_0_5 add relu(-2)) mod (x_0_5 add ((n add -8) idiv -8))) idiv n)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 6 + 9 + 13 + 18 + 24 + 31 + 39 + 48 + 58 + 69 + 81 + 94 + 108 + 123 + 139 + 156 + 174 + 193 + 213 + 234 + 256 + 279", "x2": "relu add n x_0_1", "tree": "relu((n add x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 2 + 2 + 9 + 9 + 25 + 25 + 49 + 49 + 81 + 81 + 121 + 121 + 169 + 169 + 225 + 225 + 289 + 289 + 361 + 361 + 441 + 441 + 529 + 529 + 625", "x2": "sqr sub relu n sqr idiv x_0_3 x_0_2", "tree": "((relu(n) sub ((x_0_3 idiv x_0_2))**2))**2", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "abs sqr n", "tree": "abs((n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "- 18 + 0 + 14 + 24 + 30 + 32 + 30 + 24 + 14 + 0 - 18 - 40 - 66 - 96 - 130 - 168 - 210 - 256 - 306 - 360 - 418 - 480", "x2": "mul sub sub INT+ 4 n n add n INT- 1 0", "tree": "(((4 sub n) sub n) mul (n add -10))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 12 + 2 - 18 + 5 - 40 + 18 - 50 + 17 - 60 + 34 - 70 + 29 - 80 + 50 - 90 + 41 - 100 + 66 - 110 + 53 - 120 + 82", "x2": "sub mul n idiv x_0_1 idiv x_0_1 idiv INT+ 9 mul sign sign x_0_1 add n sub INT- 2 n INT+ 1 0", "tree": "((n mul (x_0_1 idiv (x_0_1 idiv (9 idiv (sign(sign(x_0_1)) mul (n add (-2 sub n))))))) sub 10)", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "- 4 - 6 + 12 + 12 + 6 + 6 + 0 + 2 + 6 + 4 + 0 + 4 + 6 + 2 + 0 + 6 + 6 + 0 + 2 + 6 + 4 + 0 + 4 + 6", "x2": "add sign mul INT- 1 0 x_0_1 add abs sub INT+ 7 add idiv n n x_0_2 sign sign n", "tree": "(sign((-10 mul x_0_1)) add (abs((7 sub ((n idiv n) add x_0_2))) add sign(sign(n))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "2"}
{"x1": "- 9 - 15 - 26 - 49 - 93 - 179 - 349 - 695 - 1386 - 2767 - 5528 - 1 1049 - 2 2090 - 4 4171 - 8 8332 - 17 6653 - 35 3294 - 70 6575 - 141 3136 - 282 6257 - 565 2498 - 1130 4979 - 2260 9940", "x2": "add add mod INT- 8 n add x_0_1 x_0_1 abs INT+ 3", "tree": "(((-8 mod n) add (x_0_1 add x_0_1)) add abs(3))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "+ 8 - 3 + 6 + 3 + 4 + 8 + 3 + 6 + 3 + 4 + 8 + 3 + 6 + 3 + 4 + 8 + 3 + 6 + 3 + 4 + 8 + 3 + 6 + 3 + 4 + 8 + 3", "x2": "abs x_0_5", "tree": "abs(x_0_5)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "5"}
{"x1": "+ 1 - 10 - 8 + 1 - 10 - 8 + 1 - 10 - 8 + 1 - 10 - 8 + 1 - 10 - 8 + 1 - 10 - 8 + 1 - 10 - 8 + 1 - 10 - 8 + 1", "x2": "sub x_0_3 relu idiv idiv sign sub n idiv x_0_2 abs INT+ 1 0 n x_0_3", "tree": "(x_0_3 sub relu(((sign((n sub (x_0_2 idiv abs(10)))) idiv n) idiv x_0_3)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "3"}
{"x1": "+ 2 - 8 + 4 + 5 - 8 + 2 - 18 + 6 + 8 - 18 + 2 - 38 + 10 + 14 - 38 + 2 - 78 + 18 + 26 - 78 + 2 - 158 + 34 + 50 - 158 + 2 - 318", "x2": "add INT- 2 mul x_0_5 INT+ 2", "tree": "(-2 add (x_0_5 mul 2))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 2 + 0 + 0 + 4 + 5 + 0 + 0 + 8 + 9 - 10 - 11 + 24 + 26 - 42 - 45 + 112 + 119 - 270 - 304 + 780 + 924 - 2442 - 3013 + 8376", "x2": "add mul idiv idiv x_0_2 sign sign INT+ 2 INT- 7 n n", "tree": "((((x_0_2 idiv sign(sign(2))) idiv -7) mul n) add n)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 1 - 8 - 8 + 8 + 8 - 8 - 8 + 8 + 8 - 8 - 8 + 8 + 8 - 8 - 8 + 8 + 8 - 8 - 8 + 8 + 8 - 8 - 8", "x2": "mul INT- 8 sign mod n x_0_2", "tree": "(-8 mul sign((n mod x_0_2)))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "2"}
{"x1": "+ 5 + 8 + 21 + 80 + 395 + 2364 + 1 6541 + 13 2320 + 119 871 + 1190 8700 + 1 3099 5689 + 15 7194 8256 + 204 3532 7315 + 2860 9458 2396 + 4 2914 1873 5925 + 68 6626 9977 4784 + 1167 2658 9617 1311 + 2 1010 7861 3108 3580 + 39 9204 9364 9058 8001 + 798 4098 7298 1176 0 + 1 6766 6073 3260 4695 9979 + 36 8865 3613 1730 3311 9516 + 848 3903 3102 9797 6174 8845", "x2": "abs abs relu sub relu mul n x_0_1 n", "tree": "abs(abs(relu((relu((n mul x_0_1)) sub n))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 5 + 25 + 125 + 625 + 20 + 100 + 500 + 2500 + 1 2500 + 1 2495 + 6 2475 + 1290 + 6450 + 3 2250 + 16 1250 + 15 820 + 33 6455 + 10 7500 + 53 7500 + 28 7335 + 46 4210 + 114 9705 + 15 1425", "x2": "mul INT+ 5 mod x_0_1 add sub n INT+ 5 mod INT- 4 abs sqr sqr n", "tree": "(5 mul (x_0_1 mod ((n sub 5) add (-4 mod abs(((n)**2)**2)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 4 + 32 + 108 + 256 + 500 + 864 + 1372 + 2048 + 2916 + 4000 + 5324 + 6912 + 8788 + 1 976 + 1 3500 + 1 6384 + 1 9652 + 2 3328 + 2 7436 + 3 2000 + 3 7044 + 4 2592", "x2": "mul n sqr add n relu n", "tree": "(n mul ((n add relu(n)))**2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "- 5 - 12 - 21 - 32 - 45 - 60 - 77 - 96 - 117 - 140 - 165 - 192 - 221 - 252 - 285 - 320 - 357 - 396 - 437 - 480 - 525 - 572", "x2": "mul n add INT+ 6 sub INT- 1 0 relu n", "tree": "(n mul (6 add (-10 sub relu(n))))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 6 - 7 + 4 + 0 + 0 + 7 + 0 + 0 + 10 + 0 + 0 + 13 + 0 + 0 + 16 + 0 + 0 + 19 + 0 + 0 + 22 + 0 + 0 + 25", "x2": "mod n idiv add x_0_3 relu n idiv INT+ 5 INT+ 3", "tree": "(n mod ((x_0_3 add relu(n)) idiv (5 idiv 3)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 0 - 1 + 8 + 0 + 30 + 7 + 0 + 27 + 70 + 0 + 36 + 65 + 0 + 90 + 16 + 0 + 0 + 304 + 0 + 0 + 396 + 0 + 0 + 525", "x2": "relu mul n mod add mul relu INT- 1 add mul mul INT- 8 n INT+ 5 sub x_0_3 INT+ 7 x_0_3 n", "tree": "relu((n mul (((relu(-1) mul (((-8 mul n) mul 5) add (x_0_3 sub 7))) add x_0_3) mod n)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 9 + 10 + 6 - 1 - 1 - 1 - 2 - 3 - 3 - 1 - 1 - 1 - 4 - 5 - 5 - 1 - 1 - 1 - 6 - 7 - 7 - 1 - 1 - 1 - 8", "x2": "idiv sub INT+ 1 n add n add INT+ 6 idiv abs sub n INT- 3 x_0_3", "tree": "((1 sub n) idiv (n add (6 add (abs((n sub -3)) idiv x_0_3))))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "+ 16 + 36 + 64 + 100 + 144 + 196 + 256 + 324 + 400 + 484 + 576 + 676 + 784 + 900 + 1024 + 1156 + 1296 + 1444 + 1600 + 1764 + 1936 + 2116", "x2": "sqr sub n sub INT- 2 n", "tree": "((n sub (-2 sub n)))**2", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 3 + 9 + 4 - 24 - 3 - 16 - 3 - 3 - 16 - 3 - 3 - 16 - 3 - 3 - 16 - 3 - 3 - 16 - 3 - 3 - 16 - 3 - 3 - 16 - 3", "x2": "mod x_0_3 sub add sub x_0_3 relu sub add x_0_1 INT+ 9 INT- 8 INT- 6 x_0_3", "tree": "(x_0_3 mod (((x_0_3 sub relu(((x_0_1 add 9) sub -8))) add -6) sub x_0_3))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "3"}
{"x1": "- 3 - 12 - 27 - 48 - 75 - 108 - 147 - 192 - 243 - 300 - 363 - 432 - 507 - 588 - 675 - 768 - 867 - 972 - 1083 - 1200 - 1323 - 1452", "x2": "mul mul abs n n INT- 3", "tree": "((abs(n) mul n) mul -3)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 1 - 1 - 7 + 9 - 5 - 4 + 789 - 1019 - 9067 + 1 4405 - 9675 - 9211 + 213 3461 - 319 5579 - 3264 1195 + 5900 2885 - 4473 7195 - 4774 9819 + 123 2287 741 - 204 5170 5595 - 2303 1627 1915 + 4569 1834 1445 - 3786 5561 8475 - 4400 6233 1899 + 123 2287 741 5 - 221 2056 4771 5515 - 2686 4089 9561 6555 + 5731 5836 7508 6085", "x2": "add relu INT+ 5 mul mul x_0_6 sqr INT+ 4 mul sign n add sub sqr n n n", "tree": "(relu(5) add ((x_0_6 mul (4)**2) mul (sign(n) mul (((n)**2 sub n) add n))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 2 - 6 - 3 - 2 - 1 + 0 + 1 + 2 + 3 + 4 + 6 + 7 + 8 + 10 + 11 + 12 + 14 + 15 + 16 + 18 + 19 + 20 + 22 + 23", "x2": "add add n INT- 6 relu idiv add sign mod x_0_2 relu INT+ 2 x_0_2 INT+ 4", "tree": "((n add -6) add relu(((sign((x_0_2 mod relu(2))) add x_0_2) idiv 4)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 10 + 1 + 1 - 2 - 2 - 1 - 1 - 2 - 2 - 1 - 1 - 2 - 2 - 1 - 1 - 2 - 2 - 1 - 1 - 2 - 2 - 1 - 1 - 2", "x2": "add mod idiv n n abs x_0_2 add INT- 2 mod add sqr n mod n INT+ 8 x_0_3", "tree": "(((n idiv n) mod abs(x_0_2)) add (-2 add (((n)**2 add (n mod 8)) mod x_0_3)))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "3"}
{"x1": "+ 3 - 9 + 2 - 3 - 15 + 93 + 172 + 365 + 835 + 1019 + 834 - 887 - 4071 + 1009 - 3820 + 1 3849 + 5 6195 + 10 5327 + 23 7394 + 37 7845 + 36 2325 - 1 2639 - 163 6480 + 62 8045 - 128 185 + 264 8843", "x2": "add abs mul x_0_1 INT+ 2 mul x_0_4 INT- 7", "tree": "(abs((x_0_1 mul 2)) add (x_0_4 mul -7))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "- 5 + 7 - 8 - 1 + 12 - 2 + 6 + 20 + 7 + 16 + 31 + 19 + 29 + 45 + 34 + 45 + 62 + 52 + 64 + 82 + 73 + 86 + 105 + 97 + 111", "x2": "add n x_0_3", "tree": "(n add x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 4 + 2 - 9 - 8 + 4 + 2 + 9 + 8 + 4 + 2 + 9 + 8 + 4 + 2 + 9 + 8 + 4 + 2 + 9 + 8 + 4 + 2 + 9 + 8 + 4 + 2", "x2": "abs mul add idiv relu add INT- 5 INT- 7 abs x_0_5 sign n x_0_4", "tree": "abs((((relu((-5 add -7)) idiv abs(x_0_5)) add sign(n)) mul x_0_4))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "5"}
{"x1": "- 8 - 7 + 8 + 0 + 7 - 5 - 8 - 7 + 8 + 0 + 7 - 5 - 8 - 7 + 8 + 0 + 7 - 5 - 8 - 7 + 8 + 0 + 7 - 5 - 8 - 7 + 8 + 0", "x2": "sub x_0_6 mod mod sqr mul n abs x_0_1 n INT+ 8", "tree": "(x_0_6 sub ((((n mul abs(x_0_1)))**2 mod n) mod 8))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "6"}
{"x1": "- 3 + 10 - 9 + 40 - 45 + 240 - 315 + 1920 - 2835 + 1 9200 - 3 1185 + 23 400 - 40 5405 + 322 5600 - 608 1075 + 5160 9600 - 1 337 8275 + 9 2897 2800 - 19 6418 7225 + 185 7945 6000 - 412 4793 1725 + 4087 4803 2000 - 9487 242 9675 + 9 8099 5276 8000", "x2": "mul x_0_2 n", "tree": "(x_0_2 mul n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "+ 10 + 44 + 108 + 208 + 350 + 540 + 784 + 1088 + 1458 + 1900 + 2420 + 3024 + 3718 + 4508 + 5400 + 6400 + 7514 + 8748 + 1 108 + 1 1600 + 1 3230 + 1 5004", "x2": "mul n add mul abs sqr INT+ 3 n mul abs n relu n", "tree": "(n mul ((abs((3)**2) mul n) add (abs(n) mul relu(n))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "0"}
{"x1": "- 1 - 1 - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 2 - 2 - 2 - 2 - 2 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 4", "x2": "idiv n INT- 7", "tree": "(n idiv -7)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 8 - 10 - 13 - 17 - 22 - 28 - 35 - 43 - 52 - 62 - 73 - 85 - 98 - 112 - 127 - 143 - 160 - 178 - 197 - 217 - 238 - 260 - 283", "x2": "sub x_0_1 n", "tree": "(x_0_1 sub n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 4 + 48 + 100 + 180 + 294 + 448 + 648 + 900 + 1210 + 1584 + 2028 + 2548 + 3150 + 3840 + 4624 + 5508 + 6498 + 7600 + 8820 + 1 164 + 1 1638 + 1 3248 + 1 5000", "x2": "mul sqr add mod sign INT+ 3 mul x_0_2 mul INT+ 2 x_0_2 n n", "tree": "((((sign(3) mod (x_0_2 mul (2 mul x_0_2))) add n))**2 mul n)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "mul n n", "tree": "(n mul n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 9 + 10 + 20 + 24 + 44 + 56 + 98 + 126 + 214 + 282 + 466 + 626 + 1014 + 1382 + 2204 + 3042 + 4792 + 6686 + 1 424 + 1 4678 + 2 2686 + 3 2196 + 4 9400 + 7 572", "x2": "mul sub x_0_2 idiv sub sub INT- 3 n x_0_1 sqr INT- 4 abs INT- 2", "tree": "((x_0_2 sub (((-3 sub n) sub x_0_1) idiv (-4)**2)) mul abs(-2))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 4 + 6 + 8 + 1 + 3 + 5 + 7 + 0 + 2 + 4 + 6 + 8 + 1 + 3 + 5 + 7 + 0 + 2 + 4 + 6", "x2": "mod add abs sub add relu n sub INT- 4 INT- 4 INT- 7 n INT+ 9", "tree": "((abs(((relu(n) add (-4 sub -4)) sub -7)) add n) mod 9)", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "0"}
{"x1": "- 1 - 5 - 3 + 2 - 7 + 4 - 2 - 5 + 9 - 11 + 6 + 3 - 14 + 20 - 17 + 3 + 17 - 34 + 37 - 20 - 14 + 51 - 71 + 57 - 6", "x2": "sub x_0_3 x_0_1", "tree": "(x_0_3 sub x_0_1)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr abs n", "tree": "(abs(n))**2", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 8 - 5 - 4 + 3 + 8 + 0 + 0 + 3 + 8 + 0 + 0 + 3 + 8 + 0 + 0 + 3 + 8 + 0 + 0 + 3 + 8 + 0 + 0 + 3 + 8 + 0", "x2": "relu x_0_4", "tree": "relu(x_0_4)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "4"}
{"x1": "- 10 - 1 + 0 + 0 + 0 + 0 + 0 + 1 + 1 + 0 + 0 + 1 + 1 + 0 + 0 + 2 + 1 + 0 + 0 + 2 + 2 + 0 + 0 + 3", "x2": "relu idiv relu n sub INT+ 8 sub mod mul n x_0_2 mul n INT- 3 x_0_1", "tree": "relu((relu(n) idiv (8 sub (((n mul x_0_2) mod (n mul -3)) sub x_0_1))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "2"}
{"x1": "- 2 - 6 + 1 - 1 + 4 + 3 + 2 + 1 + 0 + 1 + 2 + 3 + 0 + 5 + 6 + 7 + 0 + 9 + 10 + 11 + 0 + 13 + 14 + 15 + 0 + 17", "x2": "add mod add INT+ 5 relu x_0_3 INT+ 1 relu abs add mod x_0_4 x_0_4 sub n sqr INT- 3", "tree": "(((5 add relu(x_0_3)) mod 1) add relu(abs(((x_0_4 mod x_0_4) add (n sub (-3)**2)))))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "4"}
{"x1": "- 8 + 3 - 21 - 59 + 5 - 289 - 1438 + 8 - 1 1495 - 9 1950 + 11 - 101 1438 - 1112 5805 + 14 - 1 5576 1255 - 21 8065 7554 + 17 - 370 7117 8400 - 6302 1003 2781 + 20 - 12 6042 65 5599 - 252 840 1311 1958 + 23 - 5797 9323 157 5010", "x2": "mod n mul x_0_1 x_0_2", "tree": "(n mod (x_0_1 mul x_0_2))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 2 + 1 + 3 + 2 + 4 + 3 + 5 + 4 + 6 + 5 + 7 + 6 + 8 + 7 + 9 + 8 + 10 + 9 + 11 + 10 + 12 + 11", "x2": "abs sub x_0_1 n", "tree": "abs((x_0_1 sub n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr mod n sqr INT- 7", "tree": "((n mod (-7)**2))**2", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 1 + 8 + 4 + 3 + 9 + 5 + 4 + 9 + 5 + 4 + 9 + 5 + 4 + 9 + 5 + 4 + 9 + 5 + 4 + 9 + 5 + 4 + 9 + 5", "x2": "add idiv add sign n abs sub mod n n sub INT+ 3 INT- 4 n mod x_0_3 add x_0_3 INT+ 4", "tree": "(((sign(n) add abs(((n mod n) sub (3 sub -4)))) idiv n) add (x_0_3 mod (x_0_3 add 4)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "3"}
{"x1": "+ 3 + 0 + 0 - 2 - 6 - 6 - 3 - 6 - 5 - 6 - 6 - 6 - 3 - 6 - 5 - 4 - 5 - 6 - 3 - 6 - 5 - 5 - 6", "x2": "add relu sub INT- 2 mod n x_0_1 mod INT- 6 sub x_0_1 n", "tree": "(relu((-2 sub (n mod x_0_1))) add (-6 mod (x_0_1 sub n)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 10 + 3 - 2 + 7 - 10 + 8 - 5 + 0 - 9 + 11 - 6 + 12 - 1 + 7 - 9 + 5 - 14 + 5 - 9 + 7 + 7 + 24 + 9 + 7 + 5 + 4 - 5", "x2": "sub sub mod sqr mul add x_0_5 abs mod sub INT- 5 INT- 8 INT+ 9 x_0_6 n x_0_5 INT+ 2", "tree": "((((((x_0_5 add abs(((-5 sub -8) mod 9))) mul x_0_6))**2 mod n) sub x_0_5) sub 2)", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "- 196 - 144 - 100 - 64 - 36 - 16 - 4 + 0 - 4 - 16 - 36 - 64 - 100 - 144 - 196 - 256 - 324 - 400 - 484 - 576 - 676 - 784", "x2": "mul sqr sub INT- 4 sub INT+ 4 n INT- 4", "tree": "(((-4 sub (4 sub n)))**2 mul -4)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 5 - 5 - 2 + 8 + 3 + 84 + 16 + 54 + 750 + 88 + 372 + 9555 + 490 + 5685 + 15 1488 + 2023 + 6 9678 + 286 8981 + 7 3260 + 171 8031 + 6307 3098 + 8 2409 + 2762 2824 + 15 7499 5975 + 4252 6198 + 9 5715 7425 + 440 9757 9876", "x2": "add mod n sqr x_0_2 abs mul add sub x_0_3 mod INT- 7 sub x_0_5 sign x_0_6 INT- 8 n", "tree": "((n mod (x_0_2)**2) add abs((((x_0_3 sub (-7 mod (x_0_5 sub sign(x_0_6)))) add -8) mul n)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "6"}
{"x1": "+ 7 - 2 - 8 + 0 - 1 - 8 - 7 - 7 - 14 - 20 - 26 - 39 - 58 - 83 - 121 - 178 - 260 - 380 - 557 - 816 - 1195 - 1751 - 2566 - 3760 - 5510", "x2": "add add x_0_3 sign n x_0_1", "tree": "((x_0_3 add sign(n)) add x_0_1)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "3"}
{"x1": "- 3 - 3 + 2 + 2 - 9 + 2 - 22 - 28 - 38 + 2 + 2 - 284 + 2 - 568 - 1106 - 2180 + 2 + 2 - 1 1358 + 2 - 4 7958 - 9 5872 - 19 1698 + 2 + 2 - 129 4864 + 2", "x2": "mod INT+ 2 mul sub n sub sign INT+ 9 x_0_1 x_0_5", "tree": "(2 mod ((n sub (sign(9) sub x_0_1)) mul x_0_5))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "5"}
{"x1": "- 7 + 3 + 10 + 0 + 2 + 9 + 0 + 1 + 8 + 0 + 0 + 7 + 0 + 0 + 6 + 0 + 0 + 5 + 0 + 0 + 4 + 0 + 0 + 3 + 0", "x2": "relu add sign idiv n INT- 3 x_0_3", "tree": "relu((sign((n idiv -3)) add x_0_3))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 4 - 9 - 5 - 9 - 10 - 12 - 10 - 12 - 10 - 12 - 10 - 13 - 10 - 13 - 11 - 13 - 11 - 13 - 13 - 11 - 11 - 13 - 11 - 12 - 12 - 14", "x2": "add sub idiv n x_0_1 mul INT- 1 INT- 1 0 sign mod INT- 6 add x_0_4 mod x_0_1 INT+ 1 0", "tree": "(((n idiv x_0_1) sub (-1 mul -10)) add sign((-6 mod (x_0_4 add (x_0_1 mod 10)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "- 1 - 1 + 0 + 1 + 2 + 2 + 3 + 4 + 5 + 6 + 6 + 7 + 8 + 9 + 10 + 10 + 11 + 12 + 13 + 14 + 14 + 15", "x2": "add idiv n INT- 5 mod INT- 2 n", "tree": "((n idiv -5) add (-2 mod n))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "0"}
{"x1": "- 8 + 0 + 10 - 1 - 12 + 5 + 22 + 2 - 9 + 9 + 27 + 7 - 11 + 11 + 32 + 2 - 8 + 16 + 37 + 2 - 5 + 20 + 42 + 5 - 5 + 25", "x2": "add sub x_0_4 mod x_0_1 x_0_2 INT+ 5", "tree": "((x_0_4 sub (x_0_1 mod x_0_2)) add 5)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "4"}
{"x1": "+ 6 - 5 + 0 + 24 - 25 + 0 + 168 - 200 + 0 + 1680 - 2200 + 0 + 2 1840 - 3 800 + 0 + 34 9440 - 52 3600 + 0 + 663 9360 - 1047 2000 + 0 + 1 4606 5920 - 2 4085 6000 + 0 + 36 5164 8000", "x2": "mul n x_0_3", "tree": "(n mul x_0_3)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 3 + 7 - 1 + 0 - 4 - 1 - 4 - 1 + 0 - 1 - 1 - 4 + 0 + 0 - 4 - 1 - 4 - 1 + 0 - 1 - 1 - 4 + 0 + 0", "x2": "mod sqr sub sub abs x_0_3 INT+ 7 sign x_0_2 INT- 5", "tree": "((((abs(x_0_3) sub 7) sub sign(x_0_2)))**2 mod -5)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "+ 2 - 2 - 1 - 1 + 3 + 4 + 5 + 2 - 2 - 3 + 1 + 3 + 6 + 5 + 2 - 4 - 1 - 1 + 5 + 6 + 7 + 2 - 4 - 3 + 1", "x2": "sub abs x_0_1 x_0_3", "tree": "(abs(x_0_1) sub x_0_3)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "- 7 + 6 - 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 539 + 1176 + 1911 - 2 7440 - 8 4525 - 17 8752 + 327 1191 + 1217 8656 + 3057 4971 - 6 5422 8400 - 28 1325 8217 - 80 7177 9408 + 1956 1430 6251 + 9452 5477 7376 + 3 269 1729 6375", "x2": "mul mul n sub sqr INT+ 7 x_0_3 relu add n INT- 1 0", "tree": "((n mul ((7)**2 sub x_0_3)) mul relu((n add -10)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 6 + 5 + 9 + 9 + 14 + 15 + 21 + 23 + 30 + 33 + 41 + 45 + 54 + 59 + 69 + 75 + 86 + 93 + 105 + 113 + 126 + 135 + 149 + 159", "x2": "add n relu x_0_2", "tree": "(n add relu(x_0_2))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "+ 4 + 10 + 8 + 3 + 8 + 51 + 4 + 16 + 154 + 8 + 47 + 265 + 21 + 131 + 570 + 66 + 399 + 1475 + 236 + 1350 + 4458 + 934 + 5072 + 1 5418 + 4060", "x2": "idiv add x_0_2 mul n add n sub x_0_3 n mod INT+ 7 x_0_2", "tree": "((x_0_2 add (n mul (n add (x_0_3 sub n)))) idiv (7 mod x_0_2))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "3"}
{"x1": "+ 0 + 0 + 1 + 2 + 3 + 5 + 7 + 9 + 11 + 14 + 17 + 20 + 24 + 28 + 32 + 36 + 41 + 46 + 51 + 57 + 63 + 69", "x2": "idiv sqr n INT+ 7", "tree": "((n)**2 idiv 7)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "0"}
{"x1": "+ 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 144 + 169 + 196 + 225 + 256 + 289 + 324 + 361 + 400 + 441 + 484", "x2": "sqr n", "tree": "(n)**2", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "0"}
{"x1": "- 5 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100 + 121 + 145 + 171 + 199 + 229 + 261 + 295 + 331 + 369 + 409 + 451 + 495 + 541", "x2": "abs add relu add idiv x_0_1 n INT- 9 sqr n", "tree": "abs((relu(((x_0_1 idiv n) add -9)) add (n)**2))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "- 9 + 7 - 17 + 47 - 193 + 959 - 5761 + 4 319 - 32 2561 + 290 3039 - 2903 401 + 3 1933 4399 - 38 3201 2801 + 498 1616 6399 - 6974 2632 9601 + 10 4613 9494 3999 - 167 3823 1910 4001 + 2845 4994 2476 7999 - 5 1218 9896 4582 4001 + 97 3160 8032 7065 5999 - 1946 3216 654 1312 1 + 4 872 7537 3736 7551 9999 - 89 9200 5822 2208 6144 1", "x2": "mod x_0_1 mul sub sign mod INT+ 7 mul mul n INT+ 2 INT- 1 0 x_0_1 abs n", "tree": "(x_0_1 mod ((sign((7 mod ((n mul 2) mul -10))) sub x_0_1) mul abs(n)))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "1"}
{"x1": "- 9 - 10 + 0 - 2 - 6 - 8 - 13 - 3 - 5 - 10 + 0 - 2 - 7 - 18 - 8 - 22 - 12 - 2 - 13 - 3 - 17 - 7 - 27", "x2": "mod add relu INT+ 1 0 x_0_1 sub x_0_1 relu relu n", "tree": "((relu(10) add x_0_1) mod (x_0_1 sub relu(relu(n))))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 4 + 3 - 7 + 8 - 7 + 7 + 25 - 28 + 49 + 15 - 544 + 100 - 2280 - 81 + 169 - 9804 + 225 + 256 - 2 8272 + 324 - 5 264 - 6 5136 + 441 - 10 4492 + 529 + 576", "x2": "sub sqr add INT- 2 n mul idiv n n relu mul x_0_4 relu x_0_4", "tree": "(((-2 add n))**2 sub ((n idiv n) mul relu((x_0_4 mul relu(x_0_4)))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 9 + 2 + 3 - 5 - 5 - 14 - 15 - 25 - 27 - 38 - 41 - 53 - 57 - 70 - 75 - 89 - 95 - 110 - 117 - 133 - 141 - 158 - 167 - 185", "x2": "sub add mul relu n INT- 1 x_0_2 add add INT+ 4 abs INT- 8 INT- 9", "tree": "(((relu(n) mul -1) add x_0_2) sub ((4 add abs(-8)) add -9))", "n_input_points": "22", "n_ops": "7", "n_recurrence_degree": "2"}
{"x1": "+ 1 - 1 + 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1 + 1 - 1 - 1 + 1", "x2": "sign mod relu x_0_2 idiv n INT- 5", "tree": "sign((relu(x_0_2) mod (n idiv -5)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 4 + 7 + 9 + 10 + 10 + 9 + 7 + 4 + 0 - 5 - 11 - 18 - 26 - 35 - 45 - 56 - 68 - 81 - 95 - 110 - 126 - 143", "x2": "add x_0_1 sub INT+ 6 n", "tree": "(x_0_1 add (6 sub n))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 8 + 4 - 8 + 4 - 7 + 4 - 6 + 4 - 5 + 4 - 4 + 4 - 3 + 4 - 2 + 4 - 1 + 4 + 0 + 4 + 1 + 5 + 2 + 6 + 3", "x2": "add x_0_2 relu relu relu sign x_0_3", "tree": "(x_0_2 add relu(relu(relu(sign(x_0_3)))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "3"}
{"x1": "- 3 - 2 - 3 - 1 - 1 + 2 + 3 + 7 + 9 + 14 + 17 + 23 + 27 + 34 + 39 + 47 + 53 + 62 + 69 + 79 + 87 + 98 + 107 + 119", "x2": "add n sub x_0_2 add add sign INT- 6 INT- 3 INT+ 7", "tree": "(n add (x_0_2 sub ((sign(-6) add -3) add 7)))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "2"}
{"x1": "- 8 + 3 + 4 + 11 + 20 + 31 + 44 + 59 + 76 + 95 + 116 + 139 + 164 + 191 + 220 + 251 + 284 + 319 + 356 + 395 + 436 + 479 + 524", "x2": "sub abs mul n n mod INT+ 5 sub mod n x_0_1 INT- 8", "tree": "(abs((n mul n)) sub (5 mod ((n mod x_0_1) sub -8)))", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "1"}
{"x1": "+ 0 - 3 + 7 + 6 + 18 + 19 + 33 + 36 + 52 + 57 + 75 + 82 + 102 + 111 + 133 + 144 + 168 + 181 + 207 + 222 + 250 + 267 + 297 + 316", "x2": "add n add add sign n n x_0_2", "tree": "(n add ((sign(n) add n) add x_0_2))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 0 + 8 + 7 + 10 - 5 - 10 + 27 + 17 + 56 + 46 + 103 + 101 + 124 + 135 + 122 + 146 + 79 + 108 + 21 + 42 - 29 - 29 - 28 - 54 + 37 - 7 + 156 + 117", "x2": "add sub add x_0_2 n x_0_6 sub n sub sign sign x_0_2 sub relu n INT- 1 0", "tree": "(((x_0_2 add n) sub x_0_6) add (n sub (sign(sign(x_0_2)) sub (relu(n) sub -10))))", "n_input_points": "22", "n_ops": "9", "n_recurrence_degree": "6"}
{"x1": "+ 9 + 3 - 1 + 45 + 15 + 5 + 225 + 75 + 25 + 1125 + 375 + 125 + 5625 + 1875 + 625 + 2 8125 + 9375 + 3125 + 14 625 + 4 6875 + 1 5625 + 70 3125 + 23 4375 + 7 8125 + 351 5625", "x2": "abs mul x_0_3 INT+ 5", "tree": "abs((x_0_3 mul 5))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 0 + 5 - 4 + 0 - 10 - 7 - 18 - 16 - 28 - 27 - 40 - 40 - 54 - 55 - 70 - 72 - 88 - 91 - 108 - 112 - 130 - 135 - 154", "x2": "sub x_0_2 n", "tree": "(x_0_2 sub n)", "n_input_points": "22", "n_ops": "1", "n_recurrence_degree": "2"}
{"x1": "- 4 - 14 - 31 - 65 - 133 - 266 - 532 - 1064 - 2125 - 4247 - 8491 - 1 6976 - 3 3946 - 6 7886 - 13 5763 - 27 1517 - 54 3025 - 108 6038 - 217 2064 - 434 4116 - 868 8217 - 1737 6419 - 3475 2823", "x2": "sub mod n sub add n x_0_1 add INT+ 3 mod INT+ 3 sqr x_0_1 add mod n INT+ 3 sub n x_0_1", "tree": "((n mod ((n add x_0_1) sub (3 add (3 mod (x_0_1)**2)))) sub ((n mod 3) add (n sub x_0_1)))", "n_input_points": "22", "n_ops": "10", "n_recurrence_degree": "1"}
{"x1": "+ 7 - 3 + 5 + 4 + 14 + 42 + 308 + 2478 + 2 2316 + 22 3174 + 245 4928 + 2945 9150 + 3 8296 8964 + 53 6156 5510 + 804 2348 2664 + 1 2867 7572 2638 + 21 8751 8728 4860 + 393 7533 7112 7494 + 7481 3140 5142 2400 + 14 9626 2810 2844 8014 + 314 2151 9015 9740 8308 + 6912 7341 8351 4298 2790 + 15 8992 8862 2082 8860 4184 + 381 5829 2692 9989 2650 430", "x2": "add add mul x_0_1 mod n x_0_2 INT+ 7 INT+ 7", "tree": "(((x_0_1 mul (n mod x_0_2)) add 7) add 7)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
{"x1": "+ 6 + 2 + 16 + 12 + 26 + 22 + 36 + 32 + 46 + 42 + 56 + 52 + 66 + 62 + 76 + 72 + 86 + 82 + 96 + 92 + 106 + 102 + 116 + 112", "x2": "sub abs x_0_2 INT- 1 0", "tree": "(abs(x_0_2) sub -10)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "2"}
{"x1": "- 2 + 7 + 9 - 8 - 6 + 2 - 7 - 9 + 8 + 6 - 2 + 7 + 9 - 8 - 6 + 2 - 7 - 9 + 8 + 6 - 2 + 7 + 9 - 8 - 6 + 2 - 7", "x2": "sub mod sub x_0_2 INT+ 9 INT- 1 x_0_5", "tree": "(((x_0_2 sub 9) mod -1) sub x_0_5)", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "5"}
{"x1": "+ 9 + 2 - 1 - 3 - 9 + 7 + 14 + 8 + 6 + 5 + 0 + 17 + 25 + 20 + 19 + 19 + 15 + 33 + 42 + 38 + 38 + 39 + 36 + 55 + 65 + 62 + 63 + 65", "x2": "add abs sub mul sub abs INT- 3 sign INT+ 9 sign n n x_0_6", "tree": "(abs((((abs(-3) sub sign(9)) mul sign(n)) sub n)) add x_0_6)", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "6"}
{"x1": "- 1 + 2 - 8 + 10 + 18 + 6 + 36 + 51 + 36 + 84 + 109 + 90 + 165 + 205 + 180 + 295 + 358 + 324 + 499 + 597 + 549 + 814 + 964 + 895 + 1296", "x2": "idiv mul INT+ 3 add n add n x_0_3 INT+ 2", "tree": "((3 mul (n add (n add x_0_3))) idiv 2)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "3"}
{"x1": "+ 8 + 7 + 7 + 2 + 3 + 0 + 4 + 3 + 0 + 6 + 8 + 0 + 10 + 2 + 0 + 4 + 1 + 0 + 16 + 17 + 0 + 14 + 17 + 0 + 21 + 25", "x2": "mod mul x_0_3 sub add x_0_3 n x_0_4 n", "tree": "((x_0_3 mul ((x_0_3 add n) sub x_0_4)) mod n)", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "4"}
{"x1": "+ 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 1 6384 + 3 2768 + 6 5536 + 13 1072 + 26 2144 + 52 4288 + 104 8576 + 209 7152 + 419 4304 + 838 8608 + 1677 7216 + 3355 4432", "x2": "mul add INT+ 1 INT+ 1 x_0_1", "tree": "((1 add 1) mul x_0_1)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 9 + 252 - 7056 + 19 7568 - 553 1904 + 1 5489 3312 - 43 3701 2736 + 1214 3635 6608 - 3 4002 1798 5024 + 95 2061 358 672 - 2665 7709 25 8816 + 7 4641 5852 724 6848 - 208 9964 3858 291 1744 + 5851 9002 8024 8152 8832 - 16 3853 2078 4694 8280 7296 + 458 7889 8197 1455 1860 4288 - 1 2846 914 9520 745 2092 64 + 35 9690 5618 6562 865 8576 1792 - 1007 1335 7322 3738 4244 133 176 + 2 8199 7400 5026 4675 8832 3724 4928 - 78 9592 7214 741 924 7306 4285 7984 + 2210 8596 1994 750 5892 4580 2 3552 - 6 1904 693 5834 1016 4988 8240 65 9456", "x2": "mul INT- 4 mul INT+ 7 x_0_1", "tree": "(-4 mul (7 mul x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 3 - 6 + 12 - 24 + 48 - 96 + 192 - 384 + 768 - 1536 + 3072 - 6144 + 1 2288 - 2 4576 + 4 9152 - 9 8304 + 19 6608 - 39 3216 + 78 6432 - 157 2864 + 314 5728 - 629 1456 + 1258 2912", "x2": "mul sub mul sign n n sub n INT- 2 x_0_1", "tree": "(((sign(n) mul n) sub (n sub -2)) mul x_0_1)", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "1"}
{"x1": "- 2 + 2 - 4 - 6 + 5 + 2 - 2 + 7 + 13 + 0 - 2 + 2 + 2 + 20 + 0 + 2 - 2 - 2 + 12 + 0 - 2 + 2 + 2 + 16 + 0 + 2 - 2", "x2": "sub idiv mod sqr x_0_5 mul mul INT- 6 INT- 8 INT+ 5 INT+ 5 x_0_5", "tree": "((((x_0_5)**2 mod ((-6 mul -8) mul 5)) idiv 5) sub x_0_5)", "n_input_points": "22", "n_ops": "6", "n_recurrence_degree": "5"}
{"x1": "+ 4 + 8 + 3 - 9 + 6 + 144 + 392 + 192 - 729 + 600 + 1 7424 + 5 6448 + 3 2448 - 14 2884 + 13 5000 + 446 544 + 1631 3472 + 1051 3152 - 5158 1124 + 5400 0 + 19 6709 9904 + 78 9572 448 + 55 6145 7408 - 297 1072 7424 + 337 5000 0 + 1 3297 5953 5104 + 5 7559 8020 6592", "x2": "mul x_0_5 sqr n", "tree": "(x_0_5 mul (n)**2)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "5"}
{"x1": "+ 5 + 1 - 3 + 1 + 4 + 0 + 4 + 0 + 3 + 1 + 3 + 1 + 2 + 0 + 2 + 0 + 1 + 1 + 1 + 1 + 0 + 0 + 0 + 0 + 1 + 1", "x2": "abs add x_0_4 add abs n sub INT- 1 n", "tree": "abs((x_0_4 add (abs(n) add (-1 sub n))))", "n_input_points": "22", "n_ops": "5", "n_recurrence_degree": "4"}
{"x1": "- 5 + 9 - 7 - 5 + 67 - 5 - 5 + 531 - 5 - 5 + 4243 - 5 - 5 + 3 3939 - 5 - 5 + 27 1507 - 5 - 5 + 217 2051 - 5 - 5 + 1737 6403 - 5 - 5", "x2": "mod INT- 5 mul INT+ 8 x_0_3", "tree": "(-5 mod (8 mul x_0_3))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "3"}
{"x1": "+ 10 + 80 + 640 + 5120 + 4 960 + 32 7680 + 262 1440 + 2097 1520 + 1 6777 2160 + 13 4217 7280 + 107 3741 8240 + 858 9934 5920 + 6871 9476 7360 + 5 4975 5813 8880 + 43 9804 6511 1040 + 351 8437 2088 8320 + 2814 7497 6710 6560 + 2 2517 9981 3685 2480 + 18 143 9850 9481 9840 + 144 1151 8807 5855 8720 + 1152 9215 460 6846 9760 + 9223 3720 3685 4775 8080 + 7 3786 9762 9483 8206 4640", "x2": "mul mod INT+ 8 x_0_1 x_0_1", "tree": "((8 mod x_0_1) mul x_0_1)", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "- 1 + 30 + 330 + 3320 + 3 3210 + 33 2100 + 332 990 + 3320 9880 + 3 3209 8770 + 33 2098 7660 + 332 987 6550 + 3320 9876 5440 + 3 3209 8765 4330 + 33 2098 7654 3220 + 332 987 6543 2110 + 3320 9876 5432 1000 + 3 3209 8765 4320 9890 + 33 2098 7654 3209 8780 + 332 987 6543 2098 7670 + 3320 9876 5432 987 6560 + 3 3209 8765 4320 9876 5450 + 33 2098 7654 3209 8765 4340 + 332 987 6543 2098 7654 3230", "x2": "mul INT- 1 0 add INT- 6 sub abs n x_0_1", "tree": "(-10 mul (-6 add (abs(n) sub x_0_1)))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "1"}
{"x1": "- 9 + 4 + 6 - 5 + 0 + 684 + 0 + 4 3776 + 0 + 437 7600 + 0 + 6 3037 4400 + 0 + 1235 5338 2400 + 0 + 31 6296 6589 4400 + 0 + 1 248 117 4978 5600 + 0 + 409 9204 6999 1424 0 + 0 + 19 8401 5074 7584 9216 0 + 0 + 1 1427 9268 3060 8914 8416 0 + 0 + 772 5278 5374 9162 6432 9216 0", "x2": "relu mul mul add mul x_0_4 x_0_3 x_0_2 n mul abs n sign n", "tree": "relu(((((x_0_4 mul x_0_3) add x_0_2) mul n) mul (abs(n) mul sign(n))))", "n_input_points": "22", "n_ops": "8", "n_recurrence_degree": "4"}
{"x1": "+ 3 + 1 + 0 - 5 - 8 + 14 + 10 + 8 + 3 + 0 + 36 + 28 + 24 + 14 + 8 + 80 + 64 + 56 + 36 + 24 + 168 + 136 + 120 + 80 + 56 + 344 + 280", "x2": "add relu relu x_0_5 add x_0_5 INT+ 8", "tree": "(relu(relu(x_0_5)) add (x_0_5 add 8))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "5"}
{"x1": "+ 6 + 12 + 24 + 48 + 96 + 192 + 384 + 768 + 1536 + 3072 + 6144 + 1 2288 + 2 4576 + 4 9152 + 9 8304 + 19 6608 + 39 3216 + 78 6432 + 157 2864 + 314 5728 + 629 1456 + 1258 2912 + 2516 5824", "x2": "relu add x_0_1 x_0_1", "tree": "relu((x_0_1 add x_0_1))", "n_input_points": "22", "n_ops": "2", "n_recurrence_degree": "1"}
{"x1": "+ 1 + 2 + 4 + 7 + 11 + 16 + 22 + 29 + 37 + 46 + 56 + 67 + 79 + 92 + 106 + 121 + 137 + 154 + 172 + 191 + 211 + 232 + 254", "x2": "sub n sub sub INT- 4 INT- 5 x_0_1", "tree": "(n sub ((-4 sub -5) sub x_0_1))", "n_input_points": "22", "n_ops": "3", "n_recurrence_degree": "1"}
{"x1": "- 9 + 9 + 9 - 23 - 17 + 36 + 19 - 68 - 3 + 100 - 23 - 192 + 19 + 196 - 81 - 380 + 97 + 324 - 335 - 632 + 441 + 484 - 863 - 948", "x2": "mod sqr n mul add n x_0_2 INT- 3", "tree": "((n)**2 mod ((n add x_0_2) mul -3))", "n_input_points": "22", "n_ops": "4", "n_recurrence_degree": "2"}
